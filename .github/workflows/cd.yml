name: Test and Deploy

on:
  push:
    branches:
    - master
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test-and-deploy:
    name: Test, build, and deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get tools versions
      id: versions
      run: |
        echo "::set-output name=rustc::`rustc --version | awk '{print $2}'`"
        echo "::set-output name=node::10.16"
    - name: Cache backend (cargo) dependencies
      uses: actions/cache@v2
      with:
        path: |
          target
          .cargo_home
        key: ${{ runner.os }}-rustc-${{ steps.versions.outputs.rustc }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rustc-${{ steps.versions.outputs.rustc }}-
          ${{ runner.os }}-rustc-
    - name: Run backend tests
      run: CARGO_HOME=.cargo_home cargo test

    - name: Install wasm-pack 0.8.1
      uses: jetli/wasm-pack-action@v0.3.0
      with:
        # Restrict to version 0.8.1 to work around this issue:
        # https://users.rust-lang.org/t/unexpected-wasm-opt-crash-when-running-wasm-pack/46573
        # https://github.com/rustwasm/wasm-pack/issues/886
        version: v0.8.1

    - name: Build backend
      run: cd wasm && CARGO_HOME=../.cargo_home wasm-pack build

    - name: Install node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ steps.versions.outputs.node }}

    - name: Audit npm dependencies (with --audit-level=high)
      run: cd wasm/www && npm audit --audit-level=high

    - name: Cache frontend (npm) dependencies
      uses: actions/cache@v2
      with:
        path: wasm/www/node_modules
        key: ${{ runner.os }}-node-${{ steps.versions.outputs.node }}-${{ hashFiles('wasm/www/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ steps.versions.outputs.node }}-
          ${{ runner.os }}-node-
    - name: Install frontend (npm) dependencies
      run: cd wasm/www && npm install

        #     - name: Get frontend assets from current staging branch
        #       uses: actions/checkout@v2
        #       with:
        #         ref: gh-pages-staging
        #         path: wasm/www/assets.tmp

          #     - name: Move over assets
          #       run: |
          #         cd wasm/www
          #         mv assets.tmp/*.dwe assets/*.dwe
          #         mv assets.tmp/*.bin assets/*.bin
          #         rm -rf assets.tmp

    - name: Build frontend
      run: cd wasm/www && npm run build

    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./wasm/www/dist
        commit_message: Deploy
