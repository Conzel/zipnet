// This file has been automatically generated by Jinja2 via the
// script generate_tests.py.
// Please do not change this file by hand.
use ml::convolutions::*;
use ml::transposed_convolutions::*;
use ndarray::{array, Array, Array3, Array4, Dimension};

fn arr_allclose<D: Dimension>(arr1: &Array<f32, D>, arr2: &Array<f32, D>) -> bool {
    (arr1 - arr2).map(|x| (*x as f32).abs()).sum() < 1e-3
}

#[test]
fn test_py_implementation_random_arrays_conv2d_torch_transpose() {
    let test_input1 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.17014849, 0.4305688, 0.5715329, 0.06520256, 0.12669589, 0.7501565, 0.9837982,
            0.55574155, 0.04181346, 0.23677547, 0.51154923, 0.02844254, 0.60484785, 0.72306335,
            0.22177844, 0.16487044, 0.46672952, 0.54035133, 0.6922357, 0.27845532, 0.66966337,
            0.41083884, 0.4583148, 0.70402896, 0.6177326, 0.9269775, 0.56033564, 0.9098013,
            0.2697065, 0.24242379, 0.7944849, 0.75231165, 0.9692583, 0.12854727, 0.9148518,
            0.3356524, 0.37189406, 0.55898565, 0.5888119, 0.44166553, 0.9034325, 0.2795916,
            0.7567664, 0.85028297, 0.96145767, 0.5566679, 0.84558666, 0.0474241, 0.23985276,
            0.07658575, 0.7197864, 0.13313323, 0.69580543, 0.12692, 0.38484824, 0.775336,
            0.52113837, 0.4364637, 0.14352316, 0.8997107,
        ],
    )
    .unwrap();

    let kernel1: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.64410555, 0.5390728, 0.53660643, 0.767672, 0.97435564, 0.8576183, 0.16569944,
            0.7964828, 0.9480399, 0.12285258, 0.35985747, 0.89837223, 0.04471071, 0.5066572,
            0.8659267, 0.43464628, 0.39133722, 0.81628793, 0.18875164, 0.988919, 0.45711017,
            0.2781115, 0.00756764, 0.8462714,
        ],
    )
    .unwrap();
    let conv_layer1 = ConvolutionLayer::new(kernel1, 1, Padding::Valid);
    let target_output1: Array3<f32> = Array::from_shape_vec(
        (2, 7, 15),
        vec![
            0.10959359, 0.40794998, 0.72685665, 0.57299536, 0.27925888, 0.6614592, 1.2385478,
            1.253056, 0.70873296, 0.39755562, 0.5864603, 0.45539245, 0.13568644, 0.06755805,
            0.00349424, 0.48130828, 1.327947, 1.6612926, 1.4667605, 1.2947567, 1.5463424, 2.34391,
            2.7588732, 2.443741, 1.8749343, 1.4955217, 1.6730479, 1.1872371, 0.3797012, 0.09672703,
            0.8152448, 2.4273765, 3.317974, 3.4303849, 2.9805152, 2.6264186, 3.5349765, 4.55764,
            4.847028, 3.9675834, 3.2383873, 3.1691847, 2.3459861, 1.3802106, 0.32013783,
            0.89710706, 2.653867, 3.8798182, 4.379381, 4.1506186, 3.384678, 3.538204, 4.4304075,
            5.147172, 4.9099483, 4.380204, 4.1754932, 2.7542498, 1.7874831, 0.7590933, 0.68644774,
            1.9243495, 3.401733, 4.4738464, 4.5555205, 4.048349, 3.7431107, 4.2020526, 5.1966686,
            5.370592, 4.8750114, 4.4221935, 2.9587703, 1.6488662, 0.42913848, 0.32885885,
            0.8938856, 1.8016046, 2.526425, 3.0296288, 2.9839592, 2.832371, 3.3263888, 3.6023474,
            4.1083274, 3.803255, 3.3021524, 2.4904332, 1.5728636, 0.36637214, 0.12870653,
            0.24679852, 0.6793133, 0.97682554, 1.2387398, 1.4376934, 1.0946155, 1.4915206,
            1.4234614, 1.7619336, 1.641935, 1.4878399, 1.2997808, 0.9818989, 0.8082751, 0.00760746,
            0.09320545, 0.24481457, 0.37992072, 0.26162863, 0.2598649, 0.41208673, 0.6292807,
            0.6377412, 0.40726316, 0.28823578, 0.2799352, 0.17476818, 0.1476363, 0.0079102,
            0.11325014, 0.57995975, 1.0646906, 1.0922439, 0.9936471, 0.8182787, 1.3175583,
            1.9544928, 1.6491503, 1.2478687, 0.80029774, 0.9435371, 1.0255735, 0.29234782,
            0.1960138, 0.4814059, 1.4247168, 2.4621816, 2.3847492, 2.0854175, 2.343249, 3.0471494,
            3.1840148, 3.2990134, 2.8665717, 2.6719494, 2.2396994, 1.5436064, 1.4633925,
            0.12274674, 0.8533602, 2.0178864, 2.6557832, 3.2524133, 2.804811, 2.896566, 2.613099,
            3.0529904, 3.7870543, 3.6236632, 3.449732, 3.1429198, 2.5039463, 1.2926526, 0.6115289,
            0.73405796, 1.8433676, 2.519855, 3.6014862, 3.4800398, 2.79, 3.40941, 3.068724,
            4.060342, 3.92303, 4.0904694, 3.1590874, 2.199483, 1.190678, 0.5346318, 0.4435561,
            0.92027926, 1.7680085, 1.8600156, 3.0020628, 2.1534557, 2.6040258, 2.9205892,
            3.0581641, 3.4906979, 3.1104321, 2.7470026, 1.3936561, 1.628101, 0.04694235, 0.2076949,
            0.26210654, 0.7954374, 0.9408252, 1.1050255, 1.3478723, 0.8675802, 1.6323878, 1.367492,
            1.4834446, 1.374923, 1.5367763, 1.1693957, 0.53272647, 0.76139945,
        ],
    )
    .unwrap();
    let current_output1: Array3<f32> = conv_layer1.convolve(&test_input1);

    assert!(
        arr_allclose(&current_output1, &target_output1),
        "{:?} was not equal to {:?}",
        current_output1,
        target_output1
    );

    let test_input2 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.70536447, 0.9289133, 0.0067116, 0.65220493, 0.72789615, 0.00785976, 0.32536873,
            0.09833383, 0.1022715, 0.7567798, 0.23972042, 0.38848338, 0.00744711, 0.8715701,
            0.07988323, 0.6283005, 0.8241853, 0.16570753, 0.6487234, 0.14438818, 0.6286194,
            0.34163022, 0.03235205, 0.25922647, 0.59344524, 0.9308157, 0.22162326, 0.91818297,
            0.97700953, 0.18019113, 0.775954, 0.14120784, 0.3426181, 0.5417864, 0.7768226,
            0.34603763, 0.6114103, 0.9716041, 0.5157695, 0.50755495, 0.6659802, 0.629322,
            0.60627973, 0.27978492, 0.28792506, 0.7547703, 0.0509604, 0.10449678, 0.89887625,
            0.6572328, 0.695583, 0.3626411, 0.37613922, 0.9241278, 0.39898983, 0.6908677,
            0.5511301, 0.36253917, 0.36786652, 0.88718724,
        ],
    )
    .unwrap();

    let kernel2: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.69587743, 0.7035832, 0.36392415, 0.7135373, 0.85647196, 0.7556754, 0.22876498,
            0.9373231, 0.4031665, 0.5617529, 0.34317794, 0.7926341, 0.4870034, 0.92333794,
            0.7462054, 0.9862549, 0.36252776, 0.31284246, 0.75677496, 0.01684272, 0.7376267,
            0.5566727, 0.921993, 0.36348057,
        ],
    )
    .unwrap();
    let conv_layer2 = ConvolutionLayer::new(kernel2, 1, Padding::Valid);
    let target_output2: Array3<f32> = Array::from_shape_vec(
        (2, 7, 15),
        vec![
            0.4908472, 1.1497136, 0.8288474, 1.0673871, 1.4952542, 0.67782235, 0.7649201,
            0.7112868, 0.2201815, 0.80487263, 0.7854421, 0.6719623, 0.75716025, 0.22353503,
            0.21823166, 0.50146484, 1.8695124, 2.140655, 2.275174, 2.9255335, 2.1345894, 2.2529166,
            1.6692817, 1.2458099, 1.9076096, 1.4376268, 1.8578448, 1.2014112, 0.52387697,
            0.27894014, 0.674904, 2.56186, 2.7525926, 3.8493924, 4.897358, 3.417065, 3.9291136,
            3.1991446, 2.0977273, 2.8766494, 2.8172853, 2.566244, 2.0886192, 1.1162592, 0.59127367,
            0.84571487, 2.59837, 3.392153, 3.845222, 4.988139, 4.218979, 4.4311686, 3.6763577,
            2.7741442, 3.380312, 2.8150642, 2.7324736, 2.2003713, 0.7736246, 0.3829256, 1.2716548,
            3.0931938, 3.9500651, 4.670638, 4.64554, 4.4008164, 4.53103, 4.2075167, 3.4004006,
            3.4037242, 3.019218, 3.3987947, 2.3212583, 1.2802901, 0.8085222, 0.8549412, 2.0478983,
            3.063258, 3.226218, 3.0567517, 2.8967102, 2.9162357, 3.1646667, 2.7300606, 2.5972097,
            2.2497625, 2.0772853, 1.926844, 1.0403473, 0.3872908, 0.32712278, 0.91844153, 1.112191,
            1.6350632, 1.212306, 1.318099, 1.2826312, 1.2236484, 1.6159959, 1.1431999, 1.17764,
            1.1838647, 1.1060979, 0.64926773, 0.7032149, 0.3435149, 1.148053, 1.4532161, 1.4198807,
            1.5199081, 1.2190274, 1.0801257, 0.7799334, 0.39739498, 0.72496057, 0.9952587,
            1.0552619, 0.9858367, 0.4274403, 0.2162581, 0.6549165, 1.5452174, 1.2589637, 2.3191228,
            3.3317792, 1.7018205, 2.3697035, 2.174327, 1.1745323, 2.2942336, 1.4968728, 1.3192706,
            1.312942, 0.44174927, 0.50248325, 0.8222328, 2.75988, 2.6808176, 3.7615035, 4.9507422,
            3.1226969, 4.077575, 3.0910194, 2.1400697, 3.0719647, 2.0747952, 3.3321, 2.2136943,
            1.1021925, 0.57284087, 0.8512665, 2.803479, 2.5619721, 4.461902, 5.0403085, 3.248877,
            4.7195144, 3.6292062, 2.8250487, 3.336928, 2.8396893, 2.442811, 1.428978, 1.0324738,
            0.47143853, 1.445126, 3.2056022, 3.4002743, 4.752879, 4.654633, 3.987211, 4.549189,
            3.5776212, 3.6615794, 3.72771, 2.975078, 2.79458, 2.9680235, 1.4625341, 0.71599615,
            1.2862042, 1.8490069, 2.0354843, 2.905847, 2.485798, 2.8768823, 2.3691313, 2.2496345,
            2.596432, 1.9940846, 1.7055821, 2.2220924, 1.0067096, 0.44971576, 0.855963, 0.6707463,
            0.7716373, 1.3876932, 1.2997291, 1.1460986, 1.327586, 0.9960981, 1.4587308, 1.257597,
            1.097573, 1.0455669, 1.244852, 0.68067396, 0.78812534, 0.3224753,
        ],
    )
    .unwrap();
    let current_output2: Array3<f32> = conv_layer2.convolve(&test_input2);

    assert!(
        arr_allclose(&current_output2, &target_output2),
        "{:?} was not equal to {:?}",
        current_output2,
        target_output2
    );

    let test_input3 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.84374106, 0.03665259, 0.23846498, 0.82509995, 0.97324103, 0.96826524, 0.77620417,
            0.8427075, 0.42989048, 0.76771307, 0.54514444, 0.7878393, 0.21897991, 0.975659,
            0.73295325, 0.69994044, 0.86701024, 0.76087946, 0.623545, 0.14890751, 0.8610666,
            0.21943341, 0.1644093, 0.6089244, 0.8612485, 0.02602104, 0.30423534, 0.5087405,
            0.16869895, 0.3329467, 0.179494, 0.33126613, 0.11996287, 0.21606164, 0.87119263,
            0.33579683, 0.2313126, 0.2576527, 0.3748985, 0.30113342, 0.8142977, 0.423247,
            0.8179498, 0.92175007, 0.21606776, 0.19149332, 0.4240341, 0.14780204, 0.46443272,
            0.00207204, 0.359202, 0.9019851, 0.21363449, 0.6390296, 0.5977058, 0.81350476,
            0.3685356, 0.90738845, 0.7828945, 0.9812083,
        ],
    )
    .unwrap();

    let kernel3: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.6726924, 0.9529279, 0.68714255, 0.17302093, 0.46750203, 0.53392637, 0.78055173,
            0.73126566, 0.6909357, 0.7335981, 0.3459232, 0.9043074, 0.46724817, 0.78965247,
            0.29283327, 0.39839587, 0.08403921, 0.8850151, 0.8576361, 0.34934825, 0.44388366,
            0.52934057, 0.54770446, 0.9949724,
        ],
    )
    .unwrap();
    let conv_layer3 = ConvolutionLayer::new(kernel3, 1, Padding::Valid);
    let target_output3: Array3<f32> = Array::from_shape_vec(
        (2, 7, 15),
        vec![
            0.5675782, 0.17064078, 0.8253388, 1.243874, 1.010474, 1.6387064, 2.0546336, 2.1709313,
            1.7511752, 1.8180135, 1.4533054, 1.5389014, 1.125019, 1.0148662, 0.5779574, 0.95133054,
            1.1235845, 1.6941607, 2.7362723, 3.4924097, 3.8094187, 3.930775, 3.6486404, 3.3560648,
            2.687555, 2.4141757, 2.9567425, 1.4271941, 1.3606052, 0.7192377, 1.3677979, 1.6743057,
            2.9625146, 4.3284616, 3.792181, 4.739936, 4.978223, 4.4698806, 4.2889557, 3.533832,
            3.7441034, 3.5003426, 2.868977, 2.4406948, 1.1694299, 1.1267803, 1.4281105, 2.5850773,
            3.3266597, 4.069784, 3.9412696, 4.172746, 4.135736, 3.5594692, 3.3293192, 3.256467,
            2.8440237, 2.0029845, 1.5427643, 0.77524203, 1.1246451, 0.91313744, 2.0693738,
            3.0507143, 2.4829822, 3.5137777, 3.895763, 3.8641808, 3.3897705, 3.5918174, 3.6349938,
            3.281647, 2.868554, 2.6148195, 1.0746043, 0.60151565, 0.5196458, 1.2378844, 1.9839165,
            2.1009965, 2.765364, 2.9595346, 3.6947522, 2.978152, 3.4621105, 3.097605, 2.747718,
            1.8901718, 1.4739242, 0.47308117, 0.3191315, 0.24939665, 0.56882244, 1.2330014,
            0.87845016, 1.5012124, 1.7151834, 1.5128442, 1.6784437, 1.9228654, 2.0127316,
            2.0524545, 1.8853807, 1.3859291, 0.88731396, 0.39423648, 0.3532688, 0.8496474,
            0.95859087, 1.0073793, 1.67402, 2.0198784, 2.0485854, 1.7148395, 1.6635919, 1.3753403,
            1.4712766, 1.1877892, 0.96424645, 0.4170353, 0.7685802, 0.64296573, 1.4051187,
            2.7182348, 2.7702703, 2.954448, 3.1947823, 3.031484, 2.6109684, 2.2652345, 2.0882747,
            2.1655953, 1.1768858, 1.1830723, 0.7538315, 0.8224102, 1.9015672, 2.1052215, 3.220642,
            3.2476315, 3.8881814, 4.2102537, 3.8436744, 4.0248756, 2.918682, 3.170381, 3.2773786,
            2.9271946, 1.944036, 1.2951398, 0.85229194, 0.78497386, 2.1948106, 3.046172, 3.4243126,
            3.6304226, 3.853129, 3.8318129, 3.179124, 3.3066096, 2.6498067, 2.2741194, 1.8050395,
            1.3795593, 0.86801803, 0.6518641, 1.1787294, 1.4598906, 2.5848718, 2.3693144,
            2.8359227, 3.2537024, 3.2413304, 2.8520699, 3.0193317, 3.2344403, 3.1658633, 2.7069726,
            2.5556846, 0.93445385, 0.43447646, 0.32083118, 0.8865528, 1.7620277, 1.2988503,
            2.385697, 2.3695133, 3.0247624, 2.5814161, 2.8293417, 2.5754488, 2.0779908, 1.3625029,
            1.2590873, 0.68447113, 0.13600135, 0.41163674, 0.3131742, 1.0450479, 1.0223352,
            1.1339715, 1.7328582, 1.2634151, 1.7290121, 1.5476754, 2.0053117, 1.7496616, 2.1187248,
            1.2145008, 0.9762752,
        ],
    )
    .unwrap();
    let current_output3: Array3<f32> = conv_layer3.convolve(&test_input3);

    assert!(
        arr_allclose(&current_output3, &target_output3),
        "{:?} was not equal to {:?}",
        current_output3,
        target_output3
    );

    let test_input4 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.64743847, 0.36691284, 0.5396585, 0.5372604, 0.47547424, 0.44373918, 0.34716287,
            0.21774843, 0.9437953, 0.51856595, 0.15765554, 0.9350713, 0.86233217, 0.81734437,
            0.6566154, 0.3879487, 0.28848994, 0.5814131, 0.06870039, 0.78543746, 0.47194287,
            0.12733267, 0.6111727, 0.25675833, 0.74741316, 0.45714313, 0.9649919, 0.57969916,
            0.5208711, 0.93666834, 0.13247305, 0.7087714, 0.17877895, 0.40767, 0.6906785,
            0.9675369, 0.224454, 0.28950995, 0.75431514, 0.99582964, 0.8120864, 0.9536324,
            0.7703749, 0.683158, 0.16371861, 0.42877796, 0.7300311, 0.9456737, 0.05700503,
            0.19623296, 0.44457257, 0.5512328, 0.15101007, 0.25140873, 0.2031063, 0.5537751,
            0.3641559, 0.701937, 0.27669305, 0.85076064,
        ],
    )
    .unwrap();

    let kernel4: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.00186597, 0.8646356, 0.43744904, 0.96080875, 0.23741227, 0.15485734, 0.75313085,
            0.564682, 0.60942906, 0.6398819, 0.42372492, 0.15368015, 0.67241764, 0.6473561,
            0.90739846, 0.5067197, 0.40315583, 0.25059524, 0.7478619, 0.1319153, 0.37287286,
            0.25689796, 0.60438925, 0.35665986, 0.846729, 0.3316532, 0.10154326, 0.6658951,
            0.40131757, 0.57013196, 0.35000807, 0.7910046, 0.70429957, 0.7035094, 0.7132858,
            0.03995521, 0.25977603, 0.15790685, 0.05433872, 0.8246988, 0.38907993, 0.635939,
            0.6432024, 0.24740443, 0.6876462, 0.21294773, 0.13678746, 0.45131883, 0.00020906,
            0.18134636,
        ],
    )
    .unwrap();
    let conv_layer4 = ConvolutionLayer::new(kernel4, 1, Padding::Valid);
    let target_output4: Array3<f32> = Array::from_shape_vec(
        (2, 9, 16),
        vec![
            0.0012081, 0.10094525, 0.33216193, 0.56811255, 0.7400869, 0.7123767, 0.7442988,
            0.68345237, 0.58472544, 0.5807593, 0.72029257, 0.80532044, 0.82628846, 0.66945934,
            0.5326045, 0.3486627, 0.56140745, 0.9399154, 1.3356284, 2.0740693, 2.2874668,
            1.9837875, 1.716491, 1.39694, 1.8882335, 2.104328, 1.4933232, 2.124449, 1.7192082,
            0.80644727, 0.775475, 0.33595613, 1.0302191, 1.998852, 2.583725, 2.9748883, 3.5610433,
            3.4226344, 3.0692239, 2.96853, 3.321567, 2.7698498, 2.840691, 2.9451616, 2.5099962,
            2.2122087, 1.3379376, 0.991876, 1.6459498, 2.5850515, 3.9247265, 4.827635, 5.2690268,
            5.772416, 5.2132006, 4.858283, 5.2206364, 4.8028917, 4.282114, 5.5574627, 4.048646,
            2.773323, 2.5081644, 1.0898588, 1.5033786, 2.862821, 4.7805805, 5.877347, 7.307981,
            7.1824517, 6.775401, 6.538454, 5.4946365, 5.522093, 6.1132817, 6.4052835, 5.425385,
            4.359354, 2.429807, 2.0282636, 1.0703251, 2.106554, 4.336308, 5.34471, 6.178209,
            6.4855537, 5.921902, 6.142313, 5.182172, 5.5604553, 4.8293524, 6.204914, 4.8317685,
            3.2102947, 2.6135647, 1.3526, 0.4180392, 1.1197717, 2.5899286, 3.6787088, 4.995315,
            5.115187, 5.5970316, 5.265234, 4.0187964, 4.6230607, 3.6709142, 5.0888324, 3.9414115,
            3.6909642, 2.0604835, 1.670716, 0.10805907, 0.43564016, 1.1516469, 1.9816339, 2.678632,
            3.0871968, 3.3169868, 3.598927, 3.0491931, 3.2319534, 2.754617, 3.591061, 2.8151653,
            2.32549, 1.4778242, 1.1041615, 0.01353369, 0.0830646, 0.28283918, 0.60092473,
            0.8661339, 0.88130593, 0.7952666, 0.97623026, 0.78613335, 1.1418277, 1.090309,
            1.5329037, 1.1963948, 1.4028294, 0.34651238, 0.7203637, 0.21472505, 0.34829652,
            0.33327046, 0.6336343, 0.6479292, 0.62315726, 0.613404, 0.51086235, 0.6769986,
            0.7405876, 0.43014786, 0.7996003, 0.7363243, 0.20912902, 0.39738986, 0.19912131,
            0.3517382, 1.1222825, 1.0515177, 1.7151324, 1.6946856, 1.6929367, 1.4538304, 1.2904817,
            1.4273158, 1.5265783, 1.4436835, 1.6393872, 1.5038053, 0.68927085, 0.84626096,
            0.18258213, 0.7665721, 1.8786343, 2.1671283, 3.3707914, 3.2041273, 3.1342132,
            2.9098833, 2.1745033, 3.2209306, 2.658571, 2.3931203, 3.2704709, 2.513286, 1.3500825,
            1.4430041, 0.6631714, 0.9843868, 2.566538, 2.6731634, 4.2893147, 4.1364717, 4.4475513,
            4.217164, 3.3902946, 4.191441, 3.1266067, 3.377184, 3.7840466, 3.1574419, 1.7405117,
            1.9055266, 0.44980133, 1.2545909, 2.7284584, 3.6535933, 5.217187, 5.26492, 5.8921623,
            5.811326, 4.958589, 5.6647253, 4.4135876, 4.9029474, 5.697627, 4.5958104, 2.9794989,
            2.7604625, 0.91681695, 0.94684446, 2.2062387, 3.3748205, 4.957185, 4.8318734,
            5.0474157, 4.925593, 4.3760304, 4.547528, 3.671855, 4.789061, 4.515167, 4.051449,
            2.184032, 2.0435264, 0.5899382, 0.55416083, 1.2386613, 2.4544735, 3.659183, 3.8062553,
            4.0602446, 3.9088976, 3.7008402, 3.1740096, 2.7760344, 3.300087, 3.9453835, 3.6422808,
            2.2079957, 1.6967796, 0.55962133, 0.15084553, 0.44401407, 1.1412336, 2.057647,
            2.5562935, 2.8625245, 3.0137796, 2.8807292, 2.627982, 2.2456012, 2.2282472, 2.3143942,
            2.3884203, 1.4744875, 0.99321723, 0.17167234, 0.03250039, 0.15253955, 0.44044718,
            0.8324151, 0.99119717, 1.0469453, 0.87933624, 0.87173975, 0.97038364, 1.3018988,
            1.376386, 1.6121292, 1.3837466, 1.019182, 0.6351996, 0.15428235,
        ],
    )
    .unwrap();
    let current_output4: Array3<f32> = conv_layer4.convolve(&test_input4);

    assert!(
        arr_allclose(&current_output4, &target_output4),
        "{:?} was not equal to {:?}",
        current_output4,
        target_output4
    );

    let test_input5 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.9026019, 0.54676574, 0.33139232, 0.83673465, 0.05539654, 0.5554673, 0.9149804,
            0.9791666, 0.9000323, 0.6329186, 0.30872977, 0.30553624, 0.04431259, 0.5287215,
            0.3358437, 0.72178566, 0.72704846, 0.85191244, 0.07464863, 0.867838, 0.5849202,
            0.14913943, 0.18325551, 0.40498126, 0.75359416, 0.01821492, 0.5917236, 0.91982275,
            0.5287654, 0.7151285, 0.38420153, 0.517026, 0.5150141, 0.26934662, 0.7356045,
            0.97902703, 0.6362754, 0.27803296, 0.32063982, 0.83432084, 0.78711736, 0.28247103,
            0.7812688, 0.5270146, 0.4719829, 0.47535485, 0.23715672, 0.4404677, 0.90286416,
            0.66611385, 0.02649495, 0.3193976, 0.16608049, 0.5121102, 0.17436478, 0.313714,
            0.47244504, 0.9906781, 0.9064671, 0.29454133,
        ],
    )
    .unwrap();

    let kernel5: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.99321055, 0.10556214, 0.73655206, 0.98323476, 0.20423086, 0.17643407, 0.14977625,
            0.6592577, 0.05175687, 0.48578474, 0.48754972, 0.06378802, 0.42867732, 0.52122,
            0.9192946, 0.6358971, 0.79292244, 0.70010746, 0.415587, 0.34320405, 0.82249755,
            0.687625, 0.78416556, 0.73337436, 0.3897719, 0.12515199, 0.28283548, 0.42605233,
            0.9316805, 0.5554448, 0.16320723, 0.53714937, 0.3237799, 0.70876056, 0.2764571,
            0.53866875, 0.4497216, 0.87574345, 0.68573385, 0.8920509, 0.8935865, 0.5300166,
            0.01496939, 0.87644994, 0.4283556, 0.92702305, 0.4744624, 0.61210716, 0.5451011,
            0.06360459,
        ],
    )
    .unwrap();
    let conv_layer5 = ConvolutionLayer::new(kernel5, 1, Padding::Valid);
    let target_output5: Array3<f32> = Array::from_shape_vec(
        (2, 9, 16),
        vec![
            0.8964737, 0.70230323, 0.8656738, 1.7300599, 1.4542937, 1.6298645, 1.8384266, 2.128209,
            1.911562, 2.303514, 2.2323308, 2.0442016, 1.3471736, 0.86585844, 0.44821906, 0.2513028,
            0.1392923, 0.72585607, 0.62290275, 1.9506283, 2.5923638, 2.7337904, 2.3887885,
            3.2415829, 2.688749, 2.794142, 2.6971202, 3.0988421, 1.9229268, 1.1361458, 0.86281043,
            0.5431904, 1.4179688, 1.2112696, 2.0672755, 3.4025002, 4.0884247, 3.9831123, 4.7318215,
            5.510153, 5.1846404, 4.802099, 4.925953, 5.224331, 3.2017179, 2.2837558, 2.1307266,
            1.3233136, 1.6316147, 1.5061586, 2.2305105, 4.7204847, 5.26931, 5.543639, 6.5664573,
            7.26017, 6.742149, 6.031075, 5.385779, 5.7507615, 3.6535416, 2.758049, 2.53789,
            1.5771319, 1.746871, 2.5280526, 3.0147233, 5.647497, 6.581493, 6.61812, 5.6821904,
            8.013903, 7.074882, 7.592065, 7.1319723, 7.2801332, 5.4559197, 4.2539115, 3.2353518,
            1.7289478, 1.3139683, 1.0162201, 2.1940823, 4.2561517, 5.6196547, 5.0867424, 5.2944956,
            5.9956694, 5.0770297, 5.0565963, 4.791665, 4.8307595, 3.8753793, 3.6532214, 2.507966,
            1.4237771, 1.4445218, 1.7619555, 2.3294587, 3.1673305, 4.4837737, 3.713679, 4.0148387,
            4.066754, 3.8725865, 4.1887217, 4.2571607, 4.2749376, 3.781929, 3.4719567, 1.8967322,
            0.9355941, 1.0176746, 1.0675515, 1.3165908, 1.8379471, 2.3368435, 2.6035786, 1.8683702,
            2.229832, 2.380636, 2.7991476, 2.6456785, 2.2888494, 2.0250041, 1.9283674, 1.0307946,
            0.38769096, 0.18439272, 0.5746386, 1.1589972, 1.0003232, 0.79395795, 0.7476142,
            0.5570084, 0.80104566, 0.6496697, 0.9796781, 1.2763314, 1.6956491, 1.5005445,
            0.96801186, 0.4544032, 0.11480393, 0.11296242, 0.21573997, 0.616914, 1.2598832,
            1.64732, 1.332274, 1.2899114, 1.3962629, 1.3130311, 2.0860944, 2.3499322, 2.1415257,
            1.616087, 1.0271897, 0.5592227, 0.28323913, 0.26083365, 0.7128795, 0.9455364,
            1.6084998, 2.2354374, 2.402547, 2.679119, 3.343076, 3.202997, 3.2893722, 2.9921968,
            2.9666095, 1.9057634, 1.1214952, 0.8401878, 0.5203924, 0.49140263, 0.8238105, 1.990555,
            2.4968421, 3.4409585, 3.9288676, 4.001265, 4.9471836, 4.4906597, 4.365219, 3.821376,
            3.7262378, 2.8603497, 2.4440134, 2.0519118, 1.2867498, 1.1525904, 1.9373357, 2.6126049,
            4.921108, 5.238374, 5.6578927, 6.4683876, 7.252305, 6.5044513, 7.047933, 6.0050044,
            5.7341623, 4.4312243, 3.1216178, 2.0356734, 1.2872753, 1.1566577, 1.9801265, 3.900931,
            5.433753, 7.042606, 7.019121, 6.138407, 7.6843433, 7.3470836, 6.931028, 6.356632,
            6.4753985, 5.5096664, 4.434304, 2.5197692, 1.3214906, 1.2531707, 1.8548578, 3.0083916,
            4.528694, 5.4011545, 5.6845036, 5.515546, 5.7288046, 5.3400307, 4.813843, 5.33767,
            5.491209, 4.0530767, 3.675341, 2.182134, 0.9687896, 1.3960527, 1.5045873, 2.9556978,
            3.5079682, 4.026636, 4.4041033, 4.0948524, 4.536013, 3.7022076, 4.1066303, 4.189802,
            4.331963, 3.416921, 2.852503, 1.540746, 0.4826609, 1.1945968, 1.5908545, 1.9384766,
            2.6370811, 2.5886948, 2.473967, 2.5256531, 2.2376268, 2.5973048, 3.1222115, 3.2002811,
            3.1512651, 2.523132, 2.0612113, 0.956028, 0.18857057, 0.5014912, 0.61959267, 1.0042691,
            1.1656868, 0.54694307, 0.66899914, 0.52507967, 0.77074015, 0.73461664, 1.0679893,
            1.344289, 1.520264, 1.344455, 0.7140478, 0.1838239, 0.01873418,
        ],
    )
    .unwrap();
    let current_output5: Array3<f32> = conv_layer5.convolve(&test_input5);

    assert!(
        arr_allclose(&current_output5, &target_output5),
        "{:?} was not equal to {:?}",
        current_output5,
        target_output5
    );

    let test_input6 = Array::from_shape_vec(
        (1, 5, 12),
        vec![
            0.729173, 0.19460331, 0.8634254, 0.6576018, 0.9657459, 0.22873744, 0.47843248,
            0.22157177, 0.9162307, 0.02157675, 0.44649428, 0.2792192, 0.685827, 0.75294507,
            0.7919586, 0.22560763, 0.88778716, 0.80092114, 0.00003577, 0.9737877, 0.9146247,
            0.13869576, 0.7059647, 0.0936791, 0.2647747, 0.52025, 0.0330946, 0.17754778,
            0.41998118, 0.02919354, 0.82382417, 0.4156855, 0.49590722, 0.69720376, 0.7155315,
            0.40795937, 0.15397236, 0.02265206, 0.7090415, 0.75877124, 0.67035425, 0.39483562,
            0.86222315, 0.9993058, 0.84902793, 0.26427644, 0.86764544, 0.24274233, 0.69865257,
            0.5739991, 0.7620597, 0.29289714, 0.88402116, 0.8942853, 0.7757528, 0.16431308,
            0.48939565, 0.56055367, 0.46453193, 0.9573795,
        ],
    )
    .unwrap();

    let kernel6: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.8899508, 0.9537467, 0.7403127, 0.8733311, 0.55396014, 0.63514715, 0.3379795,
            0.08292098, 0.52047473, 0.7634967, 0.29953358, 0.30692965, 0.1354166, 0.29781443,
            0.48491392, 0.02808736, 0.01351478, 0.80891573, 0.83071965, 0.6001484, 0.8855644,
            0.6626128, 0.4124968, 0.9783562, 0.3691911, 0.16098963, 0.6197168, 0.06039312,
            0.1396195, 0.16172563, 0.810474, 0.13108306, 0.80679554, 0.88564533, 0.36205766,
            0.46075395, 0.33537498, 0.2560622, 0.21130918, 0.4980414, 0.59781086, 0.45529485,
            0.97702754, 0.3337948, 0.65126085, 0.61877847, 0.9497022, 0.4359102, 0.42070097,
            0.11615072,
        ],
    )
    .unwrap();
    let conv_layer6 = ConvolutionLayer::new(kernel6, 1, Padding::Valid);
    let target_output6: Array3<f32> = Array::from_shape_vec(
        (2, 9, 16),
        vec![
            0.6489281, 0.6363195, 1.1104196, 1.2124062, 2.1869607, 1.2105148, 1.6434257, 1.1790514,
            1.9610924, 0.88351136, 1.1154103, 0.7604945, 1.1230726, 0.11528397, 0.40324196,
            0.24726659, 1.3057986, 1.537733, 2.501529, 1.937175, 3.6932244, 2.9202714, 2.8933556,
            2.2232916, 3.9797597, 2.2615874, 2.052073, 2.0443783, 1.9236252, 0.27674472, 0.9274348,
            0.2679731, 1.4295578, 1.7856132, 2.413589, 2.2401252, 3.7208004, 3.5675259, 3.3748655,
            3.694179, 4.4702473, 2.9832628, 3.8164701, 3.5157418, 2.2674518, 1.2977967, 1.5241973,
            0.53852427, 1.5340917, 1.867383, 2.794289, 4.057321, 6.074115, 5.0680885, 5.728296,
            6.6500316, 7.363082, 4.262001, 6.379623, 5.6309094, 3.654338, 2.0441144, 2.2905777,
            0.79710126, 1.96752, 3.1143746, 4.3549433, 5.2860847, 8.178611, 7.553515, 7.9392505,
            7.3300347, 8.393988, 6.9449663, 7.4884562, 7.1228848, 5.060073, 3.140586, 2.7425365,
            1.3716842, 1.3914821, 2.3460045, 3.4075751, 3.5241914, 5.2971945, 5.4833946, 5.9998703,
            5.4864593, 6.170858, 5.862005, 7.053877, 6.065644, 3.8241777, 3.4336238, 2.2308044,
            1.1682174, 0.7983649, 1.0731456, 1.9271762, 2.6240592, 3.6896641, 3.793962, 4.6026955,
            5.072307, 5.2354045, 5.0186996, 5.4541945, 5.273583, 3.492494, 2.6729093, 2.5255783,
            0.7830194, 0.6954496, 0.995028, 1.6570902, 2.468829, 3.6767375, 4.055349, 4.216402,
            3.920307, 4.487591, 4.2550015, 3.7508314, 3.6156776, 2.6592274, 1.9554319, 1.7158,
            1.0262765, 0.38702568, 0.85139155, 1.1991835, 1.4417187, 1.6852928, 1.9816397,
            1.9983215, 1.7556379, 1.6358081, 1.559583, 1.307641, 1.511212, 1.47331, 0.94998616,
            0.7460708, 0.35345602, 0.11738929, 0.62230486, 0.6326928, 1.3312227, 1.6538033,
            1.7591103, 1.6347702, 1.5130627, 1.281846, 1.2756947, 0.940027, 1.1016015, 1.0118666,
            0.40892172, 0.44320133, 0.17277484, 0.5622918, 0.8932425, 1.8588719, 2.3530607,
            3.3205254, 2.9585824, 3.4528637, 2.53712, 3.7432504, 2.3507423, 2.3717005, 2.6668668,
            2.1163783, 0.86843944, 1.0440018, 0.32314172, 0.51168156, 1.4549072, 1.7643343,
            2.7603707, 3.8590553, 4.4224033, 3.213608, 4.2877088, 3.9769692, 3.8737285, 3.5768516,
            4.4332395, 3.3248668, 2.0488358, 1.8671823, 0.46311823, 0.3320993, 1.7573066,
            1.6588522, 3.865159, 4.685804, 5.356868, 4.922861, 4.9787536, 5.963264, 5.4521728,
            5.4392266, 5.9578223, 3.8865538, 2.9101038, 2.2275848, 0.69594705, 0.4375664,
            1.9459076, 3.3889384, 4.528802, 5.2830024, 6.208653, 6.5772877, 6.5772433, 6.5604,
            6.4795847, 6.437641, 6.5402966, 5.3942313, 3.6467257, 3.066768, 1.0726148, 0.5901491,
            1.2501036, 2.1459234, 2.9634004, 4.3877645, 4.9320216, 4.618097, 5.1963754, 5.511117,
            5.483773, 5.7338634, 5.495529, 3.5835416, 3.2309039, 2.0726457, 1.1975492, 0.1065122,
            0.9178644, 1.1651965, 2.7244174, 2.856215, 3.2195463, 3.2488115, 4.059913, 3.9282346,
            4.111688, 3.316761, 3.7314131, 3.5118241, 2.1456099, 1.9327232, 0.5668382, 0.1224468,
            0.75831014, 0.96194583, 1.561291, 1.7982824, 2.6143978, 2.6982732, 2.5123973, 2.311734,
            2.6368108, 2.455742, 2.0500386, 2.1297958, 1.3098421, 0.77386355, 0.4309652,
            0.11299002, 0.34578288, 0.67902327, 1.0641589, 1.0835239, 1.1735405, 1.1687872,
            1.3625805, 1.2100884, 0.9587694, 0.71893364, 0.9400084, 0.999893, 0.8444548,
            0.67745954, 0.11120033,
        ],
    )
    .unwrap();
    let current_output6: Array3<f32> = conv_layer6.convolve(&test_input6);

    assert!(
        arr_allclose(&current_output6, &target_output6),
        "{:?} was not equal to {:?}",
        current_output6,
        target_output6
    );

    let test_input7 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.26983073, 0.8690525, 0.7446416, 0.471613, 0.72900707, 0.842964, 0.21457537, 0.938401,
            0.41665936, 0.05351101, 0.43856344, 0.7253113, 0.8520324, 0.4151233, 0.35101932,
            0.7388761, 0.3592986, 0.6741479, 0.9965808, 0.3117034, 0.8605703, 0.94308543,
            0.8192489, 0.31478795, 0.750324, 0.36604244, 0.78454614, 0.039194, 0.23696694,
            0.2418382, 0.24788351, 0.5622223, 0.15428482, 0.50688076, 0.37682602, 0.44385925,
            0.00051633, 0.53422695, 0.5675659, 0.53845215, 0.2130759, 0.86445093, 0.432881,
            0.6255918, 0.3942565, 0.07226853, 0.09869356, 0.32627374, 0.8543963, 0.85603166,
            0.25422713, 0.24929269, 0.36793318, 0.39957172, 0.9079535, 0.865758, 0.82237726,
            0.60374194, 0.7658025, 0.0215734, 0.473204, 0.6594781, 0.86392707, 0.8566667,
            0.48541847, 0.54855824, 0.5860555, 0.158874, 0.10558709, 0.19664533, 0.39609066,
            0.27843866, 0.49128443, 0.75033015, 0.35650545, 0.4687038, 0.6159849, 0.2547001,
            0.17250927, 0.07203952, 0.8724657, 0.14018923, 0.12091745, 0.4770398, 0.43290496,
            0.6356798, 0.7619444, 0.2383507, 0.95481586, 0.49641547, 0.7066018, 0.10666513,
            0.06810815, 0.79673207, 0.29373887, 0.55241185, 0.23906927, 0.18915932, 0.02753429,
            0.1438574, 0.5419741, 0.71984386, 0.12837073, 0.55637455, 0.14355855, 0.10225686,
            0.8755492, 0.62895286, 0.21388301, 0.30016333, 0.49605927, 0.8245107, 0.4528765,
            0.6836941, 0.28745723, 0.5031258, 0.26911622, 0.92149794, 0.7165893, 0.04745785,
            0.55642486, 0.34654748, 0.83168656, 0.8410765, 0.7668131, 0.84094906, 0.6012723,
            0.9256995, 0.66010624, 0.43380973, 0.62281454, 0.45852852, 0.61445725, 0.524579,
            0.06486581, 0.14233574, 0.13930365, 0.5838787, 0.45914945, 0.30819193, 0.70949817,
            0.8803759, 0.6927248, 0.50569826, 0.7358748, 0.58652496, 0.85065925, 0.3247378,
            0.6760192, 0.4483504,
        ],
    )
    .unwrap();

    let kernel7: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.59195757, 0.15468395, 0.9099885, 0.7796499, 0.30651525, 0.24214035, 0.44507304,
            0.55669755, 0.38782486, 0.14428215, 0.45890567, 0.9182205, 0.37883574, 0.6638725,
            0.30235246, 0.32748002, 0.9492515, 0.42138377, 0.7488422, 0.08302987, 0.21880285,
            0.8785777, 0.05946975, 0.85290706,
        ],
    )
    .unwrap();
    let conv_layer7 = ConvolutionLayer::new(kernel7, 1, Padding::Valid);
    let target_output7: Array3<f32> = Array::from_shape_vec(
        (2, 12, 18),
        vec![
            0.15972835, 0.7248157, 1.2384474, 1.2854582, 1.256043, 1.38471, 1.176743, 1.2031505,
            1.1953954, 0.8051411, 0.62216914, 0.8552123, 1.2727695, 1.2961158, 1.0153055,
            0.58136547, 0.21612412, 0.05064582, 0.47912177, 1.00589, 1.5398239, 2.2908747,
            2.3840604, 2.2513702, 2.4255645, 2.6629744, 2.2273545, 1.9471455, 1.8068097, 1.5967873,
            1.528865, 1.5032378, 1.4472618, 1.0293651, 0.52773976, 0.19597769, 0.50657165,
            1.6642933, 2.258429, 2.8004966, 3.5262613, 3.7074785, 2.742877, 3.508679, 3.500119,
            2.8110466, 3.1487248, 2.9646559, 3.0675685, 3.0447693, 2.9467854, 1.9006501, 1.0264196,
            0.49017826, 0.75349224, 0.7835827, 1.6234648, 3.25485, 3.006198, 3.6464837, 3.5311108,
            2.7454681, 2.7673135, 3.5463135, 3.5995402, 3.7654002, 3.2690873, 3.088936, 2.900652,
            1.2989787, 0.9380414, 0.4061, 0.5168666, 1.3683727, 1.7298021, 2.8070078, 3.0978584,
            2.9695888, 2.8188927, 2.5372558, 2.0099826, 1.771221, 2.2961397, 3.2259998, 3.136946,
            3.3719034, 3.478313, 2.128344, 1.3577049, 0.42335194, 0.41641337, 1.0844258, 1.7876695,
            2.5852132, 2.7036517, 2.8627336, 3.1472385, 2.5917342, 1.9907739, 2.4169793, 2.6972952,
            3.207564, 3.470605, 3.74226, 3.1350374, 2.4554067, 1.6130427, 0.2550354, 0.92138946,
            1.5676904, 2.0564713, 3.0159342, 2.9190035, 3.0326383, 2.8672733, 2.1119895, 1.8046968,
            1.3743947, 1.6194937, 2.2117882, 2.5708127, 3.038093, 2.4838574, 1.9995859, 1.6859229,
            0.5758714, 0.59634674, 1.5051274, 2.099744, 2.4370937, 1.8989215, 2.476039, 2.2999032,
            2.2683585, 2.9640415, 1.9545052, 2.1009665, 2.6015472, 2.6743684, 3.9156454, 3.1052947,
            1.6108981, 1.5290091, 0.52854604, 0.98819697, 1.0738956, 1.7945861, 3.5727296,
            2.9783237, 3.1117704, 3.2158608, 2.9523344, 3.1034498, 2.5851755, 2.6010232, 2.5823042,
            2.33145, 3.1717348, 2.6266208, 1.5774642, 1.0263741, 0.16295606, 0.26337928, 1.2390921,
            1.8862237, 2.423229, 3.1916327, 3.3484416, 3.6245627, 3.6839933, 3.947197, 3.6857603,
            3.475978, 3.273561, 3.3668473, 3.3687165, 2.604232, 2.4267209, 1.2503214, 0.13803302,
            0.52835727, 0.51526326, 1.268787, 2.0049348, 2.119585, 2.7685585, 2.5563893, 2.9316216,
            2.9364533, 2.52419, 2.6934981, 2.2955194, 2.285239, 2.3226814, 1.6930968, 1.4461472,
            1.0666604, 0.26531166, 0.12952389, 0.16122995, 0.6202553, 0.7439223, 0.74598384,
            1.4344599, 1.514055, 1.4016954, 1.6208237, 1.8691227, 1.5441124, 1.6658447, 1.4046509,
            1.5622678, 1.4787194, 0.6689217, 0.7946161, 0.41168454, 0.10222153, 0.41759235,
            0.76875484, 1.3103695, 1.7517669, 1.5654693, 1.3176026, 1.6975052, 1.3664455,
            1.0479549, 1.3201375, 0.8245335, 0.9357337, 1.3647429, 1.5442034, 1.1743903, 0.6275761,
            0.30839774, 0.4590459, 1.2111596, 2.2680564, 2.6246755, 2.3101034, 3.1017377, 2.779296,
            2.477499, 3.0851748, 2.3511133, 1.7722337, 2.1825683, 2.498837, 2.1823905, 1.6288205,
            0.70942634, 0.4431249, 0.2333487, 0.6660106, 1.6105369, 1.9285412, 3.1333272, 3.471816,
            3.097073, 3.3830402, 3.5754614, 3.1837735, 2.2914867, 3.2282238, 3.019637, 2.6303263,
            2.5120277, 2.959384, 2.1949203, 1.3099047, 0.66015387, 0.41534197, 1.0895882,
            1.3836405, 2.4065075, 2.6808386, 3.191321, 3.6184568, 2.6771553, 2.9729795, 3.253105,
            3.1737354, 3.3047533, 4.164221, 3.3469906, 3.2272131, 1.7500834, 1.0139365, 0.24866575,
            0.30219185, 0.8133631, 1.5516944, 2.9591715, 3.9438825, 3.374509, 2.7484858, 2.222546,
            2.4385886, 2.2896712, 2.7959387, 2.8951938, 3.0550265, 2.9453437, 3.0484264, 1.902448,
            1.593359, 0.6507649, 0.51355946, 1.3341401, 2.0440857, 2.9725776, 2.836522, 2.5573416,
            2.643893, 2.5465837, 1.9412476, 1.5487792, 2.3594847, 2.9764867, 3.3241315, 3.984293,
            3.5176644, 2.208498, 1.942718, 0.47574094, 0.72191995, 1.5244551, 2.0252373, 2.631087,
            2.0455246, 2.933688, 3.3741417, 1.9407991, 1.92671, 1.8123697, 1.6802146, 2.1398482,
            2.2969022, 3.061863, 3.0351183, 1.8745289, 1.4122872, 0.45971507, 0.6495458, 1.4904801,
            1.2458341, 2.370968, 3.0628633, 2.2638667, 2.2152777, 1.8405874, 2.6811044, 2.0258203,
            2.2866263, 3.0884218, 2.790085, 2.8980393, 3.110511, 2.1732533, 1.6331112, 0.47362906,
            0.4923219, 1.3218241, 2.3225317, 3.0527632, 2.5302129, 3.1228626, 3.9211178, 3.5227287,
            3.3355546, 2.82884, 2.7680488, 2.5042405, 2.7399745, 3.5353029, 2.783493, 1.4049844,
            1.0619602, 0.18225406, 0.45423463, 1.1654496, 1.8821764, 2.6127186, 3.2891223,
            3.4917045, 3.2176003, 3.5024526, 4.1189737, 3.941154, 3.1947122, 3.4199731, 3.155303,
            3.6143706, 2.748554, 2.042778, 1.5878294, 0.43824536, 0.2627292, 0.5668402, 1.0509126,
            2.0342605, 1.7610241, 2.3071811, 2.7321436, 2.744093, 2.5470514, 2.203131, 2.476171,
            2.2716715, 2.0008075, 1.9116194, 1.7830997, 1.1672268, 0.5390391, 0.0819878,
            0.04303556, 0.10209677, 0.2663809, 0.53674114, 0.5332281, 0.9428431, 1.0242, 0.9985225,
            1.2425668, 1.3380356, 1.1889011, 1.0966761, 1.2126055, 1.0276133, 1.2170103,
            0.61381364, 0.6746819, 0.38240123,
        ],
    )
    .unwrap();
    let current_output7: Array3<f32> = conv_layer7.convolve(&test_input7);

    assert!(
        arr_allclose(&current_output7, &target_output7),
        "{:?} was not equal to {:?}",
        current_output7,
        target_output7
    );

    let test_input8 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.5070326, 0.5272234, 0.71761, 0.560904, 0.22129431, 0.2624427, 0.6557088, 0.00633,
            0.6603214, 0.45500925, 0.6523986, 0.14666249, 0.32440838, 0.2805719, 0.42671442,
            0.74477625, 0.9118973, 0.5335283, 0.36968935, 0.5693756, 0.36426732, 0.11819325,
            0.95361024, 0.13343851, 0.5940242, 0.7282295, 0.9320007, 0.46956548, 0.5087874,
            0.7952918, 0.73709416, 0.3358689, 0.03185032, 0.27057356, 0.26166973, 0.5843129,
            0.5337139, 0.19571388, 0.1192536, 0.75616854, 0.97167397, 0.71154076, 0.26672947,
            0.07128377, 0.3383284, 0.8008563, 0.9504947, 0.5971434, 0.7847773, 0.92326206,
            0.24163638, 0.12968542, 0.5954836, 0.6734995, 0.08627631, 0.7485715, 0.8782484,
            0.6863155, 0.7264353, 0.08944888, 0.68172634, 0.4284322, 0.48237634, 0.6856524,
            0.04009921, 0.0687674, 0.9063645, 0.42620143, 0.61030614, 0.10040135, 0.50107217,
            0.763057, 0.25769317, 0.8816114, 0.7770131, 0.23345616, 0.62762326, 0.15315741,
            0.73589575, 0.2752067, 0.85641515, 0.7439484, 0.6581306, 0.4056261, 0.13899311,
            0.26460668, 0.9179794, 0.96651816, 0.89336777, 0.18948041, 0.9371178, 0.7124811,
            0.9657549, 0.6203675, 0.32684848, 0.11439406, 0.07654371, 0.95680344, 0.9728639,
            0.6055871, 0.00439729, 0.8525613, 0.3167563, 0.13499211, 0.68338645, 0.7955047,
            0.21689218, 0.2826704, 0.12328367, 0.6890043, 0.5906649, 0.41700745, 0.30266365,
            0.5716598, 0.12726787, 0.35587692, 0.16889893, 0.3114892, 0.1309899, 0.24026695,
            0.55435276, 0.34375766, 0.4225387, 0.37165096, 0.6202945, 0.6069533, 0.05756181,
            0.0153275, 0.8497578, 0.79796964, 0.4071996, 0.19325097, 0.04944435, 0.59729165,
            0.39304134, 0.679002, 0.6126854, 0.67232877, 0.7156292, 0.09058711, 0.33372015,
            0.8941644, 0.30899736, 0.3348802, 0.6412177, 0.26750943, 0.03709449, 0.56803024,
            0.8756273, 0.5771133,
        ],
    )
    .unwrap();

    let kernel8: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.56024176, 0.2671537, 0.8069649, 0.75167763, 0.49819484, 0.93408287, 0.37185487,
            0.70054483, 0.70209366, 0.24336162, 0.49413827, 0.744203, 0.5868575, 0.83992416,
            0.093459, 0.36936092, 0.7831867, 0.8206956, 0.35425207, 0.8701863, 0.32817394,
            0.01027582, 0.84670645, 0.39091238,
        ],
    )
    .unwrap();
    let conv_layer8 = ConvolutionLayer::new(kernel8, 1, Padding::Valid);
    let target_output8: Array3<f32> = Array::from_shape_vec(
        (2, 12, 18),
        vec![
            0.2840608, 0.6764976, 0.98687965, 1.1730961, 0.94075, 0.69658697, 0.7834196, 0.6478731,
            0.6823947, 0.91319215, 0.9546054, 0.90245414, 0.6453194, 0.6143446, 0.6062877,
            0.50403225, 0.22695628, 0.10384592, 0.5527104, 1.4641653, 2.0708776, 2.255745,
            2.1189895, 1.8272729, 1.3798351, 1.518679, 1.692762, 1.5954397, 2.0028777, 2.3321517,
            2.220598, 1.8234911, 1.782935, 1.4707152, 0.8571263, 0.40439942, 1.0210781, 2.2559466,
            3.0905275, 3.7216473, 3.202914, 2.8823533, 3.0430493, 2.6085093, 2.5225668, 3.1439607,
            3.679723, 4.0717106, 3.8185232, 3.2420263, 2.7142363, 2.1674018, 1.4601016, 0.7928823,
            1.2465988, 3.0229895, 3.8442461, 4.115726, 3.8115067, 3.2406712, 2.649802, 3.1618674,
            3.0764508, 2.8313265, 3.642042, 4.4622183, 5.026964, 4.607645, 3.869753, 2.304217,
            1.4192972, 0.7808079, 1.1906924, 2.364916, 2.8968303, 3.6731446, 3.0833323, 2.7399967,
            3.2924128, 3.066035, 2.7915144, 2.9900856, 3.4157002, 4.0922675, 4.241462, 4.1438065,
            3.7365036, 2.4317813, 1.2156968, 0.48508027, 0.9591805, 2.4962764, 3.3962693, 4.332504,
            4.423661, 3.8074036, 3.5478716, 3.405172, 3.6219158, 3.099188, 2.986432, 3.6587224,
            4.1773233, 5.179809, 4.451048, 2.9462295, 1.8712579, 0.49663234, 1.1375105, 2.3700693,
            3.2103138, 4.2064466, 3.3698387, 2.6659243, 2.9172802, 3.2667308, 4.27928, 4.137701,
            3.0453897, 3.2262535, 3.284142, 3.9866178, 4.6353045, 3.3753507, 2.062793, 0.838195,
            0.88442034, 2.1012218, 2.7604144, 3.5161445, 3.5456555, 3.6474767, 3.7179654,
            3.4378238, 3.795055, 3.5763717, 3.1564054, 3.0708961, 3.203095, 3.7153914, 3.6321416,
            2.42017, 1.4645499, 0.53717107, 1.2793148, 2.5138347, 3.5449064, 4.1077003, 3.4698553,
            3.326322, 2.618635, 2.6385305, 3.3618877, 3.9685473, 3.8204865, 3.3532128, 2.5038745,
            2.0337634, 2.7001371, 1.8638095, 1.1048198, 0.7229545, 1.1704471, 2.1397462, 2.751408,
            3.231731, 2.835558, 3.0422673, 3.359324, 3.317078, 2.8848653, 2.7786877, 2.9734411,
            2.7587025, 2.1443932, 2.297318, 2.3950973, 2.084527, 1.2643572, 0.51347136, 0.6287411,
            1.2971683, 2.0118027, 2.6393647, 2.554667, 2.6124234, 2.1477008, 1.7604656, 2.2268634,
            2.4877234, 2.4601853, 2.4868073, 1.7746401, 1.6419878, 2.0602946, 2.004901, 1.5574327,
            0.5776763, 0.5479308, 1.1286597, 1.5915675, 2.1409764, 1.6695577, 1.356704, 1.6294556,
            1.3862916, 1.4350084, 1.7126307, 1.2798952, 0.9792236, 1.1580426, 1.4623128, 1.7100348,
            1.5765738, 1.056832, 0.4294894, 0.29755586, 0.496683, 0.7954879, 0.7862079, 0.5966767,
            0.44182935, 0.5659014, 0.34115288, 0.6248356, 0.51990294, 0.7849129, 0.49501383,
            0.48034203, 0.34313893, 0.4704823, 0.2603384, 0.15404758, 0.00438484, 0.8629464,
            1.6501738, 2.370628, 2.6659439, 2.365086, 2.0499666, 1.8331857, 1.6727871, 1.8285273,
            2.1969569, 2.188131, 2.616913, 2.2242036, 1.9794164, 1.8151944, 1.3318394, 0.89584506,
            0.3694741, 1.1055115, 2.2839775, 2.880421, 3.4621868, 3.1949952, 2.731802, 2.3861125,
            2.9256365, 1.9922448, 2.938813, 3.5477953, 3.9851933, 3.5749779, 3.2207377, 3.024821,
            2.1852388, 1.4931471, 0.8436633, 1.1586978, 2.4094563, 2.9590971, 3.2574532, 2.684964,
            2.5563135, 2.504562, 2.3330963, 2.852517, 2.3865914, 3.36586, 3.8788714, 4.540293,
            3.7327464, 2.7578497, 1.8535007, 0.8538027, 0.5982734, 1.1416229, 2.565115, 3.1462176,
            3.821145, 3.5548458, 2.788175, 3.065683, 2.9537518, 2.762215, 2.1139748, 3.1653466,
            3.8027086, 3.8237033, 4.2726636, 3.3214698, 2.2905817, 1.1161288, 0.21597815,
            0.7844511, 2.0944161, 2.8370297, 3.8053062, 3.145089, 3.232026, 3.1087472, 2.73115,
            3.1354897, 2.9797122, 2.343099, 3.3153486, 3.4008405, 4.451752, 4.179513, 2.5703955,
            1.8122435, 0.6948157, 0.80975354, 2.0737858, 2.605656, 3.3317325, 3.1348221, 2.5753727,
            2.789831, 3.5692775, 3.9124172, 3.6959305, 2.3181753, 2.9232168, 3.241277, 3.7686408,
            4.228027, 3.0753932, 1.76441, 0.4712007, 1.2757745, 2.0037348, 3.3184571, 3.4443517,
            3.6815643, 2.964591, 2.822183, 2.8485482, 3.4879856, 3.4180155, 3.1253529, 2.8588939,
            2.807792, 2.6438923, 3.4056165, 1.8857462, 1.2068443, 0.65516686, 1.0810717, 2.047371,
            2.6533735, 3.1395953, 2.894534, 2.9637074, 2.4491367, 2.2473779, 3.0571685, 3.158194,
            3.1779032, 2.2329144, 2.0316632, 1.7977885, 1.801118, 1.6521506, 0.7424001, 0.4746186,
            0.9384388, 2.0063853, 2.4334025, 2.9295788, 2.375902, 2.938124, 2.8636465, 2.575788,
            2.5901551, 2.7598677, 2.678666, 2.8193645, 2.0055418, 2.2553382, 2.1664865, 1.7605759,
            1.1912462, 0.43264428, 0.6221194, 1.5334767, 2.1389449, 2.9467242, 2.3764033,
            2.3961823, 2.549502, 1.8172717, 1.9320817, 2.6263297, 2.2577257, 2.028492, 1.89065,
            1.7581155, 2.3149097, 2.2328124, 1.6060699, 0.64229023, 0.06345885, 0.61451495,
            0.7884941, 1.0851569, 1.055927, 0.6032061, 0.666927, 0.90764517, 0.7087871, 0.78570706,
            0.7819355, 0.56435037, 0.42198038, 0.6647614, 0.97347325, 0.9830424, 0.5316871,
            0.22560072,
        ],
    )
    .unwrap();
    let current_output8: Array3<f32> = conv_layer8.convolve(&test_input8);

    assert!(
        arr_allclose(&current_output8, &target_output8),
        "{:?} was not equal to {:?}",
        current_output8,
        target_output8
    );

    let test_input9 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.43911496, 0.92919487, 0.29325068, 0.62813336, 0.8131431, 0.19520658, 0.47931832,
            0.42483747, 0.47526902, 0.28184402, 0.09741595, 0.45691565, 0.44086096, 0.9638409,
            0.33859608, 0.26381832, 0.29839757, 0.68755937, 0.09156765, 0.58584654, 0.04617033,
            0.14705709, 0.81179595, 0.16751295, 0.06864621, 0.6308731, 0.38993102, 0.3644169,
            0.68174505, 0.272409, 0.23609333, 0.21866773, 0.80119157, 0.01742986, 0.49270406,
            0.37920174, 0.90869635, 0.8191268, 0.7636344, 0.7827788, 0.9694966, 0.79533535,
            0.00732174, 0.8372113, 0.9449071, 0.7670253, 0.50964797, 0.7843069, 0.7365313,
            0.71123123, 0.89694643, 0.9544987, 0.16811895, 0.97018677, 0.25394833, 0.5585159,
            0.51973414, 0.4357872, 0.29419306, 0.5180376, 0.80581653, 0.7190028, 0.52249014,
            0.5252596, 0.33191478, 0.3388958, 0.18619475, 0.6839338, 0.72234726, 0.25884646,
            0.7980101, 0.36219832, 0.7046317, 0.9284394, 0.468965, 0.23158234, 0.32747796,
            0.9097073, 0.7440483, 0.03255624, 0.30697423, 0.6246821, 0.1907446, 0.9843364,
            0.4038572, 0.5747709, 0.65160054, 0.6822517, 0.9840877, 0.18341686, 0.5288406,
            0.92906404, 0.87780553, 0.9090181, 0.82569945, 0.20383635, 0.7166643, 0.17061436,
            0.91526777, 0.08598401, 0.70100874, 0.40537685, 0.5971982, 0.92796123, 0.15859716,
            0.7859081, 0.8564488, 0.35816404, 0.79062706, 0.9644883, 0.13154314, 0.31929043,
            0.80048305, 0.07180241, 0.52815664, 0.45786336, 0.91537887, 0.9783313, 0.25753945,
            0.42799363, 0.07738555, 0.9294206, 0.07022415, 0.60058224, 0.6196278, 0.9008346,
            0.04155485, 0.82207745, 0.41282526, 0.9949608, 0.3109271, 0.47614527, 0.7615821,
            0.35893062, 0.07713356, 0.6123928, 0.62511915, 0.88098776, 0.21521498, 0.89468116,
            0.1842307, 0.10784956, 0.8354833, 0.2630701, 0.7184675, 0.06132602, 0.06056971,
            0.71349823, 0.00944792, 0.07349233,
        ],
    )
    .unwrap();

    let kernel9: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.35231608, 0.27621788, 0.41293454, 0.17608605, 0.39297876, 0.12076204, 0.51991457,
            0.3746991, 0.88948244, 0.5045173, 0.34880427, 0.7731474, 0.8533961, 0.48649722,
            0.890512, 0.18067755, 0.54849166, 0.20799449, 0.19053963, 0.8194284, 0.24437675,
            0.7456122, 0.79505837, 0.65954226,
        ],
    )
    .unwrap();
    let conv_layer9 = ConvolutionLayer::new(kernel9, 1, Padding::Valid);
    let target_output9: Array3<f32> = Array::from_shape_vec(
        (2, 12, 18),
        vec![
            0.15470727, 0.4046923, 0.49523744, 0.9775819, 1.018349, 0.6864833, 0.9429138,
            0.74581385, 0.5899426, 0.64568996, 0.54538715, 0.5644486, 0.42862204, 0.70391124,
            0.74874365, 0.78315896, 0.6623155, 0.17082758, 0.21423884, 0.58080804, 1.0426358,
            1.2316492, 1.6359816, 1.2250345, 1.143616, 1.2939589, 0.84763324, 1.1409347, 1.1949466,
            0.8045435, 0.99582654, 1.4700397, 1.399072, 1.2342567, 0.948645, 0.25553882,
            0.33737653, 0.7414357, 1.4734479, 2.3401349, 2.6539207, 2.1149907, 2.392514, 2.433625,
            2.3383589, 2.6570904, 2.6623216, 2.5015345, 2.097614, 2.8295407, 2.5027208, 2.3340273,
            2.299892, 0.8335241, 0.44438827, 0.6228771, 1.7151663, 2.1237311, 2.6598423, 2.5070767,
            2.4845052, 2.7967591, 2.6594896, 2.8538187, 3.0234165, 2.4910812, 2.4262264, 2.7628078,
            2.4137022, 2.0726662, 1.8332319, 0.80155885, 0.5932593, 0.95621437, 2.001215,
            2.5085814, 2.8886392, 2.6423662, 2.57513, 2.7893095, 3.1629672, 3.3618612, 3.530997,
            3.2959156, 3.0466144, 3.4877734, 2.5937822, 2.251057, 2.4967256, 1.1478472, 0.62090236,
            0.97450316, 2.2950535, 3.0555205, 2.9996367, 3.2805815, 2.863179, 2.3904624, 3.4797196,
            2.51606, 2.9672298, 3.058002, 2.5198045, 3.1112435, 2.845015, 2.3272703, 1.7796547,
            0.6566334, 0.5830357, 0.996121, 2.2338974, 3.5337222, 3.3536968, 2.8775742, 2.56035,
            1.9963807, 2.32445, 2.3758953, 3.1089694, 2.7079074, 2.7350261, 3.388722, 2.8671598,
            2.9177198, 2.0975661, 0.5065707, 0.51859164, 1.0677687, 2.1125097, 3.1994646, 3.501257,
            3.33136, 2.8397486, 2.0388052, 2.2805955, 2.4116, 2.6345215, 2.9116092, 2.8112051,
            3.3700633, 3.2454684, 2.7461438, 1.6595471, 0.41305783, 0.4627226, 1.3339945,
            1.9036758, 3.4170253, 3.789354, 3.2818146, 3.3332782, 2.7869017, 2.459825, 2.3089027,
            2.8001492, 2.6399627, 2.9871032, 2.9811456, 2.6540203, 2.496645, 1.3299096, 0.3108202,
            0.5616597, 1.063772, 2.102865, 3.172807, 3.358686, 2.6716294, 3.0682201, 2.8893871,
            1.6677184, 2.7334657, 2.5603268, 2.267501, 2.8475683, 2.2693908, 2.828642, 1.8454278,
            0.7768836, 0.39488482, 0.201109, 0.8064615, 0.92853594, 1.9965078, 1.9892869,
            1.8257259, 1.6539254, 2.2790802, 1.5088494, 1.8765664, 1.940608, 1.8401394, 1.9122663,
            1.2311858, 1.4332274, 1.1986847, 0.37694818, 0.08527005, 0.25287813, 0.3320871,
            0.98399353, 1.224762, 1.662367, 1.0566821, 1.028979, 1.2136145, 0.44789317, 1.1549802,
            0.9920352, 0.87487334, 0.9119723, 0.19135462, 0.7129619, 0.56891817, 0.07267477,
            0.05682041, 0.374739, 0.8723095, 0.50181246, 1.0934883, 1.5561178, 0.6518408,
            1.0675977, 1.0926406, 0.71922886, 0.764729, 0.54137886, 0.81559974, 0.68749136,
            1.0618869, 0.88778436, 0.5735379, 0.7831675, 0.25246137, 0.43876976, 0.995219,
            1.7030866, 2.0328941, 2.5891795, 1.9641823, 1.8197123, 2.4410033, 1.3642781, 1.4801824,
            2.1171913, 1.4692674, 1.3218335, 2.3549001, 2.1337352, 1.7768571, 1.6039872, 0.4723151,
            0.72086513, 1.4379314, 2.044292, 2.3903086, 3.414476, 2.6686814, 2.6810288, 3.3440762,
            2.6970072, 3.3167963, 3.3940237, 3.1070766, 2.5783412, 4.0687733, 3.57823, 1.9302255,
            2.287963, 1.1444337, 1.0043685, 1.1299918, 2.3495474, 2.7255595, 3.2546883, 3.363902,
            3.0730882, 3.767682, 3.960272, 3.7204244, 4.1631584, 4.089189, 3.2232215, 3.8733864,
            3.2536497, 2.1483216, 2.2741861, 1.3171767, 1.2710804, 1.6716688, 2.83561, 3.4877539,
            3.5940835, 3.8652527, 3.819707, 4.1712117, 4.4102187, 3.828289, 4.4680653, 4.1846786,
            3.093613, 4.416599, 3.6979158, 2.064663, 2.223097, 1.3847424, 1.2727041, 1.7264714,
            3.1803825, 4.2558146, 3.3434467, 3.9246082, 3.8117309, 2.3713849, 4.094732, 3.353767,
            3.4572935, 4.1520667, 3.311926, 4.1332235, 3.5247147, 2.7746415, 2.2117717, 0.8512801,
            1.281564, 1.9826334, 2.6414511, 4.102699, 4.165335, 3.4948013, 3.2378893, 2.5919435,
            3.4944224, 2.865636, 3.7668478, 3.945416, 3.330508, 4.9318023, 3.4469743, 2.8893337,
            2.3817716, 0.5733813, 1.1341972, 1.9547287, 2.9149368, 4.6786294, 4.6530576, 3.761008,
            4.0481277, 3.1808932, 2.924353, 3.1307282, 3.3327346, 3.8456514, 3.7869077, 4.1374474,
            3.6430075, 2.906662, 1.835187, 0.5661825, 0.91932154, 2.5922081, 2.6347685, 4.2356477,
            4.972595, 3.7275019, 3.8924088, 3.677281, 3.1807542, 3.0987337, 3.3227665, 3.2777116,
            4.1543427, 4.0544643, 3.2572834, 2.5274253, 1.4885762, 0.5023931, 1.2601221, 2.0648682,
            2.2779605, 3.5785694, 4.5394363, 3.0900178, 3.0246615, 4.5357304, 2.3306012, 3.208893,
            3.607177, 3.0283334, 4.366569, 2.3824618, 2.7600698, 2.2862067, 0.6440737, 0.39840233,
            0.36684012, 1.483767, 1.5480437, 2.414644, 3.079073, 2.5813103, 1.8296587, 2.6974292,
            1.9639946, 2.4643836, 2.430644, 1.8650978, 2.5112484, 1.2937998, 1.3172479, 1.2213778,
            0.3233129, 0.10930353, 0.5453431, 0.68405044, 1.064206, 0.9315556, 1.4690733,
            0.98379064, 0.49494296, 1.4015417, 0.5559069, 0.969825, 0.8193736, 0.41577613,
            1.1368232, 0.21206611, 0.28172156, 0.4881771, 0.02419112, 0.0484713,
        ],
    )
    .unwrap();
    let current_output9: Array3<f32> = conv_layer9.convolve(&test_input9);

    assert!(
        arr_allclose(&current_output9, &target_output9),
        "{:?} was not equal to {:?}",
        current_output9,
        target_output9
    );

    let test_input10 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.4922565, 0.5211581, 0.97382414, 0.9779564, 0.1754263, 0.4551989, 0.81067127,
            0.7095975, 0.5087082, 0.78796804, 0.03310984, 0.20805901, 0.45704818, 0.9133983,
            0.5689028, 0.04247752, 0.55938286, 0.9835293, 0.04525762, 0.7176199, 0.82096803,
            0.5575717, 0.5744108, 0.9780689, 0.34563604, 0.3324931, 0.8797563, 0.14932355,
            0.1134909, 0.5645703, 0.30096474, 0.4096875, 0.5703153, 0.88738924, 0.6242374,
            0.77620894, 0.681929, 0.24701218, 0.74485576, 0.61556435, 0.63869125, 0.05875124,
            0.3210932, 0.96946657, 0.09463912, 0.6275637, 0.34162354, 0.74390864, 0.8736778,
            0.9513908, 0.24045336, 0.7003475, 0.87750345, 0.16564246, 0.6314963, 0.21785556,
            0.7654987, 0.13988015, 0.03287261, 0.82226163, 0.60896695, 0.13331373, 0.62307173,
            0.23316076, 0.9600204, 0.55291533, 0.29808274, 0.8765127, 0.98263544, 0.27148733,
            0.11101003, 0.2754741, 0.4540411, 0.19701396, 0.08459944, 0.98017716, 0.9800813,
            0.62585706, 0.18621969, 0.5836321, 0.17965508, 0.81336415, 0.94554824, 0.28304926,
            0.32718146, 0.46701643, 0.91682273, 0.6142979, 0.19277428, 0.28408903, 0.25507236,
            0.9800453, 0.36125833, 0.96792, 0.33258557, 0.9508625, 0.8424581, 0.8130291, 0.7774976,
            0.17691322, 0.9389267, 0.22419459, 0.33442205, 0.7614585, 0.37563834, 0.70754576,
            0.1499497, 0.9873837, 0.7166968, 0.40278858, 0.22288306, 0.3279577, 0.07722609,
            0.598755, 0.8143903, 0.87905455, 0.83061284, 0.9923988, 0.6196494, 0.536406,
            0.06662867, 0.83588266, 0.28182983, 0.662181, 0.99850965, 0.60448396, 0.12318801,
            0.91713256, 0.8540598, 0.19103892, 0.5929614, 0.9118344, 0.9381113, 0.3421722,
            0.8149188, 0.9595595, 0.02717085, 0.8916309, 0.9755575, 0.27588442, 0.59208006,
            0.00008138, 0.9552037, 0.12578069, 0.01249961, 0.05413999, 0.5153533, 0.40144867,
            0.8698811, 0.6468678,
        ],
    )
    .unwrap();

    let kernel10: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.8840439, 0.91156703, 0.00536506, 0.3468706, 0.9307082, 0.52290094, 0.9045769,
            0.47926104, 0.93169004, 0.10532705, 0.98115784, 0.43418503, 0.02230139, 0.5576108,
            0.20754221, 0.7979905, 0.42869946, 0.48593593, 0.69407916, 0.3472928, 0.6930413,
            0.41451567, 0.28908366, 0.11111139, 0.03633394, 0.34315115, 0.45996496, 0.33826837,
            0.2242362, 0.9188555, 0.66408885, 0.17170428, 0.0032256, 0.3198661, 0.88550454,
            0.85046166, 0.69308424, 0.35960108, 0.17364207, 0.97926295, 0.9444794, 0.9244341,
            0.86064774, 0.88076496, 0.71126235, 0.90735817, 0.6224708, 0.4153976, 0.19382912,
            0.7482733,
        ],
    )
    .unwrap();
    let conv_layer10 = ConvolutionLayer::new(kernel10, 1, Padding::Valid);
    let target_output10: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            0.43517634, 0.71812797, 1.6163987, 2.2779243, 2.3789675, 2.5919626, 2.582114,
            2.3155909, 2.1009881, 2.6212091, 2.0685036, 1.8720921, 1.5266776, 1.8231297, 1.6179639,
            1.7025813, 1.60382, 1.0870018, 0.39427313, 0.48627678, 1.4370849, 2.776526, 3.3467185,
            3.9937286, 3.9496944, 4.393869, 4.267262, 4.5899954, 4.4172497, 3.8831794, 3.5432642,
            3.0397987, 3.2236729, 3.2836227, 2.328813, 1.5760207, 1.1516819, 0.6270897, 0.30742815,
            1.306611, 2.700678, 3.6396544, 4.3774014, 5.4251947, 5.697315, 4.930942, 5.4442368,
            5.076072, 4.7731643, 4.1525364, 4.2114234, 3.3976572, 3.1539555, 2.8615594, 2.0333557,
            1.5769751, 0.46407253, 1.0001206, 1.9386312, 3.845322, 6.01257, 6.9181213, 7.058963,
            7.41158, 6.6931653, 6.458115, 6.9355154, 5.9633765, 5.258292, 4.407047, 4.515931,
            5.071425, 3.7526016, 2.6326292, 1.9248756, 0.8355103, 1.5849159, 2.232319, 4.633188,
            6.034186, 7.124724, 7.1731596, 7.763035, 8.230451, 7.883373, 7.7248006, 6.189369,
            6.430326, 5.516251, 4.371134, 4.69043, 3.372576, 2.4120786, 1.531653, 0.51023054,
            1.5689309, 3.3015623, 4.8926225, 5.5576344, 7.8944845, 7.5563865, 7.087614, 7.610101,
            8.247066, 6.8968, 6.61523, 6.756878, 5.388645, 4.845226, 5.197646, 3.6432662,
            2.1657972, 1.260904, 0.5006842, 1.6200533, 4.1885986, 4.6082397, 7.08783, 7.095414,
            8.384957, 7.530503, 8.285549, 8.383159, 7.2196994, 7.537446, 6.30227, 6.4350724,
            5.7448406, 4.6954446, 3.9864376, 2.7623272, 1.7696975, 0.4973498, 1.6585872, 3.0993295,
            5.0055203, 6.7434607, 7.368237, 7.4635797, 7.359941, 7.3575773, 6.756955, 6.909585,
            7.10556, 7.0577426, 6.5013776, 6.409798, 7.1349916, 4.5709887, 3.035817, 1.8953081,
            0.64886093, 1.6120117, 3.1194198, 4.9689503, 6.2414274, 7.67405, 6.6580667, 6.1751056,
            7.443903, 7.4390874, 6.8096843, 7.0145097, 7.817981, 7.899015, 7.3553534, 7.516338,
            5.208636, 3.5706885, 2.0320482, 0.9303514, 1.9135613, 3.2809184, 4.948613, 6.3742256,
            7.9740043, 7.3569946, 7.281388, 7.9475703, 6.690694, 6.338628, 5.4769735, 6.996787,
            6.0865874, 6.566843, 6.9792128, 5.8765545, 4.019752, 2.501034, 0.99322873, 1.357885,
            2.5794091, 3.0267155, 5.282766, 5.0617533, 5.3176737, 4.614849, 4.41388, 4.364581,
            3.3289826, 3.974289, 4.576761, 4.567597, 5.6496706, 5.200142, 4.414471, 2.4698436,
            1.7320876, 0.5769658, 0.6867783, 1.0261288, 2.0345056, 2.9519403, 3.2206063, 3.1429584,
            3.3724344, 2.2896361, 3.301369, 2.7379546, 3.050354, 3.2816212, 3.5240169, 3.3609424,
            3.6096172, 2.9359, 1.7119062, 1.3782463, 0.29703543, 0.39485484, 1.6884174, 1.2338268,
            2.6928792, 2.9775486, 2.5617237, 2.1074483, 2.324288, 2.538492, 1.242846, 1.8357966,
            1.7102954, 1.8618318, 1.8214824, 2.9498103, 1.9394121, 1.3311216, 0.8410791,
            0.10148359, 0.8930699, 0.12635571, 1.0318592, 1.3407595, 0.5888723, 1.0932254,
            0.49089602, 1.1431646, 0.43333992, 0.24466756, 0.4095482, 0.56632924, 0.44805968,
            0.97810304, 0.9579303, 0.40681478, 0.45094204, 0.25625876, 0.02350326, 0.16891839,
            0.505738, 1.0989094, 1.8904438, 2.4767237, 2.497049, 2.5369358, 2.2220294, 1.9243449,
            2.3903956, 2.3730488, 1.8878436, 1.528965, 1.5401413, 1.4170492, 1.7750688, 1.7612224,
            1.3660965, 0.5161986, 0.24099696, 0.5443987, 1.6236899, 2.6178346, 3.391372, 4.3751984,
            4.364852, 3.5364273, 4.065496, 4.5025277, 3.8875751, 3.821091, 3.4461336, 2.677862,
            2.4769263, 2.6934981, 2.2459984, 1.7306788, 0.86639285, 0.28932938, 0.78292125,
            1.8097212, 2.8776088, 4.5773416, 5.6964173, 5.7697988, 5.17659, 5.3702145, 5.4259734,
            5.0258617, 4.9448924, 4.3848066, 3.7088268, 3.5398455, 2.9152563, 3.0571828, 2.4306393,
            0.673621, 0.47853297, 1.2377826, 2.3774445, 4.056386, 6.00359, 6.9932775, 7.068991,
            6.5294123, 6.7439413, 6.0608225, 5.988998, 5.5857334, 4.9655914, 4.403327, 4.057121,
            3.7423327, 3.3735313, 2.7085416, 1.149787, 1.0612695, 1.9083855, 4.2036824, 6.3178835,
            7.965941, 8.769621, 9.310089, 9.234574, 9.224889, 9.134269, 8.011312, 7.857373,
            6.236852, 5.920988, 5.677483, 4.703305, 4.1348453, 3.1307812, 1.1630337, 0.93525517,
            2.0104487, 4.661035, 6.2774067, 8.26814, 8.170251, 8.8919735, 8.674931, 9.190043,
            8.716085, 8.419638, 8.405034, 6.8265915, 5.964856, 6.0293083, 4.8281927, 3.5644007,
            2.123152, 1.0927935, 1.1616354, 2.0921483, 4.1240125, 7.059458, 8.8677845, 9.045482,
            9.019896, 9.782194, 8.851512, 9.0848675, 9.486296, 7.906767, 6.883317, 6.2086926,
            6.9013844, 5.1594186, 3.7094975, 3.1062956, 0.7830122, 1.4048753, 2.444899, 4.0074186,
            7.43427, 9.267981, 8.9567, 8.685387, 8.78992, 7.790662, 7.79145, 8.593699, 8.343361,
            7.4522624, 7.5419683, 7.7034674, 6.54208, 4.847062, 2.9368262, 1.4702204, 1.2139367,
            2.0489168, 3.8067975, 5.9510345, 8.2402315, 8.651551, 8.272425, 8.348899, 8.842741,
            8.208111, 8.316948, 8.172751, 8.20109, 7.829397, 7.9985495, 6.797581, 5.2600265,
            3.0965066, 1.3477278, 1.5570987, 3.1653342, 4.8899026, 6.8683324, 9.000377, 8.057199,
            8.833917, 8.342912, 7.9240146, 7.0238485, 7.134766, 8.055962, 6.857755, 7.6635346,
            8.393256, 7.4054146, 6.015168, 3.9103873, 1.6024116, 0.85693413, 1.8465575, 3.0436225,
            5.566711, 5.8877463, 7.1809506, 6.777369, 7.414094, 5.886983, 5.4898324, 6.028718,
            5.984161, 5.0602894, 5.4686704, 6.4821644, 5.5158677, 4.470545, 3.412468, 1.126223,
            0.98966146, 0.9853507, 2.7218108, 3.7939153, 4.6806064, 4.388609, 4.4850893, 3.9389381,
            3.3016765, 3.04926, 4.4752784, 4.8641195, 4.694209, 5.1232314, 5.4670916, 4.606726,
            3.481348, 2.5473392, 0.8280406, 0.2763901, 1.1400787, 1.4396325, 3.077772, 3.1628814,
            4.0949845, 3.5775096, 3.4985476, 3.8033345, 2.6935966, 3.1741657, 3.2746959, 3.3246899,
            3.0657978, 4.0200996, 3.2176669, 2.6996546, 1.5740062, 0.7351638, 0.8816965, 0.8746604,
            1.783001, 2.3950455, 2.7278378, 2.3981748, 2.1555886, 2.383778, 1.5890524, 1.501356,
            0.863449, 1.3379333, 0.9812471, 1.7073069, 2.1648486, 2.095807, 1.5525607, 1.1110015,
            0.4840339,
        ],
    )
    .unwrap();
    let current_output10: Array3<f32> = conv_layer10.convolve(&test_input10);

    assert!(
        arr_allclose(&current_output10, &target_output10),
        "{:?} was not equal to {:?}",
        current_output10,
        target_output10
    );

    let test_input11 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.28782296, 0.7382309, 0.60003114, 0.3259743, 0.85578996, 0.14142898, 0.39191914,
            0.05517358, 0.6050927, 0.968827, 0.47373444, 0.76571184, 0.50472075, 0.53850234,
            0.05837096, 0.56728834, 0.3979838, 0.2393961, 0.36507484, 0.01646563, 0.27730468,
            0.62646276, 0.94121945, 0.66457146, 0.8425775, 0.4301739, 0.68211764, 0.6059688,
            0.7629583, 0.56038123, 0.48163053, 0.437191, 0.43973154, 0.29997745, 0.21913478,
            0.6611514, 0.209788, 0.176356, 0.88925517, 0.14793599, 0.36509594, 0.5616029,
            0.6617385, 0.30053073, 0.36820948, 0.62227124, 0.4957459, 0.69923055, 0.3227648,
            0.9702412, 0.5679234, 0.13432135, 0.7430913, 0.19231908, 0.26170298, 0.10480803,
            0.00958306, 0.20726651, 0.20851518, 0.17973869, 0.23704103, 0.1163867, 0.2735905,
            0.8537909, 0.40303, 0.75797635, 0.34342998, 0.74670875, 0.82946825, 0.91931367,
            0.9654975, 0.18782942, 0.10021565, 0.05109123, 0.3069365, 0.10895161, 0.9891213,
            0.62504834, 0.507994, 0.47125, 0.84314245, 0.6054993, 0.92367506, 0.6953895,
            0.37023902, 0.67128026, 0.43450755, 0.28869846, 0.27641538, 0.8369712, 0.6856483,
            0.26890948, 0.65425915, 0.84581685, 0.51146317, 0.48995435, 0.52071315, 0.80564773,
            0.670521, 0.3835857, 0.47078377, 0.5100531, 0.82525116, 0.02126783, 0.9583153,
            0.23316967, 0.9487504, 0.9609589, 0.95734006, 0.00943314, 0.7521432, 0.46106157,
            0.84370506, 0.16933449, 0.71423984, 0.5316646, 0.6400151, 0.9638914, 0.69432026,
            0.8581641, 0.70813745, 0.2836983, 0.33953485, 0.8950543, 0.20262088, 0.81930757,
            0.09556881, 0.22266188, 0.63842744, 0.8304186, 0.12425002, 0.7582065, 0.09737789,
            0.84872884, 0.17490041, 0.37569723, 0.6669188, 0.8970669, 0.22398192, 0.29424527,
            0.56277037, 0.41113177, 0.7882464, 0.24159203, 0.5460915, 0.29690132, 0.3142075,
            0.7648111, 0.04421633, 0.9636684,
        ],
    )
    .unwrap();

    let kernel11: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.98529965, 0.5493846, 0.54690886, 0.4854058, 0.8930679, 0.13811645, 0.05176858,
            0.6496963, 0.12335967, 0.21437034, 0.41856614, 0.955536, 0.2400014, 0.25711668,
            0.64894366, 0.0937838, 0.05664136, 0.01756373, 0.18204254, 0.7790032, 0.79873264,
            0.98567015, 0.5680892, 0.44598028, 0.37360683, 0.26998708, 0.6481355, 0.8593988,
            0.7869872, 0.24216229, 0.9724998, 0.17029643, 0.8382851, 0.14544043, 0.38366762,
            0.13321315, 0.089831, 0.36792266, 0.05608724, 0.8650639, 0.4742414, 0.9231865,
            0.6596718, 0.9562488, 0.3529938, 0.1621314, 0.01680515, 0.19350345, 0.3229758,
            0.26240814,
        ],
    )
    .unwrap();
    let conv_layer11 = ConvolutionLayer::new(kernel11, 1, Padding::Valid);
    let target_output11: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            0.28359187, 0.7671317, 0.8136453, 0.7400481, 1.4385124, 1.0399127, 1.2737317,
            0.5083159, 1.4646733, 1.2109716, 1.1720656, 1.3262211, 1.3755155, 1.7390598,
            0.79334646, 0.8923945, 0.47807184, 0.43559363, 0.04662279, 0.7170745, 0.8909581,
            1.171183, 1.5444146, 2.043183, 1.9637651, 2.538168, 1.978637, 2.6474895, 2.3740916,
            2.6850717, 3.3578877, 2.9020572, 3.8697016, 2.3712654, 2.2993135, 1.373882, 1.1960462,
            0.50512934, 0.9436228, 1.3360416, 2.266299, 1.9601917, 2.705803, 3.2470853, 2.2582226,
            2.4338608, 3.219248, 3.6190994, 3.7796168, 4.0585036, 4.336563, 4.0970635, 3.2000945,
            2.763011, 2.1970155, 1.3652843, 0.8796119, 1.32769, 1.8195969, 2.7242908, 2.2481906,
            4.3979006, 3.5840404, 3.43877, 3.9934916, 4.0763936, 4.0015893, 3.676091, 3.6531262,
            4.231584, 3.8591769, 3.398262, 2.5608282, 2.111725, 1.1945426, 0.85087514, 1.3712411,
            1.9881567, 3.2214634, 3.770952, 5.7368655, 5.0255384, 5.429655, 5.5016136, 5.3995504,
            6.841554, 4.977863, 6.1248136, 5.8604, 5.0770807, 4.4309216, 2.8159974, 2.2699058,
            1.151434, 0.90322584, 1.3183155, 2.4899216, 3.0932221, 3.857154, 4.3346534, 6.1761847,
            4.960329, 6.402821, 6.11514, 7.0344367, 6.2012544, 6.5687966, 6.1102824, 4.8360243,
            5.533516, 2.8726192, 2.7952538, 1.4112786, 1.4467384, 1.5972481, 1.9374512, 3.109155,
            4.5448956, 5.615056, 6.283878, 5.440188, 6.7299037, 6.549189, 6.36002, 6.001527,
            6.286711, 5.7349296, 3.7406714, 5.540947, 2.8153472, 3.190637, 0.985969, 1.9825081,
            1.3368049, 2.4238496, 4.557271, 4.978402, 5.7833323, 7.2525287, 6.2937245, 8.164762,
            5.526116, 6.832657, 5.7416134, 6.054497, 5.466244, 4.4046597, 5.7664385, 2.9840894,
            3.7837007, 1.1786113, 2.3095398, 1.465394, 2.1514864, 3.043613, 5.2528234, 5.2751517,
            7.480824, 5.450711, 7.763161, 5.7174993, 7.787404, 5.8683515, 7.222574, 5.928138,
            6.368826, 5.252007, 3.9872775, 3.4098814, 1.9900348, 2.0179203, 1.3168557, 2.6937132,
            4.577034, 4.8588333, 5.884188, 6.9210815, 5.870236, 7.6752257, 5.197383, 6.6981287,
            5.6747212, 6.5973415, 5.5207596, 6.0927863, 5.972025, 4.3993244, 3.579948, 2.3208885,
            2.1697092, 1.3192012, 1.8775054, 3.1566544, 4.092554, 4.7943707, 5.1249723, 5.00203,
            5.074038, 3.6627014, 5.634921, 4.1999006, 4.928528, 4.532408, 4.175317, 5.400131,
            2.9928865, 3.5130787, 1.8037438, 1.7899756, 0.7574425, 1.7311804, 2.608859, 3.408479,
            3.073865, 4.1865406, 3.3724787, 3.4377155, 2.7421556, 3.755474, 2.7999337, 3.3564198,
            3.4118602, 3.8468895, 3.5595386, 3.048833, 2.3673368, 1.3803154, 0.9460677, 0.8147804,
            0.7752376, 1.4378959, 2.0671287, 1.7688038, 2.5542598, 2.0020695, 1.9747553, 1.9477462,
            2.2269003, 1.5128953, 2.5482607, 1.9090527, 2.1721144, 1.8978804, 1.3570044, 1.4079592,
            0.6484871, 0.49512112, 0.33552313, 0.6761421, 1.1879156, 1.1177976, 1.552837,
            1.6590046, 1.1883914, 1.4701976, 1.1998681, 1.5815423, 1.3066466, 1.1813333, 1.4587246,
            0.8426546, 1.7221123, 0.94845617, 0.94554985, 0.7672203, 0.3600331, 0.07770848,
            0.47922057, 0.91827184, 0.90637857, 1.024759, 1.3181136, 0.6092296, 0.8735793,
            0.47505414, 1.0661675, 1.2404006, 1.0924048, 1.5015926, 1.1199741, 1.0466278,
            0.49200675, 0.34498698, 0.11499007, 0.00946377, 0.3397088, 1.1866271, 1.0677183,
            1.2989154, 2.0225303, 1.1506039, 1.3189529, 1.8780302, 1.8941247, 2.4413419, 2.155922,
            2.4060495, 2.796259, 2.184161, 2.2569616, 1.5817087, 1.0455866, 0.45239237, 0.09183633,
            0.74506843, 1.8166885, 2.1223564, 2.8767476, 2.93836, 2.6515653, 2.8395298, 2.3108428,
            2.6615474, 4.107803, 3.3941367, 4.0185633, 4.330502, 3.7344737, 3.273945, 2.2660258,
            1.5381149, 0.8962114, 0.08041059, 1.194207, 2.544798, 2.5003211, 3.5770302, 3.9833286,
            4.1455836, 3.483393, 3.8856833, 5.152993, 4.3488307, 3.9802952, 4.8140645, 4.5356655,
            4.216243, 4.0894423, 3.0633075, 1.9860424, 1.211066, 0.16261722, 1.3973753, 2.1536062,
            2.6893742, 4.6130524, 5.097888, 4.960714, 5.1342807, 4.8508005, 5.439087, 5.2376747,
            6.147851, 6.3475046, 5.689648, 5.1229677, 4.2548447, 3.379952, 2.0850134, 1.568526,
            0.320341, 1.2342422, 2.1646302, 3.747137, 4.7240243, 4.9978476, 5.78781, 5.0323105,
            5.238613, 7.051529, 5.552042, 5.7125955, 5.860438, 4.6631336, 4.3831663, 4.0183716,
            3.7291262, 2.0444577, 1.7320588, 0.44160885, 1.0657965, 2.4690704, 2.880894, 4.781149,
            6.2889767, 6.0771728, 5.4377418, 6.548978, 6.719797, 5.7017927, 6.8611007, 5.4082274,
            4.5727024, 4.426527, 3.6870525, 3.2499368, 1.6474618, 1.8956681, 0.38350412, 0.9382175,
            2.2002096, 4.2943873, 6.0829115, 6.024289, 6.116883, 7.277406, 6.5892916, 7.1459966,
            5.9738154, 6.743105, 5.6956263, 5.181903, 4.902607, 5.156217, 4.030346, 1.6475254,
            2.4383945, 0.46349475, 1.0747048, 3.1391559, 3.2650409, 5.0031147, 6.280332, 6.748951,
            6.796794, 5.842902, 6.509564, 6.4877768, 7.27814, 6.2109528, 6.794426, 4.916154,
            6.046385, 3.8158991, 2.416529, 2.672135, 0.5790798, 1.3267685, 2.4533892, 4.1973386,
            7.336701, 5.485477, 6.3141894, 6.599503, 5.8640614, 6.7172885, 5.749669, 6.12767,
            5.966137, 6.3588376, 5.546617, 6.10152, 5.170526, 3.2724893, 2.6316051, 0.8543786,
            1.201615, 2.442412, 3.2809649, 4.429894, 4.7772784, 5.9769163, 5.035597, 4.0992947,
            4.435605, 5.084572, 4.994657, 4.20463, 5.253723, 4.2944756, 5.289549, 3.6526675,
            2.859768, 2.5587246, 0.57867444, 0.9366337, 1.5335606, 2.6148415, 4.388102, 3.6889744,
            4.2763896, 3.4244637, 3.4708908, 3.8684607, 3.784741, 2.8675911, 3.6334946, 3.8665133,
            3.6746101, 4.116533, 3.238536, 2.6249642, 1.5707499, 0.468151, 0.46715307, 0.91988856,
            1.6277015, 1.5458086, 2.0456934, 2.8161907, 1.8436319, 2.1711454, 1.6260986, 1.9714054,
            2.2178268, 2.0401282, 2.1471012, 1.784497, 1.9565426, 2.0101092, 0.8197956, 1.2202396,
            0.35713688, 0.0909797, 0.30564547, 0.798113, 1.1079617, 1.2672141, 0.9345968,
            0.88448024, 0.9980952, 0.9924511, 1.1996198, 0.87653893, 0.9545274, 0.81876093,
            0.8240535, 1.1007617, 0.7604025, 1.0499355, 0.35177168, 0.25287443,
        ],
    )
    .unwrap();
    let current_output11: Array3<f32> = conv_layer11.convolve(&test_input11);

    assert!(
        arr_allclose(&current_output11, &target_output11),
        "{:?} was not equal to {:?}",
        current_output11,
        target_output11
    );

    let test_input12 = Array::from_shape_vec(
        (1, 10, 15),
        vec![
            0.554433, 0.90017563, 0.6817857, 0.95833224, 0.28551313, 0.85106283, 0.70093375,
            0.4791875, 0.5805011, 0.9803199, 0.97033703, 0.48236644, 0.66855663, 0.35855147,
            0.25242767, 0.6717967, 0.26290378, 0.53677225, 0.18097793, 0.07985484, 0.79416144,
            0.7215235, 0.42313012, 0.6529702, 0.00384528, 0.08442257, 0.7838985, 0.980683,
            0.36212954, 0.61172485, 0.5263662, 0.8496614, 0.13177402, 0.9175598, 0.04323238,
            0.03087392, 0.03482862, 0.36226457, 0.6059544, 0.29194582, 0.34645593, 0.9409913,
            0.60953087, 0.8610255, 0.1627552, 0.8939359, 0.66327935, 0.48094535, 0.06551108,
            0.86129206, 0.65446067, 0.9592776, 0.8000413, 0.21450381, 0.6442533, 0.46971878,
            0.84573215, 0.34651902, 0.18830031, 0.57119006, 0.27269888, 0.7915957, 0.21737069,
            0.04463017, 0.393406, 0.8441482, 0.77705365, 0.6315176, 0.8522896, 0.16809769,
            0.22305161, 0.773223, 0.9678148, 0.2237789, 0.8982615, 0.271913, 0.34780893,
            0.49277794, 0.14560463, 0.33638617, 0.1585067, 0.18610527, 0.6963084, 0.9429821,
            0.40789625, 0.20056698, 0.37306353, 0.9367061, 0.7103306, 0.06833509, 0.48335183,
            0.45182207, 0.96346164, 0.00378525, 0.33689302, 0.28288215, 0.75004077, 0.1607512,
            0.514175, 0.35879079, 0.36688787, 0.00774159, 0.15532039, 0.01133456, 0.94680935,
            0.052598, 0.73530346, 0.8096563, 0.7097644, 0.37942106, 0.38656324, 0.13763146,
            0.99930644, 0.67476803, 0.06055127, 0.8463604, 0.4460729, 0.33209085, 0.94373864,
            0.5397614, 0.05766413, 0.64256257, 0.7357459, 0.09256811, 0.8832945, 0.03911254,
            0.782554, 0.4004812, 0.80732703, 0.8010379, 0.28867772, 0.7802926, 0.9490529,
            0.5395702, 0.1369102, 0.4513485, 0.1162144, 0.9589836, 0.24819064, 0.3149064,
            0.22322156, 0.39812055, 0.45308354, 0.5711523, 0.97817534, 0.06805564, 0.5386646,
            0.6699801, 0.1879456, 0.8407316,
        ],
    )
    .unwrap();

    let kernel12: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.64728755, 0.22910197, 0.27582648, 0.669607, 0.989135, 0.63207716, 0.23872072,
            0.42012835, 0.55476546, 0.59264964, 0.46754488, 0.8551502, 0.14011143, 0.5067741,
            0.48483032, 0.1932068, 0.8555064, 0.98297566, 0.5152856, 0.04158387, 0.10441232,
            0.05671094, 0.22395916, 0.9118427, 0.8653732, 0.53731096, 0.7679019, 0.33816597,
            0.12918296, 0.7842302, 0.00916763, 0.03931138, 0.7745094, 0.528783, 0.35247177,
            0.8670982, 0.19610135, 0.47505257, 0.14234911, 0.22649786, 0.43971533, 0.08035298,
            0.5085966, 0.6446142, 0.5814206, 0.46486124, 0.9091975, 0.01153891, 0.8193508,
            0.4524277,
        ],
    )
    .unwrap();
    let conv_layer12 = ConvolutionLayer::new(kernel12, 1, Padding::Valid);
    let target_output12: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            0.35887757, 0.9331169, 1.2695141, 1.5792503, 1.341124, 1.4051272, 1.3814764, 1.3063511,
            1.2005948, 1.4497987, 1.6849039, 1.546091, 1.4413333, 1.1700264, 0.8971174, 0.50672734,
            0.25710142, 0.08620793, 0.02635656, 0.5618673, 0.9333883, 1.672929, 2.3355596,
            2.216748, 2.4972768, 2.5637846, 2.4390798, 2.7803013, 2.2562385, 1.9218997, 2.4371743,
            3.2083538, 2.777453, 2.4264762, 1.7934774, 1.0188912, 0.39228746, 0.07818702,
            0.6475475, 1.5845083, 2.2725966, 3.3672085, 3.2581367, 2.7811298, 2.5473561, 2.4431636,
            3.5596898, 3.3932416, 3.1361341, 3.2611332, 3.411959, 4.160577, 3.8985984, 2.9820955,
            1.7321749, 0.9936495, 0.10821863, 1.2557766, 2.5797832, 3.421175, 4.982238, 4.7635336,
            5.374329, 5.3885784, 4.6222925, 4.559506, 5.31351, 5.1131716, 5.4404325, 5.073193,
            5.309668, 5.539782, 4.5076838, 2.8335848, 1.4575142, 0.436045, 1.5247517, 3.273328,
            4.590986, 5.705605, 6.04932, 5.7433844, 6.920605, 6.8900967, 6.5519056, 7.3356667,
            6.4172015, 6.421451, 7.314378, 6.601814, 7.2994494, 5.0924983, 4.345824, 2.015266,
            0.93887377, 1.502009, 2.7211118, 3.5132878, 4.82685, 5.3610897, 4.7667522, 4.4067326,
            6.2180877, 6.3524575, 6.2767396, 5.782248, 5.697278, 6.949876, 6.536121, 7.1040697,
            5.6252503, 3.8664522, 2.679967, 0.863777, 1.5696139, 3.1679227, 4.026525, 4.6066747,
            5.806778, 5.1525507, 4.300533, 5.5199146, 6.1640363, 6.2334547, 6.338663, 6.768676,
            5.5886517, 5.4637365, 6.1690054, 6.3296857, 3.0875597, 2.4338472, 0.96558726,
            1.2866081, 2.8054771, 4.100632, 4.319831, 6.14206, 6.244635, 5.3187943, 5.7587523,
            7.148096, 6.6587276, 6.505772, 7.129316, 6.0553546, 5.235463, 5.619889, 5.386308,
            4.252789, 2.0933392, 1.4387221, 0.63450766, 2.2894342, 3.3157277, 4.0658145, 5.2398715,
            6.3463936, 5.2897515, 5.146137, 6.242421, 6.808567, 6.326927, 6.2468534, 7.317381,
            6.352464, 5.499475, 4.973675, 4.270837, 2.4452357, 1.0965943, 0.9124856, 1.8222725,
            3.7822325, 4.0257335, 5.8333435, 4.9827695, 5.4755106, 4.588524, 6.041603, 6.0549283,
            6.3191266, 6.1564355, 6.0702806, 5.9437823, 6.152335, 4.3053484, 3.7100825, 2.1874726,
            1.138908, 0.63263035, 1.5907484, 3.546232, 3.39072, 4.8312783, 5.256619, 4.8020053,
            4.548965, 4.4170637, 4.8536415, 5.3091984, 5.4398336, 5.1489663, 3.8636892, 5.8954296,
            4.141265, 3.336422, 2.173184, 1.389862, 0.2151327, 1.4424204, 2.5170698, 3.2973795,
            3.20475, 4.3468113, 3.6977282, 3.8377392, 4.349363, 3.9252293, 4.371894, 4.711899,
            5.4632974, 4.291328, 4.491912, 3.885964, 2.253712, 2.2701933, 0.78022516, 0.35926375,
            0.9979663, 2.0718694, 1.8312026, 2.6678727, 2.2437694, 3.4183612, 2.021662, 3.4190402,
            3.1414988, 3.3197117, 3.313014, 4.079876, 3.8771973, 2.5439663, 2.4555128, 2.0439239,
            1.0772166, 0.8850934, 0.44644463, 0.38244325, 1.2362663, 0.88894844, 1.318937,
            0.6682028, 1.5189627, 1.020204, 1.3082814, 1.7354348, 1.2873073, 1.4632314, 1.5498719,
            1.6934447, 1.349103, 1.0833873, 0.9952105, 0.19760397, 0.72754663, 0.2979029,
            0.48875707, 0.85533124, 1.5455061, 1.4069256, 2.0091195, 1.3703187, 1.5728898,
            1.4310305, 1.6513984, 1.5702544, 1.5961211, 1.9059365, 1.4994266, 1.3817995,
            0.83142155, 0.6873262, 0.277673, 0.11734384, 0.78671384, 0.86046195, 1.5409943,
            1.6093081, 1.9049346, 2.668518, 2.1178854, 2.4984994, 2.296718, 2.7610729, 2.7063406,
            1.9922419, 2.2417467, 2.287674, 2.826319, 1.6877578, 1.831703, 0.7836022, 0.5138738,
            0.9861866, 1.4234738, 2.280404, 3.2897635, 3.1967123, 3.5174794, 3.1518114, 2.6127636,
            2.525303, 2.7728975, 3.3877435, 3.9211128, 4.0069585, 3.4258745, 2.951918, 3.051547,
            2.15376, 0.98274565, 0.63475, 1.1833212, 2.0564113, 2.6247141, 3.8398597, 4.4684315,
            4.191401, 4.503457, 5.183482, 4.677526, 4.852936, 3.8739462, 4.80617, 4.7071075,
            5.701272, 4.644537, 3.9581418, 2.6953843, 1.9064124, 0.6273862, 1.5325661, 2.9578745,
            3.1654205, 4.482876, 6.11821, 5.2278357, 5.646237, 4.5422297, 5.824842, 6.8665166,
            6.4831905, 6.2187886, 5.921283, 5.681504, 6.450452, 5.125992, 3.9837935, 1.8088393,
            1.5541921, 1.2526474, 2.5556846, 3.0632923, 3.3179927, 4.658161, 5.2358255, 4.81213,
            4.98894, 5.30101, 4.9282246, 4.937169, 5.896855, 6.902051, 4.392034, 5.982182,
            5.3747025, 4.1226234, 2.2584717, 1.2651693, 1.0890038, 2.414113, 3.264642, 3.7325566,
            5.245978, 4.1535087, 4.6207476, 4.694224, 6.259188, 4.88994, 5.0582223, 5.3430347,
            6.0712447, 5.288064, 5.0523243, 4.227684, 3.6718545, 2.5390146, 1.05427, 1.2276596,
            2.1714513, 3.2038875, 3.2521954, 5.2610416, 5.4053483, 5.2929897, 4.783733, 5.604592,
            6.4564385, 6.6492996, 5.0722923, 5.3840528, 4.877078, 5.8290396, 4.699025, 3.230447,
            1.9850641, 2.106953, 0.48381203, 2.3452704, 2.8150702, 3.5258787, 4.412334, 4.8867626,
            4.97742, 4.909468, 5.9368005, 5.0687866, 5.252167, 6.623729, 5.920814, 4.742525,
            5.587311, 5.032044, 3.7446446, 2.943689, 1.0277079, 0.5802649, 1.5342251, 3.3803499,
            3.325787, 5.2533646, 4.6482263, 5.064406, 3.611857, 5.752717, 5.1648965, 5.275901,
            6.014625, 5.9367113, 5.5224676, 4.5281606, 4.1601086, 3.9180133, 2.2247572, 1.3282158,
            0.75194526, 1.0164405, 3.128558, 2.6073923, 3.9285202, 4.120146, 4.637632, 3.6038396,
            3.9656544, 4.5576777, 3.8731556, 4.7050543, 4.2660584, 4.012613, 4.7539945, 2.8969631,
            2.3881216, 1.9911064, 1.6365876, 0.20132887, 1.0975598, 1.9777933, 2.6802073,
            2.7302666, 3.8134937, 2.613533, 3.3084393, 3.3357406, 3.0839043, 4.243313, 3.7175856,
            3.8841786, 3.8869755, 3.6739404, 3.286619, 2.468833, 1.7009152, 0.36608163, 0.10352849,
            0.7779203, 1.0661256, 1.3576355, 2.044823, 2.0255451, 2.3742697, 1.8613764, 2.1458519,
            2.408561, 2.5040894, 2.529921, 3.395283, 2.7652214, 1.8031487, 2.4198458, 1.5638833,
            1.0196599, 0.7507961, 0.3539611, 0.25022644, 0.8952556, 0.82139885, 0.823419,
            0.95241886, 1.0403969, 0.8415886, 0.9700455, 1.4035192, 0.9710681, 1.2050465,
            1.5578336, 0.98767066, 1.2213025, 0.9721504, 0.60281694, 0.57385045, 0.38037026,
        ],
    )
    .unwrap();
    let current_output12: Array3<f32> = conv_layer12.convolve(&test_input12);

    assert!(
        arr_allclose(&current_output12, &target_output12),
        "{:?} was not equal to {:?}",
        current_output12,
        target_output12
    );

    let test_input13 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.44947338, 0.5519129, 0.79122764, 0.7513198, 0.9315116, 0.03313805, 0.41213843,
            0.45310238, 0.01799934, 0.4328227, 0.23842481, 0.20688592, 0.57869387, 0.9324833,
            0.43915927, 0.53123087, 0.5324186, 0.4149537, 0.22217223, 0.0080786, 0.65063345,
            0.7681623, 0.8421627, 0.27179125, 0.68530315, 0.9955617, 0.77906156, 0.18006648,
            0.5975193, 0.6555531, 0.9498266, 0.9690994, 0.5122471, 0.3840358, 0.8757204, 0.7260429,
            0.04691354, 0.40678895, 0.35535267, 0.19270384, 0.23519029, 0.6665529, 0.26402712,
            0.55168146, 0.08576613, 0.9567203, 0.57141143, 0.20602623, 0.75538653, 0.96776,
            0.44755465, 0.82362133, 0.29203537, 0.30861592, 0.39762703, 0.26186082, 0.9658112,
            0.27424002, 0.50570756, 0.8114843, 0.5536027, 0.59788686, 0.05054026, 0.28394443,
            0.6402348, 0.02258505, 0.60607, 0.6834324, 0.8004999, 0.3349493, 0.4295082, 0.37033585,
            0.0394791, 0.50698835, 0.29841292, 0.9388161, 0.84357476, 0.29760668, 0.25654384,
            0.71037215, 0.14646496, 0.9906275, 0.9552909, 0.7966291, 0.6094893, 0.7271988,
            0.09518696, 0.3957746, 0.6157527, 0.31079137, 0.46793708, 0.8514491, 0.86081386,
            0.8208274, 0.2372746, 0.6977758, 0.79387194, 0.9463199, 0.99063903, 0.29514915,
            0.8795419, 0.741553, 0.03520088, 0.83411527, 0.47134155, 0.26704508, 0.2872401,
            0.04289522, 0.583651, 0.94414073, 0.5729697, 0.72244126, 0.7707775, 0.02079507,
            0.22973806, 0.18128674, 0.05054512, 0.6523751, 0.27093726, 0.32479268, 0.53774405,
            0.08921466, 0.18494032, 0.78120434, 0.15868789, 0.81183356, 0.21792394, 0.6620494,
            0.6886836, 0.39724785, 0.59319293, 0.02472531, 0.21891202, 0.5342134, 0.4041879,
            0.53426075, 0.20461221, 0.29362342, 0.7835011, 0.47930118, 0.2895624, 0.7320774,
            0.55179524, 0.37774232, 0.04187773, 0.23883641, 0.63051957, 0.97746944, 0.6415133,
            0.4162999,
        ],
    )
    .unwrap();

    let kernel13: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.04763152, 0.6454271, 0.27354005, 0.13098118, 0.22876394, 0.09082693, 0.4102024,
            0.19057496, 0.0965838, 0.59153587, 0.9772445, 0.5337058, 0.75958186, 0.8120847,
            0.48198408, 0.6238241, 0.6206928, 0.6217685, 0.5710282, 0.4622738, 0.8904992,
            0.66274744, 0.17967562, 0.17222154,
        ],
    )
    .unwrap();
    let conv_layer13 = ConvolutionLayer::new(kernel13, 1, Padding::Valid);
    let target_output13: Array3<f32> = Array::from_shape_vec(
        (2, 17, 13),
        vec![
            0.0214091, 0.085161, 0.29435265, 0.6316981, 0.7938178, 0.89982164, 0.85051215,
            0.6401802, 0.24886775, 0.45263195, 0.33210132, 0.18819217, 0.25603014, 0.30145884,
            0.5001263, 0.8750606, 1.5564681, 1.9660573, 1.9585402, 2.0120146, 1.8705492, 0.823773,
            1.287228, 0.88289, 0.23481163, 0.42775238, 0.30782548, 0.5016768, 1.1838632, 2.4004626,
            2.3713455, 2.5219278, 2.6762147, 2.5061367, 1.9230295, 1.6833696, 1.1700583,
            0.89242977, 0.6266779, 0.5303969, 0.89345026, 1.5843458, 2.6499317, 2.662193,
            2.8680763, 2.5444856, 2.4427989, 2.5005627, 1.9524143, 1.0951006, 1.1174607,
            0.75893855, 0.8022206, 1.1745417, 1.2926596, 2.5236306, 2.980131, 2.4922934, 1.7673835,
            2.3772042, 2.6905513, 1.56337, 1.2811838, 1.610022, 1.110656, 0.43293148, 0.93322325,
            0.99297017, 2.180986, 2.3907344, 1.9527897, 1.9374266, 1.665062, 2.7157862, 2.3331072,
            1.3115684, 1.7629108, 1.5286072, 0.3795668, 0.93865216, 0.92548203, 1.8179914,
            2.0846753, 1.2991722, 2.0689704, 1.5827842, 2.0098495, 3.0533957, 1.5973411, 1.756394,
            1.5076522, 0.5001924, 0.8523773, 0.69938743, 1.7144309, 1.9925506, 0.87308025,
            1.8723824, 2.296262, 2.15944, 2.620208, 1.5402967, 1.6375436, 1.1806319, 0.4356251,
            0.617478, 0.54898775, 1.9181013, 2.3141425, 1.9344672, 2.5138016, 2.1316247, 2.2138903,
            2.266187, 1.5021284, 1.3373945, 1.0568159, 0.2343087, 0.9150431, 1.3014967, 2.2498057,
            3.0304854, 2.9583204, 2.449962, 1.9950334, 2.8060298, 2.2080817, 1.8281505, 1.5735687,
            0.8574402, 0.38397723, 1.0913994, 1.6645789, 2.6935933, 2.7818859, 2.780795, 2.830913,
            2.097697, 2.5999544, 1.9121664, 1.8684773, 2.115532, 1.0127971, 0.72297114, 1.0646919,
            1.0843486, 2.9191804, 2.6606317, 1.727865, 2.025666, 1.3778505, 1.7345645, 2.066039,
            1.5362613, 1.6010156, 1.2723057, 0.6360137, 0.95477223, 1.1749526, 2.0758827,
            1.8483092, 1.631276, 1.3756413, 1.4938191, 1.533859, 1.4236584, 1.6546404, 1.2996889,
            1.0562816, 0.53205943, 0.5091305, 0.8310452, 1.9554526, 1.1219575, 1.8007423,
            1.7451506, 1.6091459, 2.1415854, 1.3234471, 1.8308126, 1.5847677, 0.8450758,
            0.54374963, 0.29770213, 0.6115752, 2.0672371, 1.3396724, 1.6618848, 1.7209165,
            1.3490084, 2.3953106, 1.9737594, 1.8977264, 1.8131825, 0.92666423, 0.34915346,
            0.59938526, 0.6982196, 1.2775154, 1.1274416, 1.1262426, 1.2673647, 1.2277869,
            1.5371108, 1.5577323, 1.4486328, 1.1707034, 0.6626326, 0.07920691, 0.22655255,
            0.24539748, 0.37869346, 0.48977283, 0.40011504, 0.39981312, 0.3700633, 0.45262647,
            0.603061, 0.6214521, 0.38258716, 0.22218166, 0.34141183, 0.69961536, 1.2019607,
            1.677321, 1.9938428, 1.5596793, 1.3635799, 1.2375499, 0.553633, 0.87187064, 0.5805758,
            0.25908297, 0.28685215, 0.5461136, 1.0330669, 1.8976651, 2.7825928, 3.0705807,
            2.6880467, 2.5254505, 2.048184, 1.5760432, 1.3807116, 0.7652978, 0.35517383,
            0.08312176, 0.9044695, 1.8508421, 3.3237753, 4.279552, 4.6359572, 4.5365605, 4.0950813,
            3.301954, 3.1135364, 2.6160548, 1.4149426, 1.2025254, 0.51045907, 1.3647574, 2.604252,
            3.6173632, 4.0441327, 4.4344935, 4.626511, 3.997956, 3.6261044, 3.0983727, 2.361134,
            1.5825273, 0.8014099, 0.2468922, 1.2635808, 2.8043456, 3.67016, 3.8194442, 3.743807,
            3.9659622, 4.0596056, 3.5443077, 3.6210299, 3.2582085, 2.4992766, 1.8928542, 0.788905,
            0.9887501, 2.6497445, 3.4233155, 3.6759653, 3.1449761, 3.2740076, 3.845203, 3.2261126,
            3.048641, 3.8653765, 2.46996, 1.6144334, 0.7448798, 0.8973168, 2.2136405, 2.4338896,
            2.9126914, 2.6202643, 2.3179727, 3.255999, 3.6704042, 3.6356473, 4.0369086, 3.2156086,
            2.1796694, 0.5344599, 0.99153316, 2.0536375, 2.2257416, 2.6845071, 2.4233198,
            2.4695668, 3.6215672, 3.5771823, 4.162336, 3.7384431, 2.4897435, 1.6840547, 0.67073464,
            0.72687685, 2.0435524, 2.7767997, 3.3444157, 3.436864, 3.8801973, 3.8239472, 3.2686946,
            3.5569737, 3.3066788, 2.459586, 1.3961756, 0.39129823, 0.6813946, 2.2795897, 3.5423458,
            4.353599, 3.9151382, 4.322319, 4.014711, 4.151264, 4.400521, 3.6555269, 2.6470318,
            1.7561566, 0.37379238, 1.1186824, 2.6623774, 3.6422398, 5.2257714, 4.4533877,
            3.8479302, 3.7196672, 3.305557, 3.4481783, 3.6322594, 2.5715902, 1.6231829, 0.73228294,
            1.3750181, 2.7556484, 3.619779, 4.2586036, 3.6943383, 3.0681028, 2.2323737, 2.8160489,
            3.3361187, 3.7598011, 2.881876, 1.3397876, 0.43572566, 1.2976857, 2.2498333, 3.10369,
            3.284055, 2.3630562, 2.8928437, 2.4117045, 2.4120662, 2.8892417, 2.9020464, 2.6380668,
            1.8233609, 0.48423368, 1.1634345, 1.4995123, 2.3055055, 3.0679326, 2.4313958,
            2.6417086, 2.3133912, 2.5471942, 3.078473, 3.1660223, 2.180451, 1.4362235, 0.4449677,
            0.9608533, 1.5023308, 2.1319785, 2.5923836, 2.5754516, 2.9774406, 2.5684493, 3.1898458,
            3.7019353, 3.9872425, 2.9605708, 1.4975798, 0.43043506, 0.52105874, 1.154984,
            1.6854802, 1.557475, 1.3812556, 1.5159476, 1.6302477, 2.117191, 2.2964761, 2.316283,
            1.7768662, 0.8694619, 0.15734494, 0.13956447, 0.53289044, 0.97899425, 1.226938,
            0.87250537, 0.5725639, 0.5547488, 1.0830578, 1.5195689, 1.5785474, 0.9984505,
            0.48119712, 0.07169581,
        ],
    )
    .unwrap();
    let current_output13: Array3<f32> = conv_layer13.convolve(&test_input13);

    assert!(
        arr_allclose(&current_output13, &target_output13),
        "{:?} was not equal to {:?}",
        current_output13,
        target_output13
    );

    let test_input14 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.62424076, 0.95776683, 0.998361, 0.150883, 0.28713444, 0.35105017, 0.1765902,
            0.9674033, 0.65025777, 0.1959308, 0.3119046, 0.55247456, 0.38556734, 0.18145509,
            0.94255227, 0.7036003, 0.3402552, 0.16401337, 0.28418577, 0.5504918, 0.6148071,
            0.7740251, 0.37459207, 0.25677747, 0.80441076, 0.17314304, 0.5946227, 0.30094627,
            0.06480476, 0.5798754, 0.62549657, 0.6065069, 0.9259787, 0.3677915, 0.69532603,
            0.8356569, 0.39276573, 0.18570696, 0.61698794, 0.9064707, 0.01547038, 0.2551995,
            0.11438051, 0.03861368, 0.6524532, 0.36442748, 0.08230381, 0.79969245, 0.27816203,
            0.3741886, 0.44356522, 0.27386904, 0.4171807, 0.14990133, 0.4750283, 0.6358263,
            0.77572674, 0.7072159, 0.34310365, 0.36999545, 0.8200852, 0.46510443, 0.9230857,
            0.86201537, 0.04691705, 0.12260284, 0.89921826, 0.47400048, 0.7492544, 0.05440097,
            0.28273952, 0.9184355, 0.9064988, 0.7027802, 0.19125043, 0.8670149, 0.08634489,
            0.722654, 0.77540857, 0.00211577, 0.6443405, 0.2344423, 0.9849179, 0.9893316,
            0.87634915, 0.48734385, 0.8760625, 0.53053117, 0.01152504, 0.6788874, 0.76156837,
            0.4680538, 0.07214947, 0.549209, 0.8383253, 0.00365476, 0.9782156, 0.7419056,
            0.40790308, 0.00302504, 0.80174476, 0.7689671, 0.50054824, 0.16478458, 0.89107823,
            0.7763043, 0.73042727, 0.41667554, 0.7348974, 0.71259016, 0.93557405, 0.37013116,
            0.14954911, 0.33766475, 0.39673004, 0.03940821, 0.2414454, 0.9373305, 0.84819096,
            0.9272432, 0.8604789, 0.92845494, 0.8023847, 0.06647868, 0.12827316, 0.02774826,
            0.8982795, 0.1193029, 0.37523487, 0.28379655, 0.0638791, 0.08446726, 0.68760884,
            0.2630593, 0.01052708, 0.45302406, 0.10402057, 0.5539082, 0.39986408, 0.53770447,
            0.24856173, 0.12796782, 0.80071914, 0.38390577, 0.6908975, 0.5850918, 0.71101063,
            0.17578217, 0.55867785, 0.71616316,
        ],
    )
    .unwrap();

    let kernel14: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.3247584, 0.47418702, 0.5871326, 0.46712968, 0.99522823, 0.5745777, 0.83232373,
            0.7253688, 0.78002185, 0.24024557, 0.8869578, 0.33134556, 0.9196999, 0.9770886,
            0.76900613, 0.08430128, 0.7749884, 0.81429285, 0.49657014, 0.26021662, 0.7069771,
            0.60874844, 0.5181486, 0.7407027,
        ],
    )
    .unwrap();
    let conv_layer14 = ConvolutionLayer::new(kernel14, 1, Padding::Valid);
    let target_output14: Array3<f32> = Array::from_shape_vec(
        (2, 17, 13),
        vec![
            0.20272744, 0.6026442, 1.2911978, 1.4625077, 1.22479, 0.6135708, 0.4965729, 0.75783306,
            0.8943979, 1.2150027, 0.8651644, 0.3192994, 0.04707151, 0.3973005, 1.4005432,
            2.5223103, 3.0873635, 2.7045083, 2.3596323, 2.0424929, 2.1680698, 2.3317373, 2.1282003,
            2.0578074, 1.2453351, 0.30603558, 0.714077, 2.0319693, 3.5772586, 3.8136253, 3.6275363,
            3.300595, 3.2907903, 3.514073, 3.0587034, 2.8783288, 2.2369313, 1.5178738, 0.6924963,
            0.6777982, 1.9716514, 3.2856839, 3.670772, 4.0507565, 3.7499292, 3.8499188, 3.8328643,
            2.4895577, 2.6438675, 2.4649472, 1.9043677, 0.91450363, 0.6625998, 1.8079242,
            2.8098848, 3.5462527, 3.460307, 3.5473697, 3.7589364, 3.3800051, 2.8555865, 3.273257,
            2.596291, 2.0568292, 1.0860376, 0.5186368, 1.1480489, 2.332105, 2.337385, 2.8372717,
            3.0888531, 3.2645524, 3.7564664, 3.6031213, 3.3244953, 2.9754164, 1.820031, 0.7211343,
            0.4857456, 1.2641715, 2.2176082, 2.6662169, 2.796955, 2.9108646, 2.8530416, 3.6944847,
            4.043571, 3.7267365, 2.7042358, 1.1820289, 0.4652257, 0.7411274, 1.8827243, 3.202507,
            4.5645514, 4.1089954, 3.6238916, 3.349078, 3.8071458, 3.8811507, 4.1210523, 2.5525918,
            1.2943577, 0.17135602, 0.82482517, 1.8383088, 3.9635653, 4.9547396, 5.2820954,
            4.620163, 4.065761, 3.3309891, 4.470647, 3.3815165, 2.4324558, 1.5478084, 0.1830018,
            0.7188692, 1.9618902, 3.3241782, 4.719069, 4.5513372, 5.0292063, 4.4936075, 4.370147,
            4.120414, 3.578365, 2.519226, 0.8617592, 0.60357237, 0.9998125, 2.111999, 3.4571087,
            4.010355, 4.30823, 4.1119146, 4.74958, 4.893668, 4.028783, 4.01951, 2.5764313,
            1.6670144, 0.39882603, 1.1311541, 2.4321806, 3.4897132, 3.5389004, 3.1507666, 3.269662,
            3.8319592, 4.1015687, 4.335301, 4.693885, 3.5418754, 2.2817707, 0.85580575, 1.1938152,
            2.7222502, 3.8895004, 4.0329766, 3.1876545, 2.370309, 2.7929683, 3.142622, 3.9749346,
            4.168128, 3.9637294, 2.550603, 1.1267201, 0.9780792, 2.1087813, 3.274844, 3.6419337,
            2.9176602, 2.0009365, 1.5086863, 2.5437953, 2.794843, 4.0816317, 2.8824716, 2.0865986,
            0.68813455, 0.61622834, 1.3008349, 2.658925, 3.101333, 2.9884222, 2.4583614, 2.5780847,
            2.3966436, 3.2127805, 2.7305856, 2.6535387, 1.820696, 0.74301094, 0.15537024,
            0.3943533, 1.1894243, 1.9288168, 2.1256738, 2.6587832, 2.1778617, 2.570018, 2.25884,
            2.6657345, 2.0782955, 1.5669204, 0.8133725, 0.14593868, 0.2179521, 0.73753935,
            0.86765647, 1.2932122, 1.3052704, 1.4197589, 1.1970485, 1.1774899, 1.1141907,
            0.9055169, 0.7437383, 0.23729748, 0.57411414, 0.93348235, 1.3089128, 1.0785341,
            1.3555925, 1.0297413, 0.42643613, 1.2537212, 0.980986, 0.8228977, 0.928321, 0.49313676,
            0.11927257, 0.8967972, 1.954007, 2.4362464, 2.1574223, 2.5634856, 2.1734726, 1.548252,
            2.4249125, 2.4854019, 1.8574368, 1.1096789, 0.83427006, 0.43663228, 1.3502414,
            2.7900822, 3.5900884, 3.8763258, 4.6257486, 3.5974693, 3.0706732, 3.34659, 3.0162072,
            3.5221977, 2.1856437, 1.2380624, 0.7833613, 1.4158467, 2.522132, 3.3060968, 3.2345572,
            4.537428, 4.349452, 3.693759, 3.857657, 2.941641, 3.2429562, 1.8886976, 1.6098707,
            1.260025, 1.0981841, 2.4092379, 3.0249562, 3.245307, 4.000951, 3.6570213, 3.213962,
            3.817998, 2.711452, 3.5823908, 2.356677, 1.3686714, 1.1269885, 0.90407354, 1.5263572,
            2.5887616, 2.7087886, 3.5909085, 4.0389647, 3.3933182, 4.1672354, 3.7715552, 3.6462438,
            2.720699, 1.7319506, 1.0905447, 1.1995317, 1.3170903, 2.337395, 2.6863825, 2.4911804,
            3.274815, 3.687301, 3.7278678, 3.858055, 3.2499442, 2.5013444, 1.2277571, 0.5019916,
            1.4024358, 2.5303242, 3.3847337, 4.431702, 3.4246204, 3.863836, 3.6689336, 4.41199,
            4.600794, 3.340298, 2.3755567, 1.3911766, 0.30353236, 1.4995121, 2.4119055, 4.5850043,
            5.6270895, 4.699581, 4.6865144, 4.517431, 3.6531456, 4.2651176, 3.910986, 1.8888675,
            1.3398936, 0.4546629, 1.5474205, 2.159613, 3.4405646, 5.469386, 5.1793237, 4.304557,
            5.0530925, 4.435803, 3.7165585, 3.473205, 2.543655, 1.0082849, 0.3551732, 1.9769862,
            2.5273132, 2.9585536, 4.378422, 5.405616, 4.5265236, 5.1642637, 5.406074, 4.1974645,
            3.943299, 2.1254828, 1.5018547, 0.9382093, 2.2294736, 2.7720475, 2.9019964, 3.617027,
            3.7095664, 3.2069044, 4.015219, 4.771032, 4.2483635, 4.8729715, 2.869707, 1.8472636,
            0.9359261, 2.3220677, 3.2573447, 3.4978375, 3.8123584, 3.710117, 2.8789542, 3.4231734,
            3.7201672, 4.452379, 4.8130765, 3.116318, 2.098247, 1.1810279, 1.6189759, 2.703578,
            3.476517, 3.0910811, 2.25138, 2.22917, 2.0146015, 2.8751156, 3.0645144, 4.1764383,
            3.009461, 2.0624976, 1.161187, 0.95273125, 1.6853529, 3.6059875, 3.4786901, 2.9878957,
            2.9170816, 2.725095, 2.6157358, 3.3609734, 3.5326712, 1.8373201, 1.5214033, 0.9247829,
            0.29199022, 0.4346405, 1.5889444, 2.0269904, 2.0182488, 2.6741552, 2.1780407,
            2.0717552, 2.337926, 2.7546275, 1.9223017, 1.1521609, 0.76935804, 0.1911455,
            0.30081007, 0.89568865, 1.2218263, 1.5047925, 1.8770396, 1.7960165, 1.6395446,
            1.5088122, 1.6565828, 1.1083413, 0.9201252, 0.530464,
        ],
    )
    .unwrap();
    let current_output14: Array3<f32> = conv_layer14.convolve(&test_input14);

    assert!(
        arr_allclose(&current_output14, &target_output14),
        "{:?} was not equal to {:?}",
        current_output14,
        target_output14
    );

    let test_input15 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.58577555, 0.40479863, 0.7506117, 0.11343616, 0.8795398, 0.83064, 0.8858372,
            0.3898591, 0.9350765, 0.9673369, 0.64465624, 0.0283905, 0.22112074, 0.1391855,
            0.34128338, 0.65248054, 0.291874, 0.70765275, 0.32796225, 0.22921298, 0.59572685,
            0.5726663, 0.72872376, 0.8248998, 0.29288608, 0.92347336, 0.25887516, 0.91578674,
            0.800785, 0.7670362, 0.8990461, 0.8424308, 0.7045559, 0.43518323, 0.48451254,
            0.31151697, 0.10086012, 0.5242353, 0.19001916, 0.01069371, 0.01020448, 0.12606935,
            0.04778918, 0.8456499, 0.57045126, 0.46361542, 0.7532553, 0.62787765, 0.3127784,
            0.9686197, 0.96754897, 0.5766132, 0.6463905, 0.6347338, 0.52757853, 0.55145216,
            0.08155768, 0.13378453, 0.2262157, 0.73179847, 0.5428326, 0.9094368, 0.2528448,
            0.24383228, 0.7446406, 0.5544842, 0.01949351, 0.13375893, 0.04438103, 0.8489,
            0.6848837, 0.9220802, 0.00185038, 0.44556108, 0.00844186, 0.8082305, 0.33159012,
            0.5138473, 0.65069795, 0.9300001, 0.58097035, 0.5413155, 0.5714561, 0.21683556,
            0.8548128, 0.02262598, 0.62476623, 0.33444464, 0.98826236, 0.03221937, 0.12669064,
            0.50246465, 0.42635268, 0.91064155, 0.7792924, 0.07601635, 0.6067355, 0.3940292,
            0.30074376, 0.1328066, 0.72018456, 0.34319454, 0.6295161, 0.03357495, 0.03066352,
            0.51702976, 0.9283114, 0.36689135, 0.6327302, 0.37459058, 0.93406814, 0.33968034,
            0.59511477, 0.4350908, 0.7094508, 0.29612544, 0.80898666, 0.7905302, 0.4748418,
            0.6989706, 0.85952836, 0.70326394, 0.38940284, 0.37933362, 0.22292, 0.3949557,
            0.27719194, 0.8619771, 0.9255003, 0.30563155, 0.5844432, 0.36121982, 0.09087573,
            0.23811613, 0.17829578, 0.9398569, 0.04807154, 0.7588201, 0.05337733, 0.19222781,
            0.98696715, 0.32119673, 0.3872288, 0.74463385, 0.6260977, 0.0084233, 0.31085488,
            0.10247751, 0.60939455, 0.00353958,
        ],
    )
    .unwrap();

    let kernel15: Array4<f32> = Array::from_shape_vec(
        (2, 1, 4, 3),
        vec![
            0.22236562, 0.33567885, 0.8293213, 0.9627444, 0.47292593, 0.9101412, 0.8205645,
            0.705448, 0.8425068, 0.61566937, 0.02662205, 0.3117258, 0.31823838, 0.96525836,
            0.9416077, 0.866447, 0.2669342, 0.07020015, 0.7792785, 0.28257245, 0.9708137,
            0.59327537, 0.05098573, 0.11623824,
        ],
    )
    .unwrap();
    let conv_layer15 = ConvolutionLayer::new(kernel15, 1, Padding::Valid);
    let target_output15: Array3<f32> = Array::from_shape_vec(
        (2, 17, 13),
        vec![
            0.13025634, 0.6539655, 1.0372945, 1.4406791, 1.1699369, 1.5866882, 1.7882321,
            2.1626253, 1.8215498, 1.9806296, 1.9386132, 1.3694603, 0.5955597, 0.33998185,
            1.0398631, 1.4621229, 1.358245, 1.2979966, 1.5187974, 2.3724895, 2.343069, 2.5407152,
            2.1926298, 2.0529733, 1.0972998, 0.1668719, 0.8346628, 1.8841252, 3.2290726, 3.2110546,
            3.7382102, 3.9162889, 4.612868, 4.3394666, 4.644305, 4.8492656, 4.107728, 2.3993258,
            0.77988666, 0.93451697, 2.137119, 3.3934867, 3.6027958, 3.2461138, 3.4143553,
            2.9068797, 3.3653166, 3.0959764, 3.1424744, 2.1465378, 0.98353434, 0.09845546,
            0.7981089, 1.7629461, 3.036972, 3.4568205, 3.7318711, 3.9896567, 3.6962218, 3.9172053,
            3.972298, 4.1786456, 3.3870676, 1.8958441, 0.83573914, 0.9641732, 2.6237707, 3.6841514,
            4.2201266, 3.8963926, 3.8581872, 3.1808183, 2.7348733, 2.3479943, 2.1314857, 2.0012193,
            1.4996428, 0.47966605, 0.4539558, 1.4898119, 2.7124095, 3.1835976, 3.438653, 3.7265825,
            3.7674236, 3.2232032, 2.3174353, 2.6542046, 2.7860982, 2.159739, 0.84406745, 1.1369209,
            2.785209, 4.2240725, 4.0387006, 3.307471, 2.9453979, 3.1455572, 2.3812454, 2.0657425,
            2.8107984, 3.0803208, 2.4508388, 0.8232925, 0.80927145, 2.5613875, 3.5395367,
            3.5871675, 2.776417, 3.3692431, 2.7311945, 2.9483535, 2.133021, 3.4720984, 2.8121,
            2.0373094, 0.309219, 0.7911798, 2.0782073, 2.9579585, 3.2052007, 3.2177577, 3.410864,
            3.3940392, 3.0718746, 3.4607642, 3.6464832, 2.8933673, 1.3295445, 0.37252775,
            0.68448275, 1.9759399, 2.9875348, 3.5407872, 3.3298626, 2.7650278, 2.8901403,
            3.0435429, 3.9487245, 3.4486804, 2.3573682, 1.1338347, 0.24420314, 0.55452263,
            1.9626102, 3.0251303, 3.6998413, 3.744431, 3.3732185, 3.406457, 3.748107, 3.9102652,
            3.3728065, 2.6796331, 1.3526348, 0.4817064, 1.1019409, 2.4797447, 3.9294863, 3.3719318,
            2.7334003, 2.2923641, 3.0587513, 3.3899388, 4.420057, 4.360375, 3.2593327, 1.8391547,
            0.32354558, 1.1931282, 2.4173944, 3.5068593, 3.106983, 2.7051375, 2.5913167, 3.3293967,
            3.6635323, 4.172065, 3.8321905, 2.7990773, 1.1677519, 0.3443725, 1.1284779, 2.7847965,
            3.5060046, 3.3323233, 2.6952171, 2.9956908, 2.5375779, 3.0290458, 2.8388586, 3.3977418,
            2.041922, 1.0611167, 0.10256995, 0.8159952, 1.4060745, 1.8746644, 1.4526517, 1.3977939,
            2.0051951, 1.6895456, 1.724494, 1.54092, 1.2322505, 0.89076734, 0.19731265, 0.0600166,
            0.8185129, 1.1646547, 1.444998, 1.5482471, 1.6233263, 1.3248912, 1.025078, 0.5701761,
            0.86317605, 0.74081004, 0.5485855, 0.19294612, 0.00110338, 0.18641627, 0.6363659,
            1.0460923, 1.349442, 1.2032824, 1.5601338, 1.7543182, 2.0607083, 1.8184817, 1.9473922,
            1.7981249, 1.3085827, 0.5738971, 0.7705791, 1.1146941, 1.5954475, 1.0945766, 1.5303686,
            1.8498839, 2.3378608, 2.0813696, 2.6313865, 2.4203892, 1.416327, 0.69421095, 0.1853068,
            1.3634138, 1.320178, 2.8993866, 2.5484562, 3.7579794, 3.4355881, 3.919071, 3.7098107,
            4.283517, 3.7867575, 3.0428913, 2.2021072, 0.5791918, 1.4681547, 1.8308479, 3.5153956,
            3.370855, 2.8672054, 3.3150508, 2.227108, 3.3733122, 2.6334486, 2.8223052, 1.3628168,
            0.63928384, 0.07209553, 1.4320002, 1.6831584, 2.5961037, 2.75993, 2.9598827, 3.693715,
            2.6160746, 4.0089154, 3.0503216, 3.427371, 2.476489, 1.7908293, 0.6643624, 1.16431,
            2.0025964, 3.1373262, 4.032175, 3.6286507, 3.1836274, 2.9844077, 2.6826468, 1.6344793,
            2.359885, 1.5148338, 1.0266045, 0.4847868, 1.1162935, 1.6940302, 2.406471, 3.2481203,
            2.7331116, 3.3502204, 3.0128596, 2.4274485, 1.903154, 2.8642542, 1.5601835, 1.8828857,
            0.6535334, 1.6529815, 2.5204644, 3.5618818, 3.1710894, 3.074784, 2.676252, 2.1678746,
            2.1430194, 1.8682011, 3.1712642, 2.1502213, 2.0896456, 0.68009096, 1.3571122,
            2.6429515, 2.373981, 3.250038, 2.4704561, 3.004746, 2.3826566, 2.738027, 2.1392894,
            3.665871, 1.5730094, 1.7366709, 0.16520634, 1.2459961, 1.8635813, 2.2613997, 3.0648124,
            2.8876488, 3.1968222, 2.6971526, 3.0049887, 3.240561, 2.8498905, 1.6448303, 1.3199017,
            0.18853518, 0.8985257, 1.8025367, 2.7804868, 3.2294314, 3.3122394, 1.5094478, 3.104744,
            2.4258068, 3.683398, 2.3518586, 2.1763816, 0.8663077, 0.23275173, 1.1117133, 1.9229516,
            2.674086, 3.1970308, 2.7720137, 3.0098057, 3.808508, 2.9317849, 3.5482426, 3.0105567,
            2.0892367, 1.1284024, 0.44921806, 1.8532834, 1.9194669, 3.6481442, 2.7312284,
            2.7889879, 2.06873, 2.8558412, 2.9695199, 3.9876304, 3.6626232, 2.5416942, 1.4461738,
            0.26050293, 1.895185, 1.9150293, 3.0948372, 2.3851926, 2.3262966, 2.0810425, 3.0870204,
            3.3214262, 3.8138275, 3.0800223, 1.6473339, 1.0487819, 0.21087399, 1.687568, 2.184588,
            2.7704172, 2.9614677, 2.3128264, 3.1829565, 1.9449439, 2.940365, 2.0925245, 2.4318807,
            1.6639749, 0.8256267, 0.0474269, 1.5029945, 0.9546485, 1.4167163, 1.6124145, 1.2437223,
            1.5446362, 0.8292002, 1.8672335, 0.963292, 1.1379023, 0.33188564, 0.2248925,
            0.02252469, 0.9293359, 0.37172657, 1.3453269, 1.1548821, 1.0550742, 0.81979513,
            0.9876738, 0.19926962, 0.8837659, 0.1817323, 0.6037689, 0.07427122, 0.00041143,
        ],
    )
    .unwrap();
    let current_output15: Array3<f32> = conv_layer15.convolve(&test_input15);

    assert!(
        arr_allclose(&current_output15, &target_output15),
        "{:?} was not equal to {:?}",
        current_output15,
        target_output15
    );

    let test_input16 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.19467542, 0.09732427, 0.43287596, 0.20617688, 0.8857049, 0.9601851, 0.09430943,
            0.28105715, 0.6942895, 0.07089514, 0.7148581, 0.00085336, 0.23516753, 0.04615124,
            0.59699446, 0.53420085, 0.75324225, 0.38793716, 0.2669936, 0.29911962, 0.7380972,
            0.17850904, 0.65695775, 0.8119258, 0.26960826, 0.12972821, 0.6597052, 0.7345929,
            0.6485681, 0.22981846, 0.24392553, 0.26706976, 0.32711208, 0.9581323, 0.31259444,
            0.91530424, 0.17250775, 0.715259, 0.5014661, 0.7273789, 0.23862323, 0.4093651,
            0.04974006, 0.8688277, 0.46409306, 0.20740515, 0.19872624, 0.27135858, 0.02647329,
            0.90772045, 0.97377276, 0.47016057, 0.06899374, 0.47393376, 0.49847803, 0.02369655,
            0.10663922, 0.02373338, 0.21085607, 0.56809616, 0.70259374, 0.4123619, 0.01858313,
            0.25862443, 0.4823392, 0.47215322, 0.593886, 0.8265343, 0.06712108, 0.3228139,
            0.11140465, 0.59627575, 0.49184018, 0.8395536, 0.13370071, 0.25792846, 0.54400545,
            0.8792363, 0.58678144, 0.03434712, 0.8123595, 0.67917913, 0.02545591, 0.2468276,
            0.9191908, 0.02958322, 0.20474248, 0.76555794, 0.82307637, 0.24628638, 0.17773865,
            0.17740512, 0.4937253, 0.9466453, 0.13741271, 0.728613, 0.5338591, 0.7898385,
            0.47936276, 0.23633894, 0.8572216, 0.06004518, 0.3347224, 0.50485814, 0.09635731,
            0.18004768, 0.24514198, 0.228041, 0.05106571, 0.30884218, 0.38737774, 0.7948706,
            0.5052517, 0.23866583, 0.5068071, 0.15044466, 0.09537497, 0.13518302, 0.7257979,
            0.86458087, 0.7176047, 0.09527912, 0.72005635, 0.7382226, 0.41232714, 0.5491061,
            0.7183669, 0.07962471, 0.04476061, 0.19437055, 0.79608136, 0.6295519, 0.98047,
            0.56819236, 0.10505454, 0.9480506, 0.10080674, 0.9538371, 0.2355401, 0.94827145,
            0.46488547, 0.60260093, 0.76637876, 0.3219317, 0.4168223, 0.25562465, 0.8997145,
            0.59076214, 0.22263806, 0.6840723,
        ],
    )
    .unwrap();

    let kernel16: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.24348243, 0.03732051, 0.21377262, 0.6243543, 0.74306166, 0.34627816, 0.666532,
            0.86947584, 0.4878141, 0.39436254, 0.7407666, 0.80578685, 0.8154824, 0.15653013,
            0.6606655, 0.13005458, 0.6098745, 0.32867205, 0.52372193, 0.40489906, 0.14445187,
            0.5690737, 0.02384425, 0.67610437, 0.4431474, 0.94946456, 0.44508553, 0.6692434,
            0.061506, 0.8282889, 0.9748906, 0.9382296, 0.12576632, 0.24558064, 0.45260343,
            0.9677088, 0.976145, 0.3646563, 0.40195072, 0.7309763, 0.69001645, 0.04455515,
            0.00950876, 0.62839466, 0.9551375, 0.9216249, 0.6428197, 0.68798536, 0.6370576,
            0.6631732,
        ],
    )
    .unwrap();
    let conv_layer16 = ConvolutionLayer::new(kernel16, 1, Padding::Valid);
    let target_output16: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.04740004, 0.0911086, 0.283308, 0.29750896, 0.64848685, 0.7635735, 1.1008983,
            0.9573355, 0.5890507, 0.6168427, 0.5890319, 0.18341151, 0.10951165, 0.01024094,
            0.18132077, 0.38113713, 0.82498944, 0.6796436, 1.1283411, 1.5133944, 2.5798728,
            2.3398664, 2.291893, 1.9236014, 1.2924006, 0.9528379, 0.5158086, 0.08355295,
            0.24800883, 0.9656293, 1.6898103, 1.8123375, 2.3713858, 2.7246575, 3.2883382,
            3.2142124, 3.304217, 3.0962536, 2.5530543, 1.2780373, 0.49779633, 0.20510927,
            0.36130127, 1.4255848, 2.0732524, 2.5453606, 3.6104472, 4.5675626, 4.1594133, 4.634956,
            4.825213, 4.54247, 3.217996, 2.6117897, 1.2875001, 0.29091966, 0.8159695, 1.5331138,
            2.3627448, 3.2988272, 5.1964974, 5.6039867, 5.295968, 5.4014077, 5.7041783, 5.592074,
            4.349497, 3.3335664, 1.6154069, 0.7841871, 1.2901645, 1.6492338, 3.1291401, 3.6013246,
            5.0146623, 4.8123064, 5.6376266, 5.1469464, 4.570935, 4.1425624, 4.38653, 3.4786537,
            1.7223204, 0.9039016, 0.95916975, 2.0147388, 3.7484279, 4.350403, 5.0147686, 5.052745,
            5.0049343, 4.9408884, 4.523385, 4.3839293, 3.9167135, 3.322567, 1.9175649, 0.9851911,
            0.5917493, 2.2812667, 3.245721, 4.350421, 4.5301414, 5.0153856, 4.0173163, 5.157616,
            4.55012, 5.2369895, 4.1346555, 2.8732977, 1.5260768, 1.138262, 1.1374393, 2.409073,
            3.0650773, 4.1693115, 4.8668423, 4.5702925, 4.2458386, 4.481758, 4.47443, 5.09997,
            3.7549407, 2.5370507, 1.4328471, 0.84916604, 1.2596498, 2.229457, 3.3387327, 4.4421816,
            5.5758452, 4.885346, 3.8138292, 4.691041, 5.1473265, 5.287736, 4.26048, 2.845149,
            1.2817644, 0.6451199, 0.9806384, 2.2981825, 3.531621, 3.578516, 4.40422, 4.7390075,
            5.000563, 5.5905385, 5.126603, 5.6519885, 4.387361, 3.2041152, 1.1402111, 0.351256,
            0.754288, 2.4010801, 2.9817948, 4.4752645, 5.8409505, 4.7396855, 4.027345, 4.9309726,
            5.232549, 4.356365, 4.049335, 3.1703887, 1.4832175, 0.4880157, 1.0870368, 2.3402271,
            3.6695879, 4.468905, 5.338613, 4.7798405, 4.6993976, 4.652656, 4.4571023, 3.8311777,
            3.909921, 3.308917, 1.9871286, 0.7963825, 0.97070473, 2.0751202, 3.7567964, 5.3596396,
            5.6200585, 5.09644, 5.0097847, 5.5036564, 3.9331465, 4.9110527, 4.0648646, 2.9764361,
            1.1072296, 0.58174855, 1.1751353, 2.5740418, 4.2618613, 5.232246, 6.387657, 5.316086,
            4.969211, 4.471207, 4.5983, 4.437792, 3.3454826, 3.1793244, 1.9896396, 1.364496,
            0.9234153, 2.3120556, 3.764224, 5.3024106, 5.585037, 4.57893, 4.7538886, 4.1274557,
            4.4828796, 4.611615, 4.386815, 2.9293242, 1.6649446, 0.9264499, 1.129641, 1.6682241,
            3.157477, 3.913896, 3.9971201, 4.0092072, 4.0216637, 3.6933136, 3.528897, 3.4223015,
            2.515919, 1.7436169, 0.9845603, 0.7435764, 0.88179076, 1.3847548, 2.3479826, 2.459764,
            2.7247403, 3.019365, 2.6211784, 2.9528978, 2.0319085, 3.1608331, 2.2467017, 1.7676457,
            0.9971235, 0.8827283, 0.34543857, 0.63110304, 1.1142437, 1.1277955, 1.3930078,
            1.1443603, 1.5147009, 1.2741029, 1.2810345, 1.4639771, 1.0547669, 0.8038836,
            0.37564173, 0.30314487, 0.1848374, 0.28219318, 0.69427, 0.84627515, 1.7074162,
            2.3630342, 2.4239378, 2.0891435, 2.5032983, 1.9661558, 1.021837, 0.8067063, 0.6887933,
            0.06533873, 0.76537967, 0.9236865, 1.3899004, 1.3687512, 2.6384938, 2.8383925,
            4.157136, 3.3969378, 3.5563323, 3.5105233, 2.3292603, 1.1120305, 0.9019271, 0.3212489,
            1.1492554, 1.6497501, 2.6882524, 2.5970314, 4.396216, 3.5437553, 4.5585165, 4.5579405,
            5.0868473, 4.1741447, 3.338955, 2.1260102, 1.4196062, 0.45286122, 1.0505028, 1.4076011,
            2.5343134, 3.1882703, 5.4091816, 4.965816, 5.4123664, 6.1391487, 6.296177, 6.0836115,
            4.3425007, 3.4568985, 2.0646036, 1.0690566, 1.0343143, 1.5256613, 2.88968, 4.2711744,
            6.359811, 6.4410324, 6.235237, 7.7477837, 6.717102, 6.5245924, 5.0969124, 4.370782,
            2.3400962, 1.6998352, 1.8315225, 2.527717, 3.545435, 4.8447337, 6.3097954, 6.1760144,
            4.994448, 6.1148915, 4.8746724, 5.8330646, 4.6893187, 4.2397447, 2.01606, 1.9522738,
            1.8865576, 3.0615869, 4.041945, 4.8699965, 6.087212, 6.0666533, 5.863974, 6.7957273,
            5.906584, 6.2488074, 5.2256746, 4.555379, 1.898471, 1.9029868, 1.2868977, 2.3699925,
            3.4671168, 4.753459, 5.9934535, 6.690686, 6.1847506, 7.690753, 7.005112, 6.397185,
            4.742312, 4.3627343, 2.3870676, 1.6906564, 1.5486393, 2.8862, 3.592049, 5.3478737,
            7.0840483, 6.0195518, 4.9377604, 6.636633, 6.1998315, 5.8840375, 4.357224, 4.06842,
            2.7323525, 1.4350398, 1.4546617, 2.8473206, 4.0666046, 5.674856, 6.0721264, 6.2059345,
            5.776108, 6.7638164, 6.710263, 6.4966984, 5.0410943, 4.0105, 2.4770157, 0.98216116,
            2.0254793, 2.4187162, 3.1013389, 4.621935, 6.7610483, 5.410724, 5.3780513, 6.9082165,
            6.0244284, 6.0747747, 4.8029094, 3.7192607, 1.8956918, 0.841964, 1.010529, 2.8900135,
            4.34272, 5.4184237, 6.5856886, 6.1713, 5.1692348, 5.9782815, 5.288068, 5.711087,
            5.4609447, 4.8191066, 2.7451727, 1.3376235, 2.1112466, 2.6400733, 4.4316044, 5.6245246,
            7.3457937, 5.8705096, 6.5439844, 6.294048, 5.4690876, 5.628839, 5.432352, 3.8988283,
            1.9534947, 1.2612774, 1.5344397, 3.1117935, 5.003829, 6.2828608, 7.6814075, 7.490622,
            7.5004363, 7.2984447, 6.239097, 6.7862577, 4.9968104, 4.0732694, 2.1866384, 1.9471987,
            2.009822, 2.7882257, 5.6377163, 6.5397058, 7.7161527, 6.3040943, 7.107877, 6.360888,
            5.1114206, 6.2727447, 5.089106, 4.3509307, 2.2380383, 2.1293535, 1.1046836, 2.241623,
            3.803471, 4.3008413, 5.540679, 5.021056, 4.8070717, 5.0096464, 4.337246, 5.1501937,
            3.435019, 3.6335406, 1.8024399, 1.7893242, 0.9544693, 1.099686, 2.4571905, 3.2574515,
            4.136222, 4.0244403, 4.9070773, 3.3955297, 3.1886463, 3.34228, 2.456132, 2.0324614,
            1.1209525, 1.2036366, 0.6879786, 1.0329905, 2.0609515, 2.8773022, 3.2777038, 3.715095,
            2.7584875, 2.8328867, 2.6222677, 3.3767183, 2.7811491, 2.3419137, 1.6336341, 1.0646617,
            0.38505948, 0.70953643, 1.2473426, 1.4980347, 1.9350276, 1.7673365, 1.9813383,
            1.6950102, 1.6300417, 2.128084, 1.6332822, 1.1044682, 0.80103076, 0.45365843,
        ],
    )
    .unwrap();
    let current_output16: Array3<f32> = conv_layer16.convolve(&test_input16);

    assert!(
        arr_allclose(&current_output16, &target_output16),
        "{:?} was not equal to {:?}",
        current_output16,
        target_output16
    );

    let test_input17 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.18731794, 0.43634078, 0.4686375, 0.7620647, 0.57885796, 0.26523942, 0.13030814,
            0.7995473, 0.951001, 0.58605653, 0.82163817, 0.21192186, 0.12197074, 0.06249312,
            0.3968833, 0.23130116, 0.670139, 0.89535373, 0.9697048, 0.7154457, 0.8203782,
            0.21395262, 0.7457981, 0.7147152, 0.05275504, 0.93545914, 0.8986874, 0.8690856,
            0.63580817, 0.15263815, 0.7466949, 0.6235891, 0.62486136, 0.7352324, 0.23342584,
            0.9827126, 0.93357897, 0.96423954, 0.02081718, 0.47192466, 0.50718915, 0.9034243,
            0.678573, 0.48106775, 0.27722874, 0.0061415, 0.2891619, 0.9937529, 0.02278532,
            0.7661429, 0.23943478, 0.7568481, 0.1846646, 0.05945846, 0.7522374, 0.723256,
            0.5690188, 0.80126184, 0.13196982, 0.2549996, 0.9684265, 0.09975351, 0.6575368,
            0.01221572, 0.5690517, 0.8633032, 0.5916843, 0.7327984, 0.38392547, 0.45234743,
            0.88714564, 0.48625886, 0.4974664, 0.280569, 0.3272779, 0.7308698, 0.16297498,
            0.8690239, 0.5834708, 0.33016786, 0.2406453, 0.599151, 0.8538999, 0.30761606,
            0.3641591, 0.11430372, 0.45364544, 0.6984523, 0.7053654, 0.4003387, 0.38632825,
            0.91106904, 0.5180514, 0.1837249, 0.38816592, 0.16589011, 0.91154295, 0.93466866,
            0.9079338, 0.6218017, 0.7199313, 0.5790186, 0.5812801, 0.5897581, 0.00632351,
            0.51240736, 0.3697457, 0.13892107, 0.9900367, 0.47229373, 0.56468743, 0.59834725,
            0.6383385, 0.03793695, 0.9450343, 0.96132326, 0.6061949, 0.63035446, 0.5111371,
            0.03746503, 0.558335, 0.30164844, 0.68653256, 0.99669343, 0.5127781, 0.25915265,
            0.34361982, 0.6647127, 0.42920145, 0.22015804, 0.22396304, 0.553291, 0.21043801,
            0.03016802, 0.13123624, 0.4177692, 0.15363416, 0.26550946, 0.9799374, 0.6468661,
            0.22700246, 0.28266105, 0.7568015, 0.49555436, 0.7577122, 0.20788053, 0.91674453,
            0.56273526, 0.45675126, 0.48490578,
        ],
    )
    .unwrap();

    let kernel17: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.82385767, 0.47637334, 0.6993045, 0.24301769, 0.5419032, 0.8251126, 0.22123201,
            0.9734199, 0.32100558, 0.7094996, 0.09741933, 0.46568522, 0.09362596, 0.85453415,
            0.30416232, 0.09494945, 0.6808416, 0.27610767, 0.8545096, 0.07512625, 0.41674572,
            0.805789, 0.34610718, 0.6439924, 0.9575676, 0.42006218, 0.72644436, 0.33186397,
            0.23232727, 0.42076096, 0.35886785, 0.29542014, 0.9644196, 0.22719596, 0.8802664,
            0.50827706, 0.6850643, 0.0414281, 0.76819396, 0.00992903, 0.9338919, 0.3779981,
            0.43870836, 0.653471, 0.21167818, 0.12654002, 0.2891591, 0.3848816, 0.61992764,
            0.33277866,
        ],
    )
    .unwrap();
    let conv_layer17 = ConvolutionLayer::new(kernel17, 1, Padding::Valid);
    let target_output17: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.15432332, 0.51404107, 0.76436925, 1.0748054, 1.2708343, 0.9967224, 0.65026,
            1.1646209, 1.7223215, 1.4683115, 0.70643044, 0.48059818, 0.45197135, 0.24423656,
            0.7661462, 1.1018393, 0.7623995, 1.0482206, 1.8635585, 1.903983, 2.1251657, 2.9182482,
            3.127935, 2.801146, 2.2709699, 2.0995715, 1.6373693, 0.7703968, 1.1982737, 1.6233716,
            2.1285005, 3.0994458, 3.509877, 2.6254356, 3.368241, 3.9889681, 4.6177616, 4.363344,
            3.3297477, 2.7464592, 2.0389087, 0.8429479, 1.6260736, 2.5274367, 2.669255, 3.6942992,
            4.5394373, 5.107254, 6.0350056, 6.528805, 5.6995554, 6.1880946, 5.5520563, 4.1270223,
            2.3161244, 0.9447036, 1.6484321, 3.2578332, 4.3641505, 5.6817703, 5.865141, 5.281061,
            6.0222282, 7.3810253, 7.3949175, 7.7328095, 6.2760825, 5.0244155, 2.8730369, 1.774318,
            1.6056535, 3.5397294, 4.090481, 4.373627, 6.49465, 6.6732893, 6.8387976, 7.331988,
            6.98986, 6.7996283, 6.102087, 4.3092537, 2.278892, 1.6703415, 1.8926111, 3.509469,
            4.2822857, 5.0538487, 6.676997, 6.279652, 6.8099737, 7.9878283, 7.4671035, 7.5411615,
            5.7930675, 3.6305544, 1.7392944, 1.1092346, 1.8875445, 3.4067712, 4.468541, 4.616284,
            6.7871127, 7.005877, 6.6168146, 6.850773, 6.503972, 6.556244, 5.021371, 4.232452,
            1.7326689, 1.5356398, 1.6311293, 3.2427304, 4.2819815, 5.018815, 5.535978, 5.787647,
            5.524854, 6.597059, 7.0934563, 6.1845956, 4.7533646, 4.0833015, 1.6669555, 1.4872972,
            1.4183967, 3.5267513, 4.5010853, 3.991726, 5.205364, 6.119104, 6.1458664, 6.427346,
            7.9689174, 6.891097, 5.307269, 4.2998395, 2.3507729, 1.2314829, 1.6858273, 3.3878715,
            4.6146626, 5.126264, 6.218016, 5.305837, 5.914359, 5.482397, 6.7933407, 7.583206,
            5.901738, 4.5412555, 3.026558, 1.4822063, 1.6175675, 3.5229464, 4.590078, 4.449969,
            6.4244184, 6.976964, 6.356709, 5.836472, 6.790235, 6.811922, 4.8684, 4.324269,
            3.2016764, 1.1853657, 1.456733, 3.065713, 4.315352, 5.816101, 6.807338, 5.7097077,
            5.9068847, 5.755979, 7.325366, 7.1395645, 5.6591263, 4.33094, 2.9317598, 1.06919,
            1.2296866, 3.0155761, 4.3741894, 4.4939337, 5.4399877, 6.929189, 6.323452, 5.8561087,
            6.7168593, 6.2810473, 5.1795063, 4.051277, 3.1100726, 1.3595172, 1.211516, 2.6389742,
            3.8063202, 5.270732, 6.6160746, 5.4931107, 5.707002, 6.357472, 6.5478244, 6.281232,
            4.719604, 3.102456, 3.0204554, 1.2758986, 0.7064475, 1.7672276, 2.9184673, 2.9246056,
            4.536926, 5.596879, 6.2011175, 4.648641, 5.6887136, 5.7644596, 4.3263283, 3.0496223,
            2.1727498, 0.7922722, 0.5157343, 1.1845905, 2.0016477, 3.0723403, 3.8293006, 3.0895329,
            3.0163524, 3.9642553, 3.488029, 3.1604118, 3.0240307, 2.6631155, 1.9033257, 0.79522246,
            0.1765319, 0.60029256, 1.0433512, 1.1496549, 1.7902056, 2.4202437, 2.4711912, 1.993982,
            2.663819, 3.2007234, 2.5412793, 1.6916788, 1.6954539, 0.9316936, 0.12301335,
            0.31423306, 0.67970663, 0.90852153, 1.2309982, 1.1284993, 1.6366632, 1.5500582,
            1.6667924, 1.0259309, 1.403088, 0.7206611, 0.47379935, 0.46433005, 0.07868518,
            0.25051266, 0.44865498, 0.8850102, 1.1860329, 1.1993619, 1.215131, 1.1544607,
            1.0735977, 1.1491125, 1.4568688, 1.2871859, 0.66765314, 0.07415961, 0.48121518,
            0.75619465, 1.1425749, 2.0068285, 1.7388043, 1.6011447, 1.6331726, 2.3529081,
            2.6194615, 3.139098, 2.8351288, 2.3747015, 1.2873743, 0.2599961, 1.0036484, 1.1064175,
            2.1052275, 2.785067, 2.8793516, 2.9855862, 3.2255185, 3.4269605, 4.9775205, 4.735477,
            3.7167058, 2.6461277, 1.3969696, 0.4517548, 1.2258086, 1.9343568, 2.6636, 3.9923034,
            4.1099625, 5.0137563, 4.9403114, 5.735874, 5.981892, 6.0050693, 5.1154594, 3.3445103,
            2.3445237, 0.74252856, 1.2974423, 2.6816845, 3.7953603, 5.650917, 5.8773265, 4.8742414,
            5.4308267, 5.9524674, 6.1443057, 7.069826, 5.585927, 3.9777074, 2.7236564, 0.93070835,
            1.2531328, 3.1855664, 3.51599, 4.605765, 5.77565, 4.8437157, 5.5045257, 6.996303,
            6.5534086, 6.941321, 5.618503, 3.1567035, 1.7341211, 0.7681496, 1.2677139, 2.9256358,
            3.814224, 5.3897314, 5.5635195, 5.5287733, 5.8349104, 7.1692395, 6.8888617, 6.214497,
            4.992711, 2.960879, 1.5156457, 0.76920366, 1.5876381, 2.6080651, 4.377856, 4.6588063,
            5.713263, 5.9179606, 5.74652, 6.162916, 5.9838963, 5.1153364, 4.8645267, 3.4158998,
            1.4484398, 0.9027241, 1.3359663, 2.977258, 3.6479378, 4.7610574, 4.913511, 5.189619,
            4.4165626, 5.6731777, 6.1194577, 5.5780063, 5.1029963, 3.2398171, 1.521068, 0.7332674,
            0.95724565, 2.817057, 4.039572, 4.1537848, 5.499271, 4.8628244, 5.083849, 5.235062,
            6.844343, 6.447301, 5.284207, 3.9789705, 2.0517867, 0.686801, 1.2765076, 2.9174466,
            3.8808556, 5.457062, 5.0869684, 5.0836797, 5.085585, 4.89642, 6.308145, 6.2568073,
            5.114294, 4.319784, 2.3120208, 0.74885845, 1.317587, 2.941628, 4.0885196, 4.744826,
            5.384156, 5.754865, 4.8516583, 5.4904103, 6.6853294, 5.9064484, 5.219076, 3.7153656,
            2.1496496, 0.7386827, 1.0746773, 2.5784063, 4.002117, 5.3261285, 5.929068, 5.498107,
            5.8191967, 5.249731, 5.74901, 6.229568, 5.108789, 3.5414762, 2.2987788, 0.7391656,
            1.0168887, 2.4615307, 4.0268598, 4.632353, 5.0454836, 5.7545724, 4.7160983, 5.2324553,
            5.8321886, 5.3879886, 4.5198674, 3.8565078, 2.5047386, 0.65964496, 0.8774544,
            2.4515395, 3.0258112, 4.5339837, 5.5522103, 4.7932434, 5.317961, 5.44579, 5.9447837,
            6.342802, 4.4757943, 3.1018724, 2.0710835, 0.5135369, 0.6065448, 1.6177795, 2.859352,
            2.8846133, 3.9662256, 4.802857, 5.1468253, 3.9801111, 4.541057, 4.6429496, 3.1743464,
            2.4064631, 1.5642794, 0.5381314, 0.36229223, 1.1105642, 1.4397471, 2.77672, 3.0210927,
            2.7076676, 2.2436242, 3.1495717, 2.870092, 2.6792185, 2.7078958, 2.0531726, 1.6081575,
            0.66090536, 0.14697376, 0.5471943, 0.9922383, 0.90338784, 1.4709457, 1.7911766,
            2.1453862, 1.589985, 2.3234444, 2.6856194, 2.083562, 1.3220404, 1.0630543, 0.51586974,
            0.09551377, 0.31875536, 0.5695034, 0.9255549, 0.8979246, 1.0136389, 0.93298936,
            1.3711216, 0.99279666, 0.8749126, 0.8555732, 0.28876522, 0.25464106, 0.1613663,
        ],
    )
    .unwrap();
    let current_output17: Array3<f32> = conv_layer17.convolve(&test_input17);

    assert!(
        arr_allclose(&current_output17, &target_output17),
        "{:?} was not equal to {:?}",
        current_output17,
        target_output17
    );

    let test_input18 = Array::from_shape_vec(
        (1, 15, 10),
        vec![
            0.5804159, 0.14874539, 0.84465176, 0.33960778, 0.03217437, 0.23459853, 0.86872333,
            0.05481404, 0.4075119, 0.13763186, 0.38947833, 0.19455469, 0.2231027, 0.710135,
            0.38075933, 0.36192992, 0.5788371, 0.45671245, 0.02821646, 0.65663046, 0.6821529,
            0.13092387, 0.04243296, 0.40237483, 0.96532, 0.08922233, 0.65666056, 0.07955468,
            0.30693734, 0.61528814, 0.8301079, 0.9080613, 0.10633651, 0.95870477, 0.24841434,
            0.49642795, 0.02807361, 0.67816275, 0.14359485, 0.96717685, 0.970054, 0.53526694,
            0.789418, 0.44380167, 0.1696324, 0.22258878, 0.54548246, 0.33204898, 0.6242531,
            0.39491078, 0.95525235, 0.17685722, 0.4390062, 0.25685027, 0.9619644, 0.7054154,
            0.25693816, 0.06693318, 0.71142703, 0.30001205, 0.24983038, 0.04385825, 0.83179814,
            0.9035203, 0.99454165, 0.4820838, 0.2207663, 0.6613494, 0.6531026, 0.941437,
            0.02962555, 0.00604056, 0.6749602, 0.09254023, 0.16296797, 0.7694261, 0.49170363,
            0.04446485, 0.8114944, 0.29030007, 0.1919063, 0.18254054, 0.13724734, 0.00911832,
            0.20514874, 0.59104544, 0.815183, 0.26495343, 0.62743604, 0.94401777, 0.54503894,
            0.6431647, 0.52856827, 0.51207054, 0.03335644, 0.28076503, 0.07791043, 0.86478263,
            0.980501, 0.54355013, 0.03467919, 0.886572, 0.36146563, 0.13580918, 0.8819829,
            0.48148784, 0.09721047, 0.7819647, 0.49357224, 0.6708243, 0.72222507, 0.366483,
            0.37231642, 0.11044633, 0.88196933, 0.7812372, 0.2546282, 0.8222847, 0.328725,
            0.78940445, 0.46583235, 0.3009351, 0.90517753, 0.7002328, 0.750793, 0.75040495,
            0.53337294, 0.51972127, 0.72387767, 0.9831707, 0.20632543, 0.16955712, 0.76152086,
            0.05444199, 0.2814817, 0.15761587, 0.95890856, 0.90069485, 0.01261302, 0.21181779,
            0.78206104, 0.92161584, 0.74544144, 0.8816592, 0.9976662, 0.2966056, 0.2162454,
            0.06208929, 0.50320554, 0.6565798,
        ],
    )
    .unwrap();

    let kernel18: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.5351854, 0.2742251, 0.42292982, 0.4649844, 0.324559, 0.28489798, 0.99974847,
            0.90991354, 0.75747913, 0.01730853, 0.1822242, 0.4171188, 0.4826352, 0.02039539,
            0.13672462, 0.13790856, 0.169661, 0.6246967, 0.6296097, 0.02376527, 0.5917116,
            0.04401799, 0.12639284, 0.25472447, 0.6356067, 0.10227188, 0.9041115, 0.4798304,
            0.36747122, 0.66492975, 0.20003575, 0.9090851, 0.54084134, 0.91581804, 0.77949584,
            0.05310873, 0.48332873, 0.5674032, 0.51063865, 0.73892075, 0.78958035, 0.15740211,
            0.70394504, 0.55201155, 0.8798877, 0.38009274, 0.33348852, 0.16602974, 0.48130554,
            0.22369854,
        ],
    )
    .unwrap();
    let conv_layer18 = ConvolutionLayer::new(kernel18, 1, Padding::Valid);
    let target_output18: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.3106301, 0.24496567, 0.6001884, 0.529542, 0.6318409, 0.40110394, 1.0842527,
            0.5249697, 0.44340435, 0.45836538, 0.6350626, 0.11371334, 0.2601101, 0.08143837,
            0.3676077, 0.8361441, 0.868237, 1.630867, 1.4554876, 0.96547675, 1.2932117, 1.9497921,
            1.0960381, 1.3623971, 0.952821, 0.5227478, 0.14853959, 0.39459413, 0.71735823,
            1.2981818, 1.3751621, 2.2569456, 2.9148307, 2.1408045, 2.3583646, 2.5577862, 2.4661543,
            2.1153083, 1.8679063, 0.82823217, 0.51660323, 0.41037235, 1.0659314, 2.385853,
            1.870566, 3.153172, 3.3953688, 3.9497721, 3.3799121, 3.9771736, 2.3715806, 3.5154912,
            2.5353382, 1.575156, 0.9404687, 0.7174251, 1.4047784, 2.7616272, 3.1164272, 3.1880255,
            4.678771, 3.5686216, 4.661413, 3.8535705, 3.1540258, 3.3959303, 4.1231623, 1.5217645,
            1.7003119, 0.60875404, 1.5719267, 3.270247, 3.1493578, 4.10592, 5.340793, 3.707805,
            3.6193225, 4.042721, 3.787161, 4.225049, 3.5721416, 1.7266525, 1.67827, 0.8912357,
            1.4133105, 3.3125281, 3.351455, 4.511407, 5.5742407, 4.1364226, 4.5935273, 3.9021308,
            4.517591, 4.29105, 3.806967, 1.949137, 1.7793319, 1.2576239, 1.2088485, 2.5102367,
            2.5081677, 4.4601126, 4.556225, 5.562976, 4.5504575, 4.124646, 3.8132339, 5.008293,
            3.2840471, 2.3737783, 1.5079219, 0.96647096, 0.9755074, 1.4258498, 1.6318791,
            3.4386034, 4.20583, 4.978943, 5.086918, 4.1655927, 4.2558804, 5.0916433, 3.9691048,
            2.372977, 2.0333555, 1.0177839, 0.7830548, 1.0544888, 1.8721135, 2.8863626, 3.562817,
            3.9839861, 4.3296986, 4.613854, 5.1136804, 5.133794, 3.9973783, 2.6098497, 2.345249,
            0.8303672, 0.34404618, 1.5012624, 2.4083216, 2.6009808, 2.6766152, 3.3543851,
            3.8243892, 3.881943, 5.447195, 6.113121, 3.630631, 3.05798, 2.015945, 1.2125077,
            0.72539616, 1.6803561, 2.9362614, 2.7302883, 3.3700588, 3.7846205, 3.8592155,
            3.2427948, 4.9698563, 6.026715, 4.612129, 2.6268885, 2.1792734, 0.9903101, 0.77774525,
            2.2973099, 3.2191372, 3.2951403, 4.0839796, 4.655723, 4.6544647, 4.074708, 5.5116067,
            5.42438, 4.848319, 2.8997734, 2.2069807, 1.4397684, 0.73663837, 2.1666138, 3.173898,
            3.273614, 4.3199425, 5.191465, 4.7843924, 5.2070208, 5.060308, 4.5053725, 4.8224173,
            2.9902635, 1.9542439, 0.78474677, 1.0192206, 2.5257795, 2.7527678, 4.3659844,
            4.9335523, 5.8013134, 4.633976, 5.357719, 6.1573186, 4.714448, 3.8100777, 2.3813205,
            2.0408804, 1.1495565, 0.7527313, 1.9182781, 2.9122214, 3.8510458, 4.337807, 4.5639524,
            3.7286592, 3.8585794, 3.945979, 4.333469, 3.2316206, 1.8325218, 1.2985655, 0.807862,
            0.57788515, 1.4422494, 2.3807325, 3.0151858, 3.2882903, 3.4162538, 3.1678326, 3.183745,
            2.3755918, 2.6007297, 2.3458188, 1.3627424, 1.093807, 0.761852, 0.43061095, 1.0795343,
            1.3389769, 1.5447407, 2.2579992, 1.8050461, 1.9283121, 1.4232107, 1.0597475, 1.2145196,
            1.2380683, 0.9477781, 0.5546186, 0.30187976, 0.25382495, 0.31265506, 0.36481854,
            0.4436464, 0.9599676, 0.8375795, 0.70648414, 0.6485461, 0.83513284, 0.4239614,
            0.2190876, 0.1411938, 0.3354446, 0.4173265, 0.05936022, 0.13131641, 0.14696366,
            0.6698775, 0.4541409, 0.77192247, 0.7266764, 0.3463276, 0.29624218, 0.87359995,
            0.42264926, 0.34990725, 0.26356372, 0.05231287, 0.5645934, 0.7599369, 1.261833,
            1.6732676, 1.4575374, 0.989051, 2.146708, 1.8232851, 1.4412844, 1.4280254, 1.3338895,
            0.37968957, 0.6867515, 0.29547912, 0.7003981, 1.0650983, 1.4486471, 2.7081628,
            2.6817334, 2.3654032, 2.6339564, 3.178473, 2.312541, 2.7008443, 1.8157617, 1.1534445,
            0.87979335, 0.47569627, 1.1018087, 1.8876395, 1.8999527, 3.5366654, 4.7730913,
            3.5823545, 4.5026016, 3.900265, 3.3369186, 3.4826612, 3.2577064, 1.5846182, 1.7564795,
            0.7480716, 1.706095, 3.235695, 3.6059163, 5.585615, 5.7870173, 5.4790416, 5.2542872,
            5.31119, 4.382814, 5.4449735, 4.115812, 2.977919, 1.8216094, 0.9216292, 1.8826907,
            3.5654476, 3.884959, 5.787822, 5.872399, 5.217699, 5.4958076, 5.9064827, 5.327177,
            5.2609935, 4.374052, 2.899529, 2.553763, 0.8493396, 2.113291, 3.5769525, 4.2741,
            5.3212037, 6.6042676, 6.4000874, 6.4038215, 5.60899, 5.3305826, 5.37465, 4.704274,
            3.4570625, 2.8707466, 1.1265975, 1.5956938, 3.2107658, 4.5003467, 6.751848, 7.04254,
            6.602549, 5.9573317, 5.403418, 5.826834, 6.386342, 4.9173765, 3.8323674, 2.6345353,
            0.88053906, 1.1623331, 2.2975087, 3.7254086, 5.2521706, 5.426202, 6.1725163, 6.2528076,
            5.1967425, 5.810252, 6.6773686, 4.932204, 3.526338, 3.0664797, 0.844671, 0.97044325,
            1.6403509, 2.547413, 4.0460787, 5.0178113, 6.38227, 6.6988773, 5.840618, 6.390621,
            6.243604, 5.621558, 4.540685, 2.7559266, 1.089848, 0.7654114, 1.6192229, 2.856202,
            3.9910405, 4.807107, 5.5711308, 5.435849, 6.12603, 6.9028573, 7.430089, 5.9225264,
            4.4851527, 3.4238074, 0.9432993, 0.45696238, 1.8883666, 3.0010133, 3.7874172,
            4.1168833, 5.148567, 4.5043173, 5.260822, 6.888823, 6.9348984, 6.0958996, 4.3133354,
            2.8239145, 1.1333053, 1.0451441, 2.562494, 3.3059042, 3.8720496, 5.2044697, 5.74007,
            5.6457686, 6.1595006, 7.0245214, 7.7502875, 6.2768445, 4.9306555, 3.5824366, 1.2211193,
            1.1639674, 2.5306969, 4.4445357, 5.5354033, 5.95898, 6.801069, 5.6411643, 5.980733,
            6.935942, 7.632838, 7.1279826, 4.391042, 2.4839363, 0.983914, 0.7785008, 2.4005396,
            3.9041946, 5.110951, 6.5647635, 6.8248305, 7.045324, 7.8535547, 7.175233, 6.0840316,
            5.411053, 4.0994678, 2.8541565, 1.0134428, 1.4574805, 3.081011, 4.37696, 5.4898076,
            6.421287, 6.5124855, 5.9038277, 6.031923, 5.912593, 6.2675095, 5.289323, 2.9041336,
            2.0816128, 0.903924, 0.7608211, 1.6796691, 3.021026, 4.6210003, 4.9750896, 5.1708,
            4.9246755, 4.7680445, 4.4226084, 4.2176137, 3.7572625, 2.7653947, 1.69575, 0.43089467,
            0.42457682, 1.3284663, 2.3082964, 2.8456273, 3.4275093, 3.4003832, 2.8927333, 3.070067,
            2.6167946, 2.6911602, 2.1780658, 1.0120329, 0.7938326, 0.36339882, 0.52001566,
            1.2224231, 1.7919431, 2.536437, 2.887314, 2.4884436, 2.0547025, 1.5040755, 1.026939,
            1.131327, 0.9866356, 0.94181406, 0.6902828, 0.14687595,
        ],
    )
    .unwrap();
    let current_output18: Array3<f32> = conv_layer18.convolve(&test_input18);

    assert!(
        arr_allclose(&current_output18, &target_output18),
        "{:?} was not equal to {:?}",
        current_output18,
        target_output18
    );

    let test_input19 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.584571, 0.32541806, 0.8543414, 0.04858193, 0.62667716, 0.5988572, 0.8094736,
            0.29621908, 0.7817938, 0.35345063, 0.4491099, 0.7036799, 0.66168624, 0.41794768,
            0.8909816, 0.6967979, 0.75464064, 0.15431848, 0.87579244, 0.53754663, 0.6797737,
            0.08134871, 0.93320847, 0.03809474, 0.7867202, 0.7863488, 0.39982173, 0.8987073,
            0.742261, 0.4782574, 0.49556065, 0.34966558, 0.6777289, 0.0573609, 0.15022676,
            0.7120909, 0.96449506, 0.10196066, 0.9710584, 0.16233306, 0.04012987, 0.7548613,
            0.41193417, 0.8657136, 0.5514695, 0.04673942, 0.16020048, 0.09309967, 0.75922126,
            0.85175455, 0.77955645, 0.44887283, 0.81323266, 0.56885445, 0.9531821, 0.23263316,
            0.74194604, 0.6701397, 0.6966494, 0.09368633, 0.5103296, 0.5674216, 0.32429224,
            0.1602559, 0.14132027, 0.5697997, 0.47647962, 0.47131556, 0.90295655, 0.8237337,
            0.66375136, 0.48833874, 0.7977554, 0.8232674, 0.505133, 0.651015, 0.8986551, 0.9230523,
            0.11411006, 0.3099813, 0.9309671, 0.2836077, 0.0033604, 0.8027366, 0.98626304,
            0.6952307, 0.25186005, 0.443149, 0.85127234, 0.29611066, 0.5536974, 0.527793,
            0.01885639, 0.42471457, 0.5644708, 0.5213245, 0.05583452, 0.06023929, 0.11995548,
            0.33672985, 0.06929818, 0.11632108, 0.7417032, 0.9838283, 0.67075133, 0.36602104,
            0.17951131, 0.85454535,
        ],
    )
    .unwrap();

    let kernel19: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.18296848, 0.04206449, 0.514743, 0.45965454, 0.08041501, 0.09462127, 0.39238515,
            0.2873256, 0.58759433, 0.10698621, 0.4967664, 0.9262702, 0.3666493, 0.65951824,
            0.39446756, 0.8330784, 0.93752426, 0.62632954, 0.61914563, 0.8137173, 0.2988856,
            0.99957263, 0.8111227, 0.7353366, 0.24240606, 0.7753997, 0.4344534, 0.5212063,
            0.2356948, 0.6292863, 0.63527644, 0.5044555, 0.06431016, 0.16471672, 0.7233747,
            0.21980144, 0.922373, 0.4160782, 0.3348592, 0.17045999, 0.5347742, 0.30438656,
            0.39931872, 0.5849598, 0.00100083, 0.6521379, 0.9648439, 0.68505603, 0.32906872,
            0.6593625, 0.65234166, 0.18019378, 0.73156756, 0.6921164,
        ],
    )
    .unwrap();
    let conv_layer19 = ConvolutionLayer::new(kernel19, 1, Padding::Valid);
    let target_output19: Array3<f32> = Array::from_shape_vec(
        (2, 8, 8),
        vec![
            0.70407254, 1.9999187, 2.8090954, 2.0951817, 2.6745868, 2.2749841, 1.9718642,
            1.0875947, 1.4156959, 3.0403507, 5.6116533, 5.2087035, 4.5204487, 3.7786398, 3.679687,
            2.1437633, 2.5771973, 4.820893, 8.81152, 6.844803, 7.0994287, 6.1943426, 4.623358,
            2.7438421, 2.6449065, 5.4858727, 8.375105, 6.483255, 7.064136, 6.220438, 4.9827065,
            1.8471677, 2.532637, 4.861475, 7.606639, 6.196546, 7.08781, 6.2923245, 4.5968127,
            1.7691728, 2.4321165, 4.192456, 7.159355, 5.7972646, 5.956524, 4.9698715, 4.5778885,
            1.9627514, 1.7554312, 3.2702742, 5.0147843, 5.017997, 4.3079715, 4.396323, 2.7874365,
            2.0134854, 0.9181196, 1.6908535, 3.2400227, 2.743555, 2.6004953, 2.1909857, 1.47038,
            1.0955417, 1.7145528, 1.5988278, 2.790585, 1.7167617, 1.8419607, 2.501156, 1.0940421,
            0.56640035, 2.1850705, 4.027195, 5.7043576, 4.647418, 4.354224, 4.3001637, 3.314236,
            1.8477693, 3.3979633, 5.418648, 8.095218, 6.8615837, 7.041254, 6.216438, 3.8801649,
            2.227915, 3.8456886, 5.194334, 7.8333015, 6.437044, 7.0977488, 6.105342, 3.6654472,
            1.5089872, 3.400687, 5.5685377, 6.934869, 5.8476467, 6.333694, 5.972004, 3.6710987,
            1.0304444, 2.882728, 4.5702176, 6.3639917, 5.5911474, 5.183036, 5.364047, 3.3994744,
            1.5999302, 1.7348924, 3.1900744, 4.3565793, 4.49248, 3.7640717, 3.6739032, 2.3034182,
            1.6121244, 0.9795114, 1.712589, 2.618839, 2.0769203, 1.5470748, 1.7926075, 0.90982103,
            0.7484522,
        ],
    )
    .unwrap();
    let current_output19: Array3<f32> = conv_layer19.convolve(&test_input19);

    assert!(
        arr_allclose(&current_output19, &target_output19),
        "{:?} was not equal to {:?}",
        current_output19,
        target_output19
    );

    let test_input20 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.8472264, 0.3531883, 0.7503538, 0.4653744, 0.9875905, 0.37862286, 0.9620671,
            0.75507283, 0.10567724, 0.8472397, 0.9672113, 0.3842727, 0.3282922, 0.3052412,
            0.04119791, 0.13365868, 0.93408334, 0.40976977, 0.28116077, 0.14792818, 0.09807894,
            0.12152596, 0.95614773, 0.7602087, 0.97631705, 0.48662946, 0.77797663, 0.34835714,
            0.5305259, 0.29444507, 0.9532204, 0.6382999, 0.937352, 0.8417525, 0.6993321, 0.9671642,
            0.3598078, 0.25727805, 0.4171089, 0.71255463, 0.22617352, 0.5094745, 0.49016726,
            0.45673513, 0.2728893, 0.55496895, 0.64802116, 0.94689554, 0.2643334, 0.5038705,
            0.7131295, 0.36297327, 0.21441843, 0.9953925, 0.97598535, 0.83921397, 0.3419448,
            0.29696485, 0.47523478, 0.78506595, 0.26839125, 0.70590997, 0.2436962, 0.8761795,
            0.6565131, 0.775589, 0.8754091, 0.5125449, 0.6224484, 0.9414587, 0.36183158,
            0.20102102, 0.8860002, 0.25435162, 0.7314984, 0.95627284, 0.7417731, 0.18060002,
            0.45882288, 0.9690947, 0.70271283, 0.91851914, 0.21997769, 0.74909705, 0.3491095,
            0.37622157, 0.14328648, 0.68727154, 0.91439056, 0.3781238, 0.36442432, 0.625257,
            0.9480976, 0.41873357, 0.25687808, 0.43647116, 0.08090039, 0.99664134, 0.6407154,
            0.19121103, 0.5287279, 0.24550702, 0.341333, 0.5005919, 0.14624618, 0.44898897,
            0.24969168, 0.799053,
        ],
    )
    .unwrap();

    let kernel20: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.29777643, 0.7735656, 0.412044, 0.82510734, 0.34135282, 0.69459295, 0.5874371,
            0.76145005, 0.8826578, 0.05473179, 0.5868046, 0.8408538, 0.77621484, 0.24274388,
            0.8441607, 0.69954115, 0.58241343, 0.44925806, 0.82243276, 0.50450677, 0.76511306,
            0.31383017, 0.6729072, 0.40802577, 0.11803117, 0.3309161, 0.8213124, 0.49220118,
            0.31319898, 0.8994237, 0.20135997, 0.57593447, 0.95296425, 0.95850575, 0.67546684,
            0.6112075, 0.959262, 0.23300357, 0.8364367, 0.40562743, 0.8085596, 0.72987187,
            0.9031762, 0.32411024, 0.96117723, 0.60974807, 0.8095447, 0.38108206, 0.25492424,
            0.7018395, 0.07076582, 0.8240507, 0.3949699, 0.3876701,
        ],
    )
    .unwrap();
    let conv_layer20 = ConvolutionLayer::new(kernel20, 1, Padding::Valid);
    let target_output20: Array3<f32> = Array::from_shape_vec(
        (2, 8, 8),
        vec![
            1.0006526, 1.5848341, 2.2727878, 2.5539758, 2.9726152, 2.3970885, 1.5904613, 0.6001319,
            2.0041747, 3.8903809, 5.564505, 5.0482144, 5.5609875, 5.8067, 3.8382425, 1.621336,
            2.9922085, 4.9208612, 7.5591717, 8.345438, 8.87306, 8.6821995, 6.437136, 2.785049,
            2.181675, 5.5467677, 7.772353, 7.162171, 7.1294518, 9.40177, 6.770134, 3.4439788,
            1.9706573, 4.9738655, 7.3502827, 6.6606984, 6.90932, 7.916594, 6.53994, 3.0444634,
            2.7813735, 6.3621793, 8.835976, 7.898848, 7.9868917, 8.502326, 5.9507766, 2.9424253,
            2.1131387, 4.308994, 6.5969625, 6.5491114, 6.3791223, 6.059585, 3.8993802, 1.927916,
            1.3900182, 2.6173513, 3.6167893, 3.9230003, 3.573177, 3.6066828, 2.1524153, 1.6002575,
            1.3023927, 1.1181355, 3.3229394, 2.7829275, 3.4805973, 3.142542, 2.09108, 0.971881,
            2.2899394, 3.6873689, 5.6227283, 6.5465336, 6.1972857, 6.7168922, 4.136177, 2.3330398,
            2.815597, 5.287658, 8.186419, 8.190601, 8.559161, 9.549563, 6.74209, 3.256833,
            3.1940007, 5.707392, 7.4725122, 7.519001, 8.1425905, 9.313495, 6.9176025, 3.9815493,
            2.0472271, 5.1751914, 7.584792, 7.6084976, 7.5300856, 8.2162485, 6.5291605, 3.479158,
            3.1589684, 5.7842603, 9.529815, 8.137761, 8.212248, 9.113395, 5.9009304, 3.7027218,
            1.9122901, 4.7609134, 5.8360853, 6.233199, 6.130184, 6.0767355, 3.9929457, 2.0546634,
            1.7196493, 2.7650561, 3.9936044, 4.150429, 3.7757704, 3.8841891, 1.9969575, 1.0941237,
        ],
    )
    .unwrap();
    let current_output20: Array3<f32> = conv_layer20.convolve(&test_input20);

    assert!(
        arr_allclose(&current_output20, &target_output20),
        "{:?} was not equal to {:?}",
        current_output20,
        target_output20
    );

    let test_input21 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.88056743, 0.4120727, 0.42224765, 0.40275672, 0.31289253, 0.85605, 0.50402254,
            0.594723, 0.28942943, 0.1757779, 0.7137983, 0.9091735, 0.3410004, 0.7846004, 0.9584728,
            0.59341496, 0.85196227, 0.11542477, 0.070237, 0.8144841, 0.5670808, 0.84016347,
            0.10123584, 0.005051, 0.55897933, 0.5162179, 0.76241785, 0.01278013, 0.5541978,
            0.27330735, 0.23429064, 0.4523076, 0.06818328, 0.24505253, 0.5665328, 0.1555473,
            0.9483631, 0.27696642, 0.96611446, 0.19091433, 0.2396215, 0.27247688, 0.5852498,
            0.38096267, 0.4529504, 0.88774997, 0.82603574, 0.80568945, 0.32917508, 0.7272445,
            0.7469263, 0.42636782, 0.43363968, 0.13354255, 0.35689688, 0.99201185, 0.68718493,
            0.55920875, 0.2636, 0.5576874, 0.35369453, 0.5906877, 0.07249359, 0.4782056,
            0.04795831, 0.8815459, 0.18781203, 0.29750833, 0.6987018, 0.8169458, 0.8011893,
            0.18986696, 0.8974017, 0.69025475, 0.04551166, 0.4437527, 0.6389319, 0.19161025,
            0.97299683, 0.29591832, 0.19683413, 0.5229589, 0.8461087, 0.79286724, 0.17503856,
            0.48829708, 0.66009414, 0.9874962, 0.02657376, 0.5618466, 0.27853093, 0.6685596,
            0.73198694, 0.27009216, 0.9657689, 0.9025137, 0.9429427, 0.05157892, 0.45541912,
            0.76319754, 0.5815242, 0.29006037, 0.94584274, 0.17197818, 0.6090657, 0.03939039,
            0.75747067, 0.13435428,
        ],
    )
    .unwrap();

    let kernel21: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.38600448, 0.98673576, 0.14280626, 0.14173116, 0.34663445, 0.5532242, 0.15408872,
            0.33855647, 0.1119092, 0.19166702, 0.43612492, 0.48469457, 0.8877225, 0.03917093,
            0.9853486, 0.45979473, 0.9119313, 0.21574858, 0.46490034, 0.03541405, 0.1767692,
            0.12655611, 0.3931895, 0.24325794, 0.18853948, 0.31810585, 0.62332, 0.18260308,
            0.783278, 0.42322084, 0.4754852, 0.30789322, 0.63504064, 0.826404, 0.16017109,
            0.8729103, 0.82895696, 0.24658875, 0.46112144, 0.7843472, 0.68702215, 0.15406865,
            0.8497178, 0.00698695, 0.52609015, 0.03558233, 0.74658084, 0.9255381, 0.8912908,
            0.44194368, 0.11709648, 0.36331993, 0.293519, 0.06899712,
        ],
    )
    .unwrap();
    let conv_layer21 = ConvolutionLayer::new(kernel21, 1, Padding::Valid);
    let target_output21: Array3<f32> = Array::from_shape_vec(
        (2, 8, 8),
        vec![
            0.93887526, 1.6133058, 1.5018826, 1.6425894, 1.2643256, 1.043175, 0.66631603,
            0.2933172, 2.0733473, 2.4013457, 3.9933085, 2.5819044, 3.7922578, 4.1403766, 2.504196,
            1.2592857, 1.8071821, 4.330652, 5.7848196, 5.5783925, 4.673727, 5.4542375, 3.7379003,
            1.7538947, 1.2388847, 3.9000409, 6.118885, 6.094779, 6.590522, 5.367459, 4.1626124,
            1.5367268, 1.1959432, 3.3632739, 5.5609074, 6.4709845, 4.977982, 4.414928, 2.5730097,
            1.691448, 1.5376225, 3.15198, 5.320933, 4.9691925, 5.379072, 4.6016107, 2.907794,
            1.8087485, 0.7645314, 2.2988863, 3.0124018, 2.5589974, 3.175634, 3.200348, 2.8028028,
            0.67012435, 0.2916855, 0.78395283, 1.6975722, 1.5342746, 2.0912786, 1.6533529,
            1.0142227, 0.14211641, 0.9788782, 2.2917883, 3.7675698, 2.073365, 2.2016735, 1.9514904,
            1.4858589, 1.0085874, 2.205372, 4.22651, 4.1842327, 4.1558914, 4.106975, 5.3133373,
            4.144885, 1.9192772, 3.247459, 4.8591757, 6.6338587, 6.6342688, 8.127625, 6.442306,
            4.346212, 1.700788, 2.1812675, 4.348805, 7.21558, 8.512192, 7.007581, 7.207599, 4.336,
            2.2624834, 1.2379017, 5.148137, 7.070119, 7.7638392, 6.436644, 6.0285597, 4.0083466,
            1.5596993, 1.9132513, 4.4105296, 6.074258, 6.5153303, 6.8810267, 6.371298, 3.3330693,
            0.83383906, 2.2083724, 2.2336915, 3.3580856, 3.5638728, 3.756652, 2.918554, 1.4488478,
            0.7880351, 1.0611744, 0.77626073, 1.6365461, 1.3023527, 2.0655003, 1.4960531,
            1.1120572, 0.24493603,
        ],
    )
    .unwrap();
    let current_output21: Array3<f32> = conv_layer21.convolve(&test_input21);

    assert!(
        arr_allclose(&current_output21, &target_output21),
        "{:?} was not equal to {:?}",
        current_output21,
        target_output21
    );

    let test_input22 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.6168495, 0.28579375, 0.5181164, 0.9057766, 0.53910846, 0.6104503, 0.9237121,
            0.03638967, 0.7087876, 0.46475387, 0.09687401, 0.10987341, 0.93982804, 0.4556152,
            0.33559954, 0.5641086, 0.07132971, 0.97521317, 0.4099887, 0.10122171, 0.4641384,
            0.9489551, 0.02956773, 0.74999446, 0.73433584, 0.00624699, 0.81573004, 0.6482149,
            0.53025377, 0.12299971, 0.5933358, 0.8846656, 0.9335431, 0.0064692, 0.61633664,
            0.11189567, 0.3181057, 0.08647749, 0.47873196, 0.00922728, 0.47707382, 0.99977493,
            0.24345838, 0.30595168, 0.79154646, 0.6585233, 0.5544905, 0.79093266, 0.14053226,
            0.66896224, 0.3038908, 0.07862057, 0.5696929, 0.86021405, 0.3409378, 0.23691536,
            0.8326181, 0.07998312, 0.17711017, 0.8589006, 0.4188041, 0.6286288, 0.70090973,
            0.5717835, 0.0984337, 0.06295575, 0.27819812, 0.33805057, 0.0900248, 0.9791513,
            0.9759571, 0.662313, 0.10088859, 0.8464018, 0.83375126, 0.36432305, 0.23459193,
            0.2879088, 0.00414109, 0.16491044, 0.6065011, 0.93920064, 0.56360936, 0.6827511,
            0.49555323, 0.46089745, 0.7388162, 0.46463865, 0.89171886, 0.61829454, 0.49427044,
            0.70967704, 0.38735756, 0.5111061, 0.11328588, 0.07875007, 0.48477763, 0.21567076,
            0.8734742, 0.16271727, 0.82271063, 0.7953895, 0.70772564, 0.66772455, 0.08626243,
            0.52760124, 0.5431996, 0.47249612,
        ],
    )
    .unwrap();

    let kernel22: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.88115114, 0.8661392, 0.92109436, 0.24201743, 0.43933925, 0.59758914, 0.6773803,
            0.03470363, 0.8584512, 0.82864845, 0.43116546, 0.55736136, 0.29478395, 0.5768042,
            0.24298015, 0.650084, 0.95459735, 0.47754803, 0.24363868, 0.5594282, 0.3510245,
            0.8226108, 0.5919785, 0.0383365, 0.24124639, 0.93577164, 0.818001, 0.7710321,
            0.99100995, 0.21088907, 0.26163143, 0.966571, 0.623576, 0.30464408, 0.4856008,
            0.8888871, 0.02805966, 0.694041, 0.3628767, 0.27266598, 0.1288117, 0.19825369,
            0.05508777, 0.7472844, 0.9304254, 0.375879, 0.49845085, 0.35687554, 0.8465622,
            0.06790887, 0.61019063, 0.04731771, 0.8660679, 0.46153438, 0.5524299, 0.57292384,
            0.59957683, 0.7447061, 0.00721753, 0.41349155, 0.5989078, 0.80824125, 0.0967541,
            0.69780505, 0.4846638, 0.6034601, 0.3165235, 0.30187264, 0.08178072, 0.09035328,
            0.7931324, 0.02590412, 0.9651153, 0.9883213, 0.14329627, 0.4513792, 0.6331485,
            0.3895538, 0.5230941, 0.8005311, 0.3575447, 0.85136724, 0.23551573, 0.18392335,
            0.8595507, 0.96428144, 0.57193863, 0.8266735, 0.11757887, 0.87975013, 0.23165825,
            0.34878272, 0.58673537, 0.8810783, 0.76902574, 0.20369534, 0.3321073, 0.31502706,
            0.56150496, 0.6381789, 0.21412608, 0.83272296, 0.854895, 0.05274187, 0.17473145,
            0.41482434, 0.03105091, 0.09116793, 0.8556412, 0.77320266, 0.67385226, 0.9242484,
            0.00767931, 0.08762363, 0.4469587, 0.01380609, 0.04700416, 0.38990366, 0.3569205,
            0.2852155, 0.9617992, 0.9764468, 0.15851368, 0.52739674, 0.9543389, 0.21063799,
            0.58803684, 0.07690383, 0.85842836, 0.40513718, 0.5686212, 0.388052, 0.13018292,
            0.1809689, 0.9890798, 0.18009396, 0.43400672, 0.24422543, 0.36607084, 0.10110632,
            0.45430455, 0.89200944, 0.6169217, 0.451316, 0.07585676, 0.17212614, 0.5381227,
            0.90410787, 0.47732064, 0.6581925,
        ],
    )
    .unwrap();
    let conv_layer22 = ConvolutionLayer::new(kernel22, 1, Padding::Valid);
    let target_output22: Array3<f32> = Array::from_shape_vec(
        (2, 10, 10),
        vec![
            0.9027732, 1.3588676, 2.7007532, 3.151487, 4.089128, 4.553219, 3.4212954, 2.488183,
            1.253993, 0.8184272, 1.8435403, 2.1811912, 4.6475224, 7.250295, 7.802078, 8.595193,
            7.241226, 4.833021, 2.8341892, 1.885335, 3.1622496, 4.701971, 7.478526, 9.903802,
            10.987024, 12.702837, 10.54371, 6.707661, 4.0621014, 2.6543934, 3.4875517, 5.1664157,
            9.81249, 12.084176, 13.986283, 16.241386, 12.749407, 8.195272, 5.1525483, 4.0561414,
            4.2559233, 7.168072, 11.711771, 15.857738, 16.031855, 18.757368, 14.826457, 9.951701,
            7.473896, 4.830804, 4.3400292, 8.440403, 11.864994, 15.574436, 17.670923, 18.01964,
            14.262434, 10.706363, 6.2628775, 3.1973872, 3.5756383, 6.1884093, 10.283361, 11.468642,
            14.789721, 14.483019, 11.127065, 6.5193853, 5.52008, 2.513317, 2.715533, 5.0565777,
            6.1046395, 7.765023, 11.150183, 10.163509, 7.754274, 4.4552336, 3.7900002, 1.8532732,
            1.4246838, 2.723291, 4.075177, 6.5485682, 7.072416, 6.7297225, 4.658315, 4.0227275,
            2.3992805, 1.1798816, 0.71031344, 1.7482291, 2.2131472, 2.639231, 2.9020782, 3.1292458,
            2.4948573, 1.8823688, 1.0143256, 0.13967828, 0.36779872, 0.73567945, 1.9586769,
            2.0249076, 2.803007, 2.812061, 2.7652473, 1.8083357, 0.8950596, 1.1354853, 1.1847249,
            1.8751596, 4.3884087, 4.471188, 7.4097753, 7.009283, 6.12078, 4.2614484, 2.2844467,
            2.2345107, 1.8687099, 2.7302256, 5.88662, 7.078963, 8.586849, 11.4198675, 8.593806,
            7.132811, 4.179207, 2.9197083, 2.3599937, 4.7415614, 7.3444014, 9.469954, 11.026857,
            12.843792, 11.257439, 8.405112, 5.5221186, 4.2737036, 2.9716043, 5.2268753, 10.132104,
            13.507422, 16.04201, 17.200686, 15.119455, 10.279776, 6.592231, 4.693139, 3.7725165,
            5.499183, 10.618247, 13.672541, 16.990927, 17.73011, 14.162885, 9.913212, 7.3763494,
            4.285792, 3.3393025, 6.0595694, 8.5963955, 12.260048, 12.309975, 13.931786, 12.324393,
            7.9465847, 6.8407965, 4.46793, 1.933784, 3.259745, 5.7400203, 8.599763, 10.713252,
            9.093439, 8.221558, 6.0043344, 3.7776928, 2.3994923, 1.7900133, 3.1657505, 4.2094874,
            5.912834, 8.385341, 7.9717884, 6.2088537, 3.934041, 2.8150194, 1.2997602, 0.8103197,
            2.4628932, 3.198124, 2.9335866, 4.9760923, 4.7918763, 3.1716995, 2.521615, 1.9930513,
            1.0144739,
        ],
    )
    .unwrap();
    let current_output22: Array3<f32> = conv_layer22.convolve(&test_input22);

    assert!(
        arr_allclose(&current_output22, &target_output22),
        "{:?} was not equal to {:?}",
        current_output22,
        target_output22
    );

    let test_input23 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.1983508, 0.7742759, 0.28797778, 0.45872805, 0.2304093, 0.8921432, 0.5368815,
            0.6024187, 0.42484194, 0.8630159, 0.6879206, 0.7541534, 0.05390601, 0.82358676,
            0.88391197, 0.05703124, 0.78280455, 0.53194064, 0.8693754, 0.86002535, 0.9464669,
            0.7172452, 0.29969904, 0.7566894, 0.10910437, 0.4310923, 0.7074267, 0.6056931,
            0.43765876, 0.417855, 0.5549018, 0.655004, 0.3268639, 0.47542888, 0.81072354,
            0.48937833, 0.44280005, 0.90144795, 0.37103122, 0.76575243, 0.5233105, 0.22412036,
            0.19189753, 0.37045264, 0.98901117, 0.8116843, 0.7998495, 0.80124223, 0.82877624,
            0.29054287, 0.8143526, 0.6139959, 0.24171719, 0.6437402, 0.60042983, 0.69702214,
            0.9782188, 0.9105007, 0.43725935, 0.5551452, 0.51675713, 0.43717158, 0.04574655,
            0.19430637, 0.47719213, 0.8179389, 0.6715673, 0.09111205, 0.77552783, 0.31814525,
            0.00102462, 0.122188, 0.15768081, 0.8614371, 0.0877872, 0.6829663, 0.6974145,
            0.0491925, 0.45287937, 0.23233427, 0.36564678, 0.39872772, 0.594579, 0.59222096,
            0.29753333, 0.26042402, 0.579024, 0.10031959, 0.4721017, 0.09277638, 0.8875286,
            0.12023476, 0.38164645, 0.41190186, 0.7022435, 0.88240683, 0.33856305, 0.2241604,
            0.62335473, 0.9464095, 0.45312902, 0.03511541, 0.61512816, 0.49298653, 0.77209026,
            0.52555007, 0.5109687, 0.22519495,
        ],
    )
    .unwrap();

    let kernel23: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.40227205, 0.17318112, 0.03161661, 0.3734779, 0.8839653, 0.12310848, 0.41477197,
            0.10716959, 0.46563995, 0.33996934, 0.9157668, 0.19057809, 0.4525564, 0.26794037,
            0.20307006, 0.24235713, 0.9363978, 0.90260816, 0.79887706, 0.93520576, 0.05488254,
            0.44510987, 0.02638636, 0.82638884, 0.17851174, 0.84508294, 0.21472165, 0.8738241,
            0.4210294, 0.59479696, 0.00158825, 0.18007399, 0.9334109, 0.41320488, 0.63317853,
            0.91879827, 0.3653109, 0.99052715, 0.12281225, 0.59174454, 0.45707443, 0.42698747,
            0.01515595, 0.02814319, 0.59322685, 0.70532215, 0.68366706, 0.50119185, 0.2631662,
            0.5603199, 0.43985215, 0.77769446, 0.29876906, 0.08686391, 0.68739474, 0.75761557,
            0.9827863, 0.8606402, 0.94399136, 0.7065151, 0.8513396, 0.93977064, 0.04395659,
            0.32823455, 0.3759951, 0.7712829, 0.1281546, 0.88177705, 0.39099365, 0.5885291,
            0.34688666, 0.60059834, 0.31323937, 0.7053773, 0.14435844, 0.05504967, 0.356957,
            0.33316013, 0.3808534, 0.903793, 0.88188004, 0.58704966, 0.42792627, 0.28572702,
            0.82775307, 0.28533912, 0.26191843, 0.71055365, 0.14740174, 0.673529, 0.6903243,
            0.30951205, 0.43487665, 0.7551387, 0.23145947, 0.9355463, 0.09438256, 0.05636088,
            0.6478343, 0.10347797, 0.02137936, 0.22671694, 0.562216, 0.36317897, 0.9826564,
            0.12094665, 0.2950183, 0.48052302, 0.6142756, 0.22001709, 0.30878848, 0.3693467,
            0.9117777, 0.70965314, 0.42676452, 0.09853197, 0.1389484, 0.56912595, 0.5038018,
            0.15739693, 0.38260135, 0.36583102, 0.31307653, 0.32534242, 0.37213182, 0.26612982,
            0.18250434, 0.3353904, 0.19031978, 0.56865096, 0.13906257, 0.46143153, 0.6958078,
            0.8158052, 0.37304193, 0.12668495, 0.1444909, 0.93380785, 0.19252698, 0.6453951,
            0.43307763, 0.7072368, 0.05581366, 0.15413615, 0.8825847, 0.4838589, 0.60821444,
            0.3326902, 0.6635084, 0.14642915,
        ],
    )
    .unwrap();
    let conv_layer23 = ConvolutionLayer::new(kernel23, 1, Padding::Valid);
    let target_output23: Array3<f32> = Array::from_shape_vec(
        (2, 10, 10),
        vec![
            0.52335, 1.5967561, 1.9401276, 3.877374, 3.738155, 4.1168046, 2.7289057, 2.699923,
            0.98027, 0.22410437, 0.82939863, 2.381659, 4.347469, 5.9253244, 7.7222843, 8.907657,
            6.7771144, 5.6446657, 3.6305249, 1.3918277, 1.7796351, 3.6314704, 6.9356217, 8.404036,
            12.189834, 10.902322, 9.234464, 7.594904, 4.5451136, 1.9058491, 2.2603753, 4.8461447,
            9.724551, 12.031287, 15.537176, 16.616762, 12.7482605, 10.108019, 6.646921, 2.9096975,
            3.2817705, 7.468365, 10.444363, 14.936928, 20.433004, 19.979715, 15.374094, 11.99435,
            7.2804027, 3.7678368, 3.5667405, 6.6338124, 11.622592, 16.865965, 19.632956, 19.96169,
            15.732026, 10.594098, 7.7341766, 2.875554, 2.6745496, 6.669052, 9.120612, 11.439708,
            15.494792, 14.837364, 12.174792, 8.387464, 5.121422, 2.7314804, 2.811598, 4.972063,
            6.9410505, 10.132486, 11.411139, 11.315411, 9.114565, 6.319366, 3.9577389, 1.3035464,
            1.1799622, 2.8410454, 3.8747678, 5.6596603, 6.957809, 6.6056385, 5.1960907, 3.8096063,
            2.8207004, 1.1333886, 1.312796, 2.0205393, 2.650988, 3.7700667, 4.139373, 3.2390468,
            2.3072138, 1.6548758, 0.88174886, 0.18833295, 0.06234949, 0.54155445, 1.1720921,
            1.39169, 2.4371405, 2.643791, 2.2781496, 1.8952544, 1.4124835, 0.9441922, 0.35415292,
            1.6203747, 2.579233, 3.2931564, 5.5630813, 5.5374985, 5.078792, 4.3593397, 3.0727618,
            1.4947656, 0.78558767, 2.693253, 5.0063, 7.421564, 8.273689, 9.828875, 7.9305763,
            5.2262588, 3.9339578, 1.6501518, 1.263349, 4.245302, 7.7480874, 10.022568, 13.7135935,
            14.409363, 11.572395, 8.450208, 5.3963013, 2.8633091, 2.363703, 6.480769, 9.31022,
            14.098277, 16.543344, 16.002531, 14.582978, 10.445022, 6.396765, 3.1195555, 2.6608624,
            6.4209385, 11.233876, 13.763187, 17.389008, 18.136225, 14.29991, 10.332986, 6.213042,
            2.5621178, 2.6534216, 5.608081, 9.07905, 11.449163, 14.5053215, 13.89162, 10.7594385,
            7.113984, 4.0252557, 2.083658, 2.942854, 5.126792, 8.837614, 10.213555, 10.63312,
            10.4194145, 8.253075, 6.2728567, 3.3212821, 1.1149645, 1.371233, 2.72626, 3.963152,
            5.836295, 7.053423, 6.757982, 4.7112427, 3.1569653, 1.8760653, 0.85896957, 1.5112295,
            1.7984037, 3.3000212, 3.3456466, 3.7317607, 3.400544, 2.451673, 1.410424, 0.4903509,
            0.12908502,
        ],
    )
    .unwrap();
    let current_output23: Array3<f32> = conv_layer23.convolve(&test_input23);

    assert!(
        arr_allclose(&current_output23, &target_output23),
        "{:?} was not equal to {:?}",
        current_output23,
        target_output23
    );

    let test_input24 = Array::from_shape_vec(
        (3, 6, 6),
        vec![
            0.21561022, 0.32565016, 0.48349917, 0.08149401, 0.88704216, 0.7946653, 0.72924787,
            0.06738389, 0.09597177, 0.8065446, 0.88961375, 0.8407575, 0.40697718, 0.60480595,
            0.04155758, 0.24183853, 0.366542, 0.47117367, 0.3444951, 0.8971257, 0.2710384,
            0.4244338, 0.24516417, 0.36674044, 0.7258184, 0.52210695, 0.6150934, 0.33898464,
            0.45874897, 0.9551208, 0.19136074, 0.30594054, 0.8241661, 0.07202522, 0.19128811,
            0.8797602, 0.3830422, 0.82000726, 0.41356984, 0.85722613, 0.09240989, 0.54765993,
            0.21080038, 0.9163098, 0.4226413, 0.13412596, 0.8097079, 0.5467569, 0.7049378,
            0.01006908, 0.00396548, 0.23543635, 0.58264214, 0.7827338, 0.83183694, 0.27640048,
            0.27672654, 0.8525934, 0.5116681, 0.40403318, 0.01080465, 0.6023438, 0.23236814,
            0.5701668, 0.78067493, 0.5881804, 0.8406687, 0.8511978, 0.44152674, 0.9640743,
            0.25130445, 0.7229711, 0.90021485, 0.72865623, 0.03333719, 0.04374503, 0.8528545,
            0.74729836, 0.12833528, 0.2233036, 0.73019654, 0.9296237, 0.92300737, 0.90232325,
            0.17525117, 0.09306768, 0.29594678, 0.10814751, 0.1795904, 0.22905576, 0.12226541,
            0.37137195, 0.33046693, 0.79606473, 0.32966596, 0.31310067, 0.05479572, 0.20002392,
            0.28950065, 0.51984864, 0.8138102, 0.47504795, 0.04588939, 0.8773192, 0.38872027,
            0.5195077, 0.39854062, 0.62001854,
        ],
    )
    .unwrap();

    let kernel24: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.69522935, 0.498845, 0.6831582, 0.7281102, 0.65795493, 0.28930026, 0.6158064,
            0.14075516, 0.7291574, 0.71428937, 0.8539295, 0.36077332, 0.82414293, 0.34656417,
            0.03292517, 0.32723787, 0.9600367, 0.37661108, 0.74494994, 0.29801482, 0.90784407,
            0.733241, 0.2752744, 0.14618637, 0.11439011, 0.91174835, 0.29081446, 0.6664801,
            0.2626654, 0.83047026, 0.45670658, 0.6794256, 0.85626125, 0.75221896, 0.5576436,
            0.74257755, 0.3897357, 0.9190075, 0.99010134, 0.5884901, 0.8498817, 0.6615687,
            0.67640066, 0.99503726, 0.74622726, 0.6841086, 0.04588867, 0.0267396, 0.09028576,
            0.2553315, 0.65982074, 0.96019644, 0.3131931, 0.09959164, 0.17178877, 0.47519284,
            0.47645757, 0.52595836, 0.98712695, 0.4350043, 0.9444382, 0.37567437, 0.22366077,
            0.6754568, 0.27200705, 0.780418, 0.06723779, 0.56091106, 0.16594417, 0.5126913,
            0.38890767, 0.02181397, 0.94759494, 0.8893203, 0.5261063, 0.10557687, 0.79299563,
            0.29468352, 0.2171505, 0.10943547, 0.96985734, 0.3335043, 0.98014617, 0.14437845,
            0.43690363, 0.24404159, 0.98458624, 0.8532558, 0.9541668, 0.9026258, 0.7744034,
            0.2025786, 0.04301855, 0.31254604, 0.22947553, 0.05255083, 0.7670707, 0.6303967,
            0.91551375, 0.96802235, 0.23464549, 0.47393435, 0.85157114, 0.30699563, 0.9565582,
            0.13737752, 0.756347, 0.27240536, 0.29435056, 0.04750107, 0.7431825, 0.5517178,
            0.701437, 0.84239453, 0.826362, 0.47136632, 0.02713268, 0.12136482, 0.43238705,
            0.6898572, 0.16184397, 0.45551613, 0.12444576, 0.49814487, 0.3207074, 0.5982146,
            0.72834367, 0.8392736, 0.74566257, 0.9222505, 0.33859882, 0.11874896, 0.44448686,
            0.9106491, 0.6443613, 0.0306461, 0.29212236, 0.40568367, 0.3434271, 0.0902301,
            0.2987932, 0.80878776, 0.6737573, 0.5073427, 0.89290726, 0.90099066, 0.6842329,
            0.72837055, 0.7052375, 0.16912474,
        ],
    )
    .unwrap();
    let conv_layer24 = ConvolutionLayer::new(kernel24, 1, Padding::Valid);
    let target_output24: Array3<f32> = Array::from_shape_vec(
        (2, 10, 10),
        vec![
            1.093117, 2.119914, 2.8689284, 3.885506, 4.6310287, 4.6721582, 3.990871, 3.502872,
            2.5088918, 1.3867211, 1.8672031, 3.3203702, 4.4419994, 5.489302, 9.008055, 9.846674,
            7.8344975, 6.7122555, 5.0132484, 2.1123524, 2.2741423, 4.0109916, 6.0025806, 8.541741,
            11.4511795, 11.107423, 8.162101, 7.590013, 5.8822083, 2.655091, 2.681036, 5.8018446,
            8.875945, 12.006149, 14.213873, 16.202099, 13.331956, 10.709515, 7.1847334, 3.048811,
            3.0982575, 7.1158843, 9.176849, 14.412187, 17.897955, 19.546959, 16.601645, 12.981991,
            8.369599, 3.7148147, 3.3515272, 7.865552, 9.766781, 14.896367, 18.110514, 19.322777,
            16.197767, 12.380119, 7.9443755, 3.734293, 2.2690227, 5.8571687, 8.084667, 10.481202,
            12.518715, 13.855123, 11.531173, 8.160861, 5.696937, 2.163378, 2.1806438, 4.618458,
            6.976693, 8.975452, 10.640517, 12.0492325, 9.956989, 7.2267466, 4.7454944, 1.7740717,
            0.8606585, 2.777329, 4.9022365, 6.361501, 6.8201895, 8.591646, 6.9746366, 4.5589414,
            3.5297995, 1.254641, 0.8319404, 1.6843456, 2.5640576, 3.3987896, 3.0476115, 3.935214,
            2.982619, 1.5996561, 1.4152825, 0.6114288, 0.65116423, 1.2292292, 1.2081145, 2.1006637,
            3.0043461, 3.8651938, 2.0128977, 1.7915924, 1.9268124, 0.8037046, 1.2114078, 2.7814856,
            3.2571564, 5.2266564, 7.446745, 6.938158, 6.3388286, 5.5450025, 4.2741504, 2.3160152,
            2.230135, 3.8626218, 6.0594306, 7.060295, 8.697036, 10.550137, 8.793552, 7.3009944,
            5.4714, 2.982613, 2.4269528, 5.7596526, 7.627054, 8.647621, 12.988567, 14.254536,
            11.8447, 9.557403, 6.30036, 4.024104, 3.2747202, 6.7764297, 8.740754, 12.970836,
            15.442421, 18.096493, 14.8369465, 12.763176, 8.817394, 4.563985, 2.6132872, 5.7362375,
            10.242505, 13.065736, 15.689489, 18.418087, 14.053449, 12.727771, 8.216388, 4.681657,
            2.154493, 5.0118785, 8.279926, 10.482437, 13.034823, 14.699847, 10.94034, 10.115033,
            5.229514, 3.9534202, 1.9587414, 3.5674748, 6.467352, 9.899429, 10.469248, 11.972646,
            9.639917, 8.000788, 4.2617683, 3.1361613, 0.47415462, 2.4695222, 4.2157493, 5.797021,
            8.270344, 8.351224, 6.9252586, 6.305039, 3.3647037, 2.796392, 0.8674117, 1.8099173,
            2.4820108, 3.7642589, 4.0881243, 4.178857, 3.3851469, 2.4873638, 1.5874188, 1.1883501,
        ],
    )
    .unwrap();
    let current_output24: Array3<f32> = conv_layer24.convolve(&test_input24);

    assert!(
        arr_allclose(&current_output24, &target_output24),
        "{:?} was not equal to {:?}",
        current_output24,
        target_output24
    );

    let test_input25 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.4287567, 0.6583277, 0.04040552, 0.38902923, 0.12675387, 0.8050715, 0.49352488,
            0.9127804, 0.3541732, 0.8519433, 0.16551489, 0.3333164, 0.03959658, 0.25632858,
            0.18771167, 0.03075815, 0.43225557, 0.69072247, 0.5568704, 0.38795924, 0.52294713,
            0.0789768, 0.42246845, 0.95906556, 0.15887408, 0.03306201, 0.26331437, 0.2304746,
            0.6584057, 0.4095963, 0.37286273, 0.16103324, 0.63719285, 0.23002648, 0.10749894,
            0.01513924, 0.5023638, 0.5533162, 0.52681637, 0.75766635, 0.79183036, 0.26611277,
            0.60754436, 0.47772342, 0.71567196, 0.5942683, 0.01671847, 0.3565012, 0.7159743,
            0.30294093, 0.47319987, 0.2910204, 0.16295868, 0.25027466, 0.6572299, 0.73934627,
            0.42323235, 0.5813263, 0.5468596, 0.15655027, 0.7337421, 0.70144874, 0.74292475,
            0.07253607, 0.7101941, 0.23257384, 0.7575536, 0.43969592, 0.25122383, 0.21266471,
            0.12251099, 0.06464646, 0.325024, 0.556819, 0.17499126, 0.28275678, 0.9586377,
            0.7768914, 0.87225235, 0.55172807, 0.23772797, 0.15089212, 0.0740529, 0.7328364,
            0.9986837, 0.59491575, 0.45983207, 0.3990066, 0.80979043, 0.98098063, 0.9923433,
            0.41920665, 0.47023433, 0.4967516, 0.5810784, 0.23334436, 0.98428434, 0.8124901,
            0.44344074, 0.89210486, 0.7015651, 0.23608343, 0.12298316, 0.21013618, 0.09544598,
            0.70305294, 0.01947077, 0.654422, 0.58761567, 0.37502283, 0.90727985, 0.26554954,
            0.2605517, 0.23161498, 0.854641, 0.9064802, 0.23253885, 0.46258068, 0.13830437,
            0.9976838, 0.20947075, 0.34793916, 0.42308012, 0.80669975, 0.9909294, 0.5385484,
            0.6860896, 0.41847235, 0.01959337, 0.18082424, 0.77819145, 0.45446303, 0.21870646,
            0.16891658, 0.82196736, 0.5676109, 0.05080688, 0.2716982, 0.58699363, 0.48444232,
            0.05775462, 0.48720175, 0.9867899, 0.8741793, 0.24787006, 0.0098169, 0.54290944,
            0.76660496, 0.24225757, 0.90794486, 0.69673246, 0.95566136, 0.36515298, 0.57477367,
            0.8958077, 0.18574312, 0.04084096, 0.32315838, 0.43012723, 0.34473136, 0.251939,
            0.45628268, 0.7774604, 0.40238795, 0.4778858, 0.38190666, 0.443126, 0.70348734,
            0.68944603, 0.6902452, 0.14189826, 0.29317725, 0.71652186, 0.15285546, 0.13075079,
            0.16711909, 0.15727986, 0.8428172, 0.22742087, 0.6715706, 0.2795822, 0.48898628,
            0.5339775, 0.726385, 0.7930301, 0.2581999, 0.8415604, 0.562384, 0.13921387, 0.78449273,
            0.72191995, 0.45631656, 0.86304337, 0.73805946, 0.27518228, 0.9828262, 0.59191656,
            0.5271378, 0.33997726, 0.60102206, 0.81581175, 0.7040396, 0.5199952, 0.01479205,
            0.16784889, 0.7692465, 0.3092633, 0.17081867, 0.32220426, 0.0631674, 0.6282157,
            0.2581846, 0.7893134, 0.61240184, 0.42240703, 0.355786, 0.44447815, 0.09476027,
            0.3878751, 0.64234614, 0.11175825, 0.15909617, 0.95026743, 0.2965687, 0.28795037,
            0.62251085, 0.8305602, 0.3662946, 0.14521246, 0.9621208, 0.38020673, 0.3510485,
            0.28524187, 0.24482581, 0.6677257, 0.33922875, 0.39850447, 0.71123666, 0.12899092,
            0.12195553, 0.4660024, 0.63552475, 0.57522744, 0.7960696, 0.47564268, 0.35525572,
            0.9814129, 0.4688829, 0.72268397, 0.29161337, 0.76217693, 0.3370403, 0.38562468,
            0.00794073, 0.16640656, 0.6951719, 0.72122115, 0.33095863, 0.49653715, 0.7990719,
            0.43818596, 0.2760564, 0.5976553, 0.6921513, 0.03501531, 0.96888334, 0.44027686,
            0.5722288, 0.6860908, 0.354391, 0.3030436, 0.91172963, 0.8522385, 0.20780124,
            0.6851016, 0.81079435, 0.6578895, 0.20630272, 0.8371248, 0.03656635, 0.18088074,
            0.15876009, 0.67578596, 0.8514548, 0.29569438, 0.51335657, 0.14092551, 0.43087652,
            0.18927561, 0.3548947, 0.01398679, 0.39191842, 0.39567924, 0.41219148, 0.4657539,
            0.03120668, 0.55167097, 0.5203346, 0.926732, 0.11640227, 0.5962988, 0.3090088,
            0.7484168, 0.02147577, 0.57611835, 0.9103308, 0.32406485, 0.5274155, 0.5261415,
            0.22837397, 0.9573879, 0.6485293, 0.72181726, 0.29511455, 0.88639265, 0.5188661,
            0.7846497, 0.48298272, 0.03431003, 0.85404575, 0.48577386, 0.34614396, 0.03888219,
            0.94362164, 0.15117891, 0.58509, 0.39590272, 0.32108444, 0.03719785, 0.9103236,
            0.23605917, 0.7769166, 0.5013731, 0.64956135, 0.25076696, 0.03015263, 0.43133247,
            0.6384559, 0.09313619, 0.8692138, 0.91970456, 0.8316374, 0.8193103, 0.01831975,
            0.09057815, 0.6877077, 0.11799596, 0.42855334, 0.13702092, 0.31660682, 0.32806376,
            0.7646719, 0.10952926, 0.20828883, 0.49984223, 0.45089912, 0.94342923, 0.45052946,
            0.97337824, 0.9276395, 0.44235066, 0.37731636, 0.9682662, 0.5712741, 0.3144015,
            0.774386, 0.76916295, 0.89676636, 0.5271335, 0.23638117, 0.6929939, 0.64519554,
            0.57768893, 0.68271434, 0.6223563, 0.05298517, 0.53959036, 0.53110784, 0.7490009,
            0.2896578, 0.41068247, 0.28178045, 0.20798713, 0.13728051, 0.30110443, 0.78129905,
            0.29452822, 0.9245769, 0.03675647, 0.5954175, 0.42390975, 0.6557143, 0.8106476,
            0.35081705, 0.5950288, 0.65956026, 0.8474201, 0.6571122, 0.50578433, 0.30685803,
            0.53040797, 0.5153227, 0.39561588, 0.21312988, 0.39524126, 0.76970625, 0.43079308,
            0.37373173, 0.6094103, 0.94719636, 0.15018035, 0.15040922, 0.6584785, 0.64733315,
            0.919175, 0.3072559, 0.44643322, 0.78549147, 0.06808019, 0.21689764, 0.6783678,
            0.3608854, 0.80487376, 0.6568672, 0.89588594, 0.4669414, 0.45783395, 0.4953162,
            0.5716346, 0.75915194, 0.97228986, 0.15172002, 0.17699589, 0.8860516, 0.6795675,
            0.48570013, 0.35189822, 0.8219524, 0.15438259, 0.13443872, 0.3553907, 0.7353281,
            0.6681931, 0.43805563, 0.85423166, 0.20878878, 0.4212191, 0.55199236, 0.29546982,
            0.303067,
        ],
    )
    .unwrap();

    let kernel25: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.60486084, 0.4382807, 0.02912598, 0.39451823, 0.4187059, 0.24492879, 0.5582184,
            0.5130793, 0.45396152, 0.67949796, 0.8829611, 0.49246776, 0.42586836, 0.45508063,
            0.19181061, 0.14920756, 0.5888296, 0.42133403, 0.26091522, 0.02333054, 0.9397661,
            0.31500933, 0.9389992, 0.10366015, 0.2643653, 0.59889996, 0.6850384, 0.60724497,
            0.8527415, 0.63142025, 0.7739118, 0.20756939, 0.23688388, 0.33135027, 0.712934,
            0.85629207, 0.814399, 0.9057288, 0.5599716, 0.26620805, 0.20021324, 0.49670485,
            0.44614497, 0.8516371, 0.76669574, 0.1684874, 0.2235733, 0.44621915, 0.4912706,
            0.47618693, 0.67701244, 0.70298517, 0.85897654, 0.8534153,
        ],
    )
    .unwrap();
    let conv_layer25 = ConvolutionLayer::new(kernel25, 1, Padding::Valid);
    let target_output25: Array3<f32> = Array::from_shape_vec(
        (2, 12, 17),
        vec![
            0.8883499, 1.7818999, 1.732821, 1.6304493, 1.5156022, 1.7722743, 1.4510221, 1.9412621,
            1.6749065, 1.9949613, 1.4769378, 1.742423, 1.6537595, 1.505154, 1.3639195, 0.8379388,
            0.41041973, 1.2305046, 3.301579, 4.185228, 4.7032666, 4.0574074, 3.7690253, 3.7762892,
            3.753972, 3.636703, 3.8137896, 3.0552988, 3.2100353, 3.773007, 3.7393875, 3.652079,
            2.8192487, 1.4780704, 1.7558796, 3.3264856, 6.4714313, 6.0615654, 6.157292, 5.08317,
            5.012357, 5.494875, 4.6738, 5.828734, 6.076151, 5.2396317, 6.5297685, 5.338105,
            5.9356117, 3.3532188, 2.5090714, 2.299083, 3.4409904, 5.543876, 5.5652065, 6.63407,
            5.123803, 5.361264, 4.6818995, 5.0918264, 4.517436, 6.5361457, 6.220309, 6.70284,
            5.835287, 6.017358, 2.9358535, 2.0180323, 2.500783, 4.414126, 6.093738, 6.0063434,
            5.810473, 4.9249315, 5.779641, 5.653999, 4.6581907, 5.080363, 5.2274575, 5.9175253,
            7.0253386, 5.593724, 5.3078227, 3.7197347, 1.4811387, 2.6420465, 4.0392575, 6.8034925,
            6.044121, 6.831231, 5.401721, 5.8346233, 4.652921, 5.031887, 4.9982586, 4.8257923,
            5.6915183, 5.9968586, 6.158613, 6.066351, 3.9628477, 2.0884242, 2.4487507, 4.045739,
            7.2521834, 6.903696, 7.2548733, 5.91422, 6.436056, 5.81957, 5.858566, 5.658162,
            5.876392, 6.0195966, 5.64301, 4.9833245, 4.75865, 2.9546707, 1.7414248, 2.3193176,
            4.354107, 6.298338, 7.002888, 6.771452, 6.5191603, 6.159338, 5.801628, 5.9532876,
            5.68879, 6.927722, 6.232746, 6.689983, 3.9155877, 4.826375, 2.3099096, 1.9554052,
            2.1062868, 4.656186, 6.8739614, 6.1409955, 7.311399, 7.673435, 7.2665443, 5.7081423,
            6.4990478, 5.3728023, 6.9239836, 5.807641, 6.0577893, 5.122452, 5.108068, 2.7592678,
            1.917275, 2.280257, 3.788317, 5.793063, 5.725283, 6.96298, 5.9990025, 6.3887024,
            5.9398704, 6.2677073, 5.8059525, 5.429964, 5.678013, 6.0495405, 5.1845837, 6.054842,
            3.8237052, 2.3579712, 1.5062257, 2.0602934, 3.9923434, 3.7124245, 4.507295, 3.266141,
            3.9413137, 3.9479108, 4.944838, 4.221744, 4.016837, 3.0398967, 3.58919, 4.698686,
            3.9487073, 2.935548, 1.6791531, 0.7257883, 0.68942237, 1.8751936, 0.8132944, 1.3792574,
            0.9951955, 1.4134454, 1.3978416, 1.9170032, 2.450365, 1.3210627, 1.6073165, 1.2404072,
            1.8533522, 1.5816824, 0.97897255, 0.6688288, 0.9282474, 2.0403597, 2.235816, 2.0658307,
            2.0706437, 1.813556, 2.3539343, 2.4479225, 2.1151192, 2.3010361, 2.0094116, 1.9454038,
            2.3171263, 1.8952188, 1.9704056, 1.179867, 0.89852554, 1.5471103, 3.1444254, 4.8759203,
            5.600718, 4.6921983, 4.258337, 4.579278, 4.701933, 3.7825017, 4.8408756, 3.5448642,
            3.4097772, 4.3410234, 3.9274006, 4.5912423, 2.6244204, 2.3774836, 1.9089768, 4.32123,
            7.450081, 8.355556, 7.3532257, 6.4967937, 6.7660456, 6.9944, 6.3694687, 7.4966564,
            7.0965977, 7.027743, 7.83068, 7.2718534, 7.418362, 4.1818576, 3.3530707, 2.365913,
            3.9906316, 7.0736403, 7.362415, 7.854636, 6.610914, 7.020236, 5.994448, 6.22088,
            6.564576, 7.347541, 7.1215105, 8.166473, 7.4125185, 7.335432, 4.6513705, 3.197067,
            3.0797195, 3.9857316, 8.262425, 7.236025, 7.695465, 6.609232, 6.7731338, 6.8866367,
            7.019033, 6.710953, 6.676292, 7.636256, 9.076913, 7.8874846, 7.2349234, 4.6599474,
            2.4872906, 3.2136416, 4.654303, 8.814938, 7.2718067, 8.720538, 6.845647, 7.2215843,
            6.2957654, 6.1794844, 6.131389, 6.004123, 6.89334, 8.042969, 7.149497, 7.6703405,
            5.3046765, 2.6767483, 2.8827891, 5.4230103, 8.433983, 9.180152, 9.488028, 6.9517536,
            8.280989, 7.359198, 8.09194, 7.2428794, 7.143297, 6.921982, 7.125411, 6.044665,
            6.7870626, 3.6582952, 2.6001444, 3.0365872, 5.083118, 8.033191, 9.108303, 8.763548,
            8.09528, 8.530504, 6.360428, 7.401129, 7.3004227, 9.135809, 8.058273, 7.859043,
            6.1852236, 6.3481603, 3.4735277, 2.632083, 2.9662306, 4.675126, 8.915165, 8.228218,
            9.42037, 9.28788, 9.372055, 7.94499, 8.36392, 7.3724537, 8.775913, 7.5437584, 8.056346,
            5.5939784, 6.3225117, 3.970892, 2.6280305, 2.626011, 4.291136, 7.603692, 7.022392,
            8.991289, 7.829248, 7.880266, 7.1098986, 7.8947315, 7.3984733, 7.6282053, 6.9366646,
            7.821018, 6.989736, 7.632382, 5.0058146, 3.2985196, 1.6622374, 2.2522035, 5.1448765,
            4.9912996, 6.1152315, 4.6839514, 5.8726273, 5.1186705, 5.8874617, 5.1312943, 4.733239,
            4.6783824, 4.4045815, 4.9833403, 5.6948566, 3.9271162, 2.5172696, 0.8625948, 0.9862881,
            2.3940115, 1.8322363, 2.16666, 1.3644402, 1.9180946, 2.3141875, 3.2061338, 3.2254715,
            2.4236448, 2.2972138, 1.9200424, 2.8648367, 3.017902, 1.6481984, 1.1253531,
        ],
    )
    .unwrap();
    let current_output25: Array3<f32> = conv_layer25.convolve(&test_input25);

    assert!(
        arr_allclose(&current_output25, &target_output25),
        "{:?} was not equal to {:?}",
        current_output25,
        target_output25
    );

    let test_input26 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.09939361, 0.6076978, 0.6953572, 0.4813676, 0.11385565, 0.9717235, 0.39455086,
            0.89547807, 0.50680614, 0.55472255, 0.52786833, 0.6554322, 0.13498625, 0.99620885,
            0.44649956, 0.35815725, 0.0504973, 0.7412536, 0.80308986, 0.7371504, 0.5041107,
            0.7861993, 0.909113, 0.81976044, 0.57626015, 0.10905766, 0.50362575, 0.31622592,
            0.1279444, 0.6300257, 0.09109604, 0.99397695, 0.45099398, 0.39270082, 0.8857335,
            0.84918076, 0.78383875, 0.72278243, 0.08929764, 0.618867, 0.07829133, 0.05534032,
            0.12900938, 0.33450192, 0.5303596, 0.9028811, 0.01493673, 0.6052495, 0.68300223,
            0.35303903, 0.8103337, 0.52984565, 0.15128084, 0.43051603, 0.28059772, 0.00891489,
            0.18607458, 0.11024449, 0.57106304, 0.34088475, 0.51521796, 0.4551737, 0.538391,
            0.12089491, 0.08433874, 0.40649992, 0.29841897, 0.58305657, 0.10433917, 0.66390544,
            0.731435, 0.29792643, 0.28624305, 0.43092483, 0.1289603, 0.22165331, 0.46406323,
            0.68809766, 0.9536923, 0.17606957, 0.55071187, 0.53072673, 0.10455144, 0.9571631,
            0.55495816, 0.13288063, 0.44437656, 0.96837336, 0.5063528, 0.7064923, 0.8937895,
            0.45497388, 0.92198044, 0.7426373, 0.7157508, 0.02047214, 0.01173675, 0.13223803,
            0.82381725, 0.15597425, 0.79910344, 0.36176983, 0.8560913, 0.611323, 0.52674735,
            0.5831064, 0.3498497, 0.968473, 0.01200672, 0.79086024, 0.5638385, 0.9690265,
            0.19991861, 0.9513363, 0.15507828, 0.41979295, 0.98834366, 0.01301026, 0.28899273,
            0.8682599, 0.97130793, 0.8024787, 0.29034188, 0.24718882, 0.5366342, 0.4692924,
            0.15322222, 0.83594126, 0.04108659, 0.61967033, 0.07340664, 0.06401163, 0.12822089,
            0.7238483, 0.30244493, 0.9491711, 0.44141734, 0.67812914, 0.22713542, 0.53551257,
            0.44359767, 0.39959106, 0.66883224, 0.47769547, 0.05377042, 0.61688894, 0.22768961,
            0.28283465, 0.3990037, 0.9196311, 0.82822984, 0.6677539, 0.23404987, 0.6708753,
            0.8758087, 0.75492734, 0.31395626, 0.2690143, 0.67623514, 0.6921552, 0.31035745,
            0.03603773, 0.9852127, 0.19921382, 0.9498278, 0.02897831, 0.86107606, 0.00293741,
            0.35674444, 0.4191397, 0.55641156, 0.6335109, 0.80903274, 0.7214805, 0.95258534,
            0.94602233, 0.07761287, 0.17759776, 0.15542968, 0.08167998, 0.76193047, 0.34140688,
            0.34813985, 0.56429654, 0.69079584, 0.651287, 0.24776831, 0.9236739, 0.09322322,
            0.8466656, 0.38427126, 0.33815342, 0.838805, 0.38096663, 0.28034258, 0.78340423,
            0.46203193, 0.06838121, 0.1979319, 0.01351135, 0.02116127, 0.99872667, 0.7154567,
            0.23737086, 0.39736098, 0.33884785, 0.4431885, 0.5957428, 0.996507, 0.31276718,
            0.55529255, 0.03822044, 0.19699456, 0.15296015, 0.59906757, 0.1499156, 0.9981424,
            0.8831124, 0.49506864, 0.44003266, 0.22884977, 0.5272041, 0.9282255, 0.95730776,
            0.71256125, 0.8957009, 0.38429326, 0.82745576, 0.92134255, 0.53414553, 0.25444788,
            0.77232087, 0.6597538, 0.5645497, 0.99726844, 0.43203548, 0.00600106, 0.52825713,
            0.616231, 0.24617034, 0.5221176, 0.84028614, 0.00114695, 0.16886179, 0.9215918,
            0.46281454, 0.59077984, 0.20979705, 0.62355626, 0.44047666, 0.68305826, 0.98954594,
            0.24844927, 0.2604722, 0.04456268, 0.7618813, 0.9893213, 0.3473291, 0.04459461,
            0.427044, 0.55078715, 0.40990627, 0.05412404, 0.08358769, 0.55250907, 0.90154666,
            0.9326744, 0.94750315, 0.23282553, 0.8220057, 0.03333057, 0.3590328, 0.13700394,
            0.48470175, 0.15042725, 0.90220386, 0.34881374, 0.16714397, 0.89079213, 0.67488444,
            0.29599693, 0.25583467, 0.16394943, 0.549147, 0.7881106, 0.49022144, 0.6618432,
            0.7189277, 0.18293881, 0.17122072, 0.71808743, 0.2637363, 0.2623765, 0.64253336,
            0.8601327, 0.5893039, 0.6413237, 0.42210525, 0.3180952, 0.7323518, 0.0080629,
            0.97007126, 0.7702405, 0.9848203, 0.7094253, 0.5238351, 0.9446217, 0.7254593,
            0.03957006, 0.50038505, 0.81599206, 0.5390226, 0.16336593, 0.10756692, 0.7139447,
            0.9721884, 0.0762892, 0.5842812, 0.5351153, 0.79290223, 0.04526648, 0.24217102,
            0.83993906, 0.4007092, 0.49337667, 0.3964408, 0.9322157, 0.6427077, 0.97430724,
            0.75798357, 0.753834, 0.5777924, 0.49516845, 0.26018232, 0.55985487, 0.31415004,
            0.09454908, 0.3642707, 0.8198366, 0.10928579, 0.9209781, 0.21587123, 0.70533997,
            0.80549437, 0.09335517, 0.99226147, 0.7521283, 0.6306182, 0.9812565, 0.13854095,
            0.74512017, 0.5559971, 0.5549817, 0.6562062, 0.4673331, 0.6193884, 0.01808522,
            0.257344, 0.02719511, 0.19508527, 0.534297, 0.6844804, 0.41928288, 0.34004238,
            0.32895055, 0.2017956, 0.42835027, 0.58563495, 0.40216792, 0.67188007, 0.45354384,
            0.7485446, 0.22695023, 0.9923889, 0.9421077, 0.01525365, 0.29330772, 0.3258292,
            0.80696934, 0.8541269, 0.6592291, 0.41289273, 0.91647804, 0.86060405, 0.39086932,
            0.02057635, 0.86474377, 0.5756082, 0.03237247, 0.19121489, 0.920404, 0.69197804,
            0.6866234, 0.28282914, 0.6186801, 0.6887593, 0.3787974, 0.2962676, 0.19442007,
            0.02631165, 0.13235328, 0.10666531, 0.94089866, 0.62072504, 0.12730101, 0.99088573,
            0.9229839, 0.54743403, 0.11107332, 0.28423595, 0.5209626, 0.76069826, 0.96710503,
            0.18445559, 0.7522076, 0.06932273, 0.95973784, 0.19795854, 0.28506085, 0.13914691,
            0.8087165, 0.3778757, 0.39205238, 0.7902731, 0.83978635, 0.14340296, 0.6232285,
            0.4264953, 0.67103004, 0.6248762, 0.9083485, 0.43448448, 0.70240456, 0.33882853,
            0.18323863, 0.52859294, 0.13727196, 0.41655356, 0.19180061, 0.2234552, 0.22415204,
            0.9748111, 0.8298644, 0.4279932, 0.49268875, 0.61891294, 0.64964074, 0.9995373,
            0.26837257, 0.6665136,
        ],
    )
    .unwrap();

    let kernel26: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.3261171, 0.09672975, 0.53935903, 0.808091, 0.3804167, 0.8346855, 0.35334954,
            0.08379908, 0.8629179, 0.19029295, 0.7584863, 0.9792834, 0.5484634, 0.17313573,
            0.7259802, 0.93418276, 0.9247798, 0.5301964, 0.3486188, 0.50249976, 0.86110634,
            0.1735309, 0.04152302, 0.21941453, 0.7082613, 0.48921642, 0.7178425, 0.6853804,
            0.6728813, 0.8655558, 0.08409429, 0.9053351, 0.9845792, 0.548942, 0.9617579,
            0.50557286, 0.73598146, 0.9159213, 0.29825523, 0.19677189, 0.13061608, 0.46687177,
            0.8944676, 0.37667143, 0.14295319, 0.53857046, 0.34614602, 0.10902967, 0.31993368,
            0.9456902, 0.35792756, 0.9037912, 0.7197943, 0.49131492,
        ],
    )
    .unwrap();
    let conv_layer26 = ConvolutionLayer::new(kernel26, 1, Padding::Valid);
    let target_output26: Array3<f32> = Array::from_shape_vec(
        (2, 12, 17),
        vec![
            0.19283114, 1.1994066, 2.3800266, 2.97751, 2.3888266, 2.832955, 3.1687737, 2.6706889,
            2.4065635, 2.3559027, 2.2692292, 2.3439178, 1.9857924, 1.7251043, 2.591978, 1.619947,
            1.5507425, 1.1031057, 1.9152097, 3.6115942, 4.6249585, 4.236039, 4.5420265, 4.8349895,
            4.4327497, 4.6942945, 5.161135, 4.410337, 4.204122, 4.0261917, 2.6683283, 4.1184635,
            2.250207, 2.100845, 1.8542708, 4.5938687, 6.829033, 8.067387, 7.5624957, 8.16982,
            8.473632, 8.327028, 7.4374266, 8.524384, 7.5572033, 6.54964, 6.6397095, 5.6654773,
            6.873228, 4.820898, 2.4159505, 2.8136802, 3.9992442, 7.290785, 6.2861743, 7.0701675,
            7.0774393, 6.850073, 8.348594, 8.03403, 8.751819, 7.27588, 6.0180526, 5.757617,
            5.4500604, 6.0325904, 4.3050966, 2.0312538, 3.0845141, 4.620666, 7.0143614, 6.438095,
            5.399378, 5.9980774, 6.7754593, 7.3041596, 7.7375984, 7.1012554, 6.5412955, 5.600544,
            5.92945, 6.4917126, 6.561663, 5.31813, 2.465042, 3.0961454, 4.379289, 6.852582,
            6.4262075, 6.5298615, 6.365361, 7.2503495, 7.6932993, 7.8537846, 7.5984125, 6.626939,
            5.8603683, 5.1483154, 6.9619193, 7.1906085, 4.7301235, 2.3457246, 2.7019506, 4.2643948,
            7.436596, 6.923087, 6.6409082, 5.7925706, 6.8685718, 6.767169, 6.896656, 7.5032625,
            6.265841, 7.1265283, 7.065134, 8.127679, 7.4263763, 4.7420874, 1.8636848, 2.6353917,
            4.9006567, 7.8380656, 8.868813, 7.6248527, 6.757668, 7.5934706, 7.5145044, 7.236888,
            7.320626, 6.5042777, 7.1914763, 7.049562, 7.906634, 6.335482, 4.104567, 2.1983101,
            3.5231767, 6.0393543, 8.268709, 6.7159543, 6.752589, 6.7467213, 6.841753, 5.6267843,
            5.430916, 5.835309, 6.74129, 7.2231774, 7.5364037, 6.4174075, 6.6857963, 4.1857452,
            2.4434443, 3.0265784, 5.60359, 7.7994804, 6.400476, 5.519253, 5.67262, 7.02396,
            7.110203, 7.1271725, 6.814791, 7.286274, 8.300259, 7.384999, 6.682856, 6.548478,
            4.811535, 3.609931, 1.9821718, 3.2037687, 4.9780087, 4.2434607, 3.8415728, 4.2639766,
            4.5281715, 4.2156944, 4.9867587, 5.39815, 5.0964746, 4.7140484, 4.015248, 3.6697712,
            4.9720907, 2.9870186, 1.8907728, 1.4471844, 2.2685516, 3.765952, 2.4765203, 2.2787688,
            2.1864803, 2.9672651, 2.9955926, 3.3706555, 3.5666428, 3.2803063, 3.244895, 3.5138493,
            2.5224848, 3.5953608, 2.151128, 1.6603082, 0.6820267, 1.6043208, 2.3592002, 3.5126395,
            2.8794532, 3.667004, 2.8951411, 3.2817326, 2.5778508, 2.735299, 2.2914536, 2.5084333,
            2.4451203, 2.0240047, 2.6499658, 1.2751317, 1.7399495, 1.6186578, 2.6183844, 5.0411744,
            6.4199033, 6.377725, 6.2606425, 6.1018457, 6.7420344, 6.713784, 6.9324493, 5.594121,
            5.9459424, 5.6833386, 4.509733, 5.2322273, 3.7154305, 2.4050574, 1.9671868, 5.0573053,
            6.755231, 7.8398714, 8.5596695, 8.925316, 8.449346, 8.907073, 8.531092, 9.794144,
            7.5570536, 6.7925158, 7.1328692, 6.726688, 7.241081, 5.28637, 2.5208492, 3.174538,
            4.402295, 8.2806635, 7.789566, 7.3798294, 8.495923, 7.982845, 8.69624, 8.45382,
            8.769251, 6.4138103, 5.9889293, 5.557311, 5.556757, 6.0563374, 4.527426, 2.0286822,
            3.1063864, 5.324358, 8.036369, 6.518588, 6.9054575, 6.7165775, 8.363534, 8.210787,
            7.227768, 7.4866076, 6.17718, 5.7897053, 5.1957545, 6.656096, 6.5067897, 5.226134,
            2.4997816, 2.982915, 4.423699, 7.411311, 7.2023954, 7.0363455, 6.8030605, 7.3334846,
            7.678026, 8.033778, 7.837651, 6.704648, 6.890896, 6.4946523, 6.7871914, 7.488554,
            4.613566, 2.1642883, 3.137198, 4.3109403, 7.7438107, 7.847433, 7.78021, 6.842313,
            7.5194426, 6.82558, 7.739601, 7.378187, 7.834335, 5.9865026, 7.5478525, 8.162375,
            7.229594, 4.4575086, 1.9838357, 3.352933, 6.2342043, 9.25149, 8.627911, 8.963993,
            6.8349185, 7.8790274, 5.9525204, 7.2736597, 6.9856834, 7.1000566, 7.269938, 7.2414956,
            9.059619, 8.029404, 3.878718, 2.438982, 3.588673, 6.5633373, 9.042926, 7.700641,
            7.212516, 7.028667, 7.148312, 6.741777, 7.292208, 7.154892, 7.5829678, 7.5710464,
            7.9108605, 7.1759014, 6.83341, 4.2660284, 2.616637, 3.100041, 5.840095, 9.011721,
            6.5173264, 6.2822313, 6.9016037, 7.0294914, 7.447608, 8.0845785, 7.810804, 7.3813176,
            7.9041142, 7.0815578, 6.7254953, 7.619801, 4.4856243, 3.1067517, 2.2094905, 4.4781938,
            5.673927, 3.838724, 3.9406905, 4.350333, 4.2402287, 4.947534, 5.5296664, 5.4134645,
            4.6830773, 4.348028, 4.188094, 4.401193, 5.3678694, 3.5975275, 1.9956698, 1.025404,
            1.947039, 2.4491985, 1.8097126, 1.5669148, 1.5449643, 1.7880585, 2.0501716, 2.4484844,
            2.063674, 1.9516959, 1.9554267, 1.9360085, 1.8287692, 2.4189303, 1.8649812, 0.8971007,
        ],
    )
    .unwrap();
    let current_output26: Array3<f32> = conv_layer26.convolve(&test_input26);

    assert!(
        arr_allclose(&current_output26, &target_output26),
        "{:?} was not equal to {:?}",
        current_output26,
        target_output26
    );

    let test_input27 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.69113374, 0.9615546, 0.11799753, 0.24098068, 0.5201091, 0.01988209, 0.93071467,
            0.21783541, 0.6345836, 0.5997897, 0.3821681, 0.08845946, 0.6696186, 0.30976853,
            0.86896497, 0.16485341, 0.22297226, 0.61939573, 0.787276, 0.06126022, 0.6562995,
            0.9216594, 0.2457454, 0.48232093, 0.6767117, 0.7042522, 0.36677414, 0.48979157,
            0.27360517, 0.5869422, 0.27611768, 0.26442292, 0.20080982, 0.91767025, 0.36463642,
            0.11189529, 0.11818971, 0.13544263, 0.7131112, 0.68724895, 0.33155695, 0.69078076,
            0.80222553, 0.5333259, 0.32190928, 0.77878344, 0.08551037, 0.85251176, 0.29192793,
            0.9699456, 0.45361686, 0.11329727, 0.8463833, 0.9285037, 0.8701852, 0.46818328,
            0.90702206, 0.18856683, 0.45777324, 0.35982916, 0.02530834, 0.9133796, 0.9737615,
            0.07101188, 0.7752038, 0.37889206, 0.13838367, 0.91733086, 0.430336, 0.9198305,
            0.5380625, 0.5224842, 0.9655628, 0.10147168, 0.57677186, 0.34796357, 0.61658883,
            0.68917644, 0.84899485, 0.15994577, 0.54054207, 0.34836137, 0.13617612, 0.6027421,
            0.9999695, 0.4703405, 0.93084306, 0.5403318, 0.4532712, 0.9231324, 0.22631837,
            0.15559341, 0.73171294, 0.8085952, 0.87073565, 0.04408429, 0.442418, 0.68804723,
            0.09648526, 0.99013287, 0.39002457, 0.8910958, 0.2089261, 0.7030672, 0.20636925,
            0.48988733, 0.6818526, 0.33184996, 0.64908034, 0.30805972, 0.32266703, 0.45468414,
            0.7646959, 0.51671654, 0.5644179, 0.57114464, 0.1499708, 0.0285126, 0.34472197,
            0.43013144, 0.45248675, 0.8635111, 0.13950849, 0.31055018, 0.8794452, 0.20421512,
            0.89352185, 0.84149826, 0.17070445, 0.8472129, 0.80763394, 0.43805566, 0.9283719,
            0.42566535, 0.8063544, 0.03382581, 0.22873266, 0.10301294, 0.6423686, 0.6695578,
            0.9326136, 0.10865664, 0.5962613, 0.99988186, 0.35112807, 0.13524966, 0.9012402,
            0.4219725, 0.7799652, 0.87387353, 0.5921124, 0.34359774, 0.26661384, 0.04284242,
            0.8670922, 0.19314824, 0.23294576, 0.541387, 0.9847154, 0.48499247, 0.09907741,
            0.5006215, 0.5578283, 0.1141604, 0.12097415, 0.46633622, 0.20250201, 0.53496593,
            0.7033518, 0.68214494, 0.49284568, 0.6940483, 0.5552098, 0.6059211, 0.378767,
            0.2238173, 0.2613474, 0.67423475, 0.3954447, 0.4054549, 0.6796681, 0.72399604,
            0.28246298, 0.7645698, 0.96831554, 0.5395196, 0.10945795, 0.499514, 0.07966255,
            0.04232477, 0.18794546, 0.02903101, 0.87264, 0.2464628, 0.21625711, 0.5063043,
            0.49260572, 0.26562026, 0.5136638, 0.38765427, 0.995697, 0.26731393, 0.9085028,
            0.12043773, 0.46525767, 0.5472589, 0.09271611, 0.93896073, 0.82003325, 0.26917773,
            0.20598832, 0.15525481, 0.05620801, 0.06457912, 0.58928204, 0.08488933, 0.45322236,
            0.7673163, 0.4033134, 0.15463823, 0.67769825, 0.9161704, 0.6265972, 0.37210664,
            0.04776173, 0.9293805, 0.4602623, 0.03279204, 0.07298613, 0.23598829, 0.9973023,
            0.25666964, 0.29511, 0.26824012, 0.66342247, 0.5264845, 0.3860588, 0.7544129,
            0.01928642, 0.5111338, 0.6079196, 0.47655347, 0.4252797, 0.8205566, 0.9907962,
            0.9780975, 0.9607086, 0.78929913, 0.31804043, 0.8503088, 0.42641845, 0.29640055,
            0.49979007, 0.27845028, 0.6667202, 0.7356281, 0.6987177, 0.23738323, 0.5833552,
            0.8751756, 0.7455838, 0.77469295, 0.2791718, 0.14463307, 0.11350685, 0.39833462,
            0.73064125, 0.9280576, 0.18288209, 0.35543966, 0.78150374, 0.6667131, 0.5753187,
            0.3559486, 0.2699716, 0.9916458, 0.35738185, 0.31955966, 0.6034462, 0.49671844,
            0.21147081, 0.43717724, 0.8128758, 0.44624192, 0.26903114, 0.48451242, 0.299916,
            0.24334253, 0.8110261, 0.93565845, 0.8960472, 0.7400156, 0.49422848, 0.56603134,
            0.57117814, 0.9466828, 0.75557137, 0.47999805, 0.29572076, 0.88842475, 0.4342134,
            0.8039146, 0.15955769, 0.72233695, 0.22291587, 0.6377711, 0.33839074, 0.78856933,
            0.7037668, 0.524876, 0.30532846, 0.2398776, 0.9853742, 0.94015056, 0.7002529,
            0.67187446, 0.8218346, 0.92597115, 0.12606671, 0.6032527, 0.34271526, 0.47624904,
            0.32579103, 0.6722847, 0.3613456, 0.74746865, 0.28857794, 0.899909, 0.2689032,
            0.7236747, 0.5965492, 0.43040073, 0.6599278, 0.5936739, 0.21878308, 0.29627025,
            0.6594448, 0.4529453, 0.29142585, 0.13420771, 0.46529654, 0.8734327, 0.45615637,
            0.38038793, 0.5803451, 0.7617363, 0.83634585, 0.11365525, 0.52510726, 0.00939824,
            0.92569697, 0.503521, 0.3704941, 0.67069006, 0.6889376, 0.6721221, 0.28051263,
            0.90126437, 0.74227345, 0.20851454, 0.9827812, 0.5416497, 0.5500161, 0.01951568,
            0.4893268, 0.6984468, 0.2854609, 0.47535938, 0.22314279, 0.52706516, 0.29269645,
            0.8363249, 0.62550986, 0.38499138, 0.13979574, 0.02366208, 0.80627346, 0.61764413,
            0.5107428, 0.42557174, 0.7787232, 0.21393713, 0.47935697, 0.09325973, 0.30268312,
            0.41914597, 0.3112818, 0.23385784, 0.31058535, 0.85251105, 0.8465506, 0.9317292,
            0.8793211, 0.8826353, 0.2437348, 0.83518285, 0.09084356, 0.7980087, 0.9619224,
            0.7815283, 0.6908657, 0.17727828, 0.5642379, 0.94389766, 0.76393694, 0.5468075,
            0.40215194, 0.42945445, 0.97156674, 0.29061684, 0.39886904, 0.7965488, 0.26557565,
            0.49024066, 0.04281154, 0.2126663, 0.4591814, 0.72670996, 0.8307759, 0.7593779,
            0.98412323, 0.5340124, 0.22581473, 0.94544613, 0.45676422, 0.83325416, 0.944354,
            0.0488622, 0.36290234, 0.19694914, 0.22211874, 0.89430046, 0.7373128, 0.23623948,
            0.20805733, 0.56668675, 0.9879018, 0.44374004, 0.78476405, 0.371802, 0.2305824,
            0.52640325, 0.8606839, 0.48357183, 0.8400437, 0.39311504, 0.5037727, 0.22245023,
            0.7884574, 0.46210247,
        ],
    )
    .unwrap();

    let kernel27: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.9100606, 0.4197044, 0.7613341, 0.16655016, 0.9949134, 0.6268428, 0.33358738,
            0.9768461, 0.15689476, 0.6943571, 0.03449651, 0.94856584, 0.26878476, 0.35532916,
            0.08034612, 0.00685212, 0.44599372, 0.7057333, 0.28570879, 0.8037367, 0.74674773,
            0.5833351, 0.9893505, 0.86004764, 0.658877, 0.09269939, 0.01841728, 0.49740204,
            0.88689566, 0.33150923, 0.987483, 0.08079711, 0.23814383, 0.97735417, 0.15401787,
            0.17239508, 0.7628443, 0.19757593, 0.81601155, 0.6433668, 0.9904894, 0.23848392,
            0.72935826, 0.9979789, 0.5349574, 0.69361484, 0.33775258, 0.5795955, 0.26489744,
            0.34009922, 0.10764247, 0.9653691, 0.43281078, 0.27755457,
        ],
    )
    .unwrap();
    let conv_layer27 = ConvolutionLayer::new(kernel27, 1, Padding::Valid);
    let target_output27: Array3<f32> = Array::from_shape_vec(
        (2, 12, 17),
        vec![
            1.1641697, 1.8708891, 1.5802536, 1.4926205, 1.7584248, 1.3407576, 1.8590139, 1.6426474,
            2.6391518, 2.40941, 1.7223908, 1.3142724, 1.8968163, 1.6570388, 2.582017, 1.309285,
            0.7520852, 1.3252819, 3.5122204, 5.3120766, 4.8654575, 3.5618134, 3.8285434, 4.6265025,
            4.020351, 5.1575956, 4.8130856, 4.865062, 3.493164, 4.2409306, 4.763242, 5.2969427,
            2.9410238, 1.6430992, 2.9310317, 5.7110868, 6.4257298, 6.373758, 7.266879, 5.6180987,
            5.817942, 6.493697, 7.582684, 6.637661, 6.359651, 6.0490713, 7.281849, 7.398759,
            6.7713947, 4.09622, 1.5471178, 2.9663131, 4.6514506, 7.4918385, 6.879183, 6.8206697,
            7.063563, 6.5996046, 6.741092, 6.180976, 6.753627, 7.120479, 7.112161, 7.235224,
            7.5285892, 7.161082, 3.8885968, 1.1155264, 2.7038102, 6.1103187, 6.8942738, 6.417587,
            7.1146636, 5.86421, 6.703412, 6.7341785, 5.8086534, 7.610972, 6.831835, 7.4732013,
            8.662063, 7.1038704, 6.4886055, 3.005065, 0.9895319, 3.4183779, 5.66827, 6.513257,
            6.9171157, 5.518561, 7.6998267, 6.4730573, 6.3645325, 6.2551155, 8.504545, 7.091939,
            7.592209, 8.413382, 7.487946, 6.6757946, 3.2650256, 1.7210886, 2.0156152, 5.180936,
            8.089171, 7.416745, 7.568451, 6.7304735, 6.741454, 6.787983, 5.385284, 7.3492136,
            7.8351436, 8.323668, 7.648297, 7.260331, 6.416424, 4.7124524, 1.9122734, 3.07337,
            5.7494383, 7.344233, 7.916447, 7.532151, 8.281114, 6.747561, 6.4428487, 6.7421007,
            7.114117, 7.018892, 7.12279, 6.6984076, 6.35985, 7.874835, 4.813648, 1.7372789,
            3.287195, 6.3691735, 7.739078, 8.361815, 8.2414665, 7.840214, 8.2512665, 8.179444,
            7.481041, 7.848452, 6.1540623, 6.412478, 7.159989, 7.229938, 7.682704, 3.5936882,
            1.5739818, 3.0160482, 5.9999075, 6.4725146, 8.079109, 7.805126, 7.911314, 8.269011,
            7.859493, 7.326113, 6.2180486, 6.0227766, 7.6456113, 7.4955897, 7.4602594, 8.022418,
            4.325763, 1.8613433, 2.307071, 4.5482616, 4.53681, 4.228877, 5.3012924, 6.037569,
            6.060136, 6.3114405, 4.911538, 5.488563, 5.2438254, 4.962105, 6.014127, 5.6446686,
            5.340092, 3.7012537, 1.6129174, 0.9085167, 1.7438552, 2.0154152, 2.5758939, 3.013764,
            3.2344341, 2.8048987, 2.9287152, 3.3619652, 2.9827638, 2.8482401, 2.7516465, 2.6981633,
            2.6414075, 3.4529524, 1.3621867, 0.77260774, 1.0966378, 2.476448, 3.2828026, 2.950347,
            1.9954648, 2.6941988, 2.5441437, 3.0028732, 3.733491, 3.848, 3.5386186, 2.5609264,
            2.6555858, 2.857576, 3.651158, 2.4150238, 1.6135225, 1.7803698, 3.458422, 4.864417,
            5.008666, 5.490819, 4.6438212, 5.9514446, 5.045673, 6.060741, 5.8661785, 6.163527,
            4.200678, 5.4734344, 4.781396, 6.113485, 2.844308, 2.1256285, 2.4988258, 4.487006,
            6.5059943, 6.790132, 7.254346, 7.4535446, 6.5636406, 5.5845513, 6.5871973, 6.5381484,
            6.38384, 5.253992, 6.7553525, 7.0873127, 7.5448136, 3.6138628, 2.2497244, 2.7072127,
            4.654589, 7.3476515, 7.487424, 6.844952, 8.141594, 7.2952013, 6.8809376, 7.0807104,
            7.403776, 6.7809534, 6.2777996, 7.6934934, 7.096609, 7.405252, 3.9238582, 1.7848268,
            2.8913183, 3.86539, 7.297191, 6.556298, 6.7830873, 6.031719, 6.427087, 7.176757,
            6.5459447, 7.292511, 6.1021247, 7.837989, 7.643326, 7.957735, 7.3450365, 3.4763682,
            1.4800627, 2.4063668, 5.032126, 6.4723253, 5.9572315, 5.5712895, 7.14834, 5.5884905,
            7.5762687, 5.4395375, 7.5885077, 6.771913, 7.3496923, 8.995635, 7.490815, 7.0366683,
            3.8141725, 2.5589237, 2.4098163, 4.697213, 7.472377, 7.192858, 7.251858, 7.9352756,
            7.243063, 7.9334364, 6.4643044, 7.905545, 7.4552317, 8.74765, 7.566707, 7.016342,
            6.825153, 4.218027, 2.6104946, 2.678323, 5.062519, 7.7763286, 7.911555, 7.429014,
            8.834141, 7.762478, 8.152287, 7.0230684, 7.1169314, 6.591762, 7.1377597, 6.4617662,
            6.171839, 7.0226574, 4.4666247, 3.1097076, 3.3300958, 5.6220894, 8.416181, 8.258596,
            6.818525, 9.326446, 8.766774, 9.091937, 8.063472, 6.532872, 6.002673, 6.4602137,
            7.218853, 8.301957, 8.028145, 4.0567937, 2.5390804, 2.7472103, 5.1265316, 6.214342,
            7.645964, 7.4417825, 8.564027, 9.44875, 8.315306, 6.8153768, 7.437161, 7.208116,
            6.966078, 7.6970863, 8.025852, 8.03913, 4.9683895, 2.9059596, 1.6752409, 2.8110368,
            3.5127995, 3.9472547, 3.9088464, 5.6265306, 4.5922923, 4.740313, 4.6240087, 3.8250167,
            3.6111956, 4.9421396, 4.6897736, 4.4066415, 4.0112224, 2.520503, 1.5619032, 0.73503035,
            1.0777488, 1.1445578, 1.9340053, 1.9029331, 2.3590322, 2.1247537, 2.062956, 1.9868563,
            2.100604, 1.9648435, 2.1068487, 1.7484089, 1.8951628, 2.0149012, 0.9812246, 0.75417954,
        ],
    )
    .unwrap();
    let current_output27: Array3<f32> = conv_layer27.convolve(&test_input27);

    assert!(
        arr_allclose(&current_output27, &target_output27),
        "{:?} was not equal to {:?}",
        current_output27,
        target_output27
    );

    let test_input28 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.5322748, 0.8153644, 0.40988755, 0.24133632, 0.7648658, 0.11204641, 0.94687665,
            0.31404087, 0.14600264, 0.8751561, 0.21171108, 0.16797651, 0.9251605, 0.63095194,
            0.8929391, 0.12795849, 0.10989773, 0.90538734, 0.3003097, 0.6486522, 0.69226533,
            0.19131283, 0.8676397, 0.9169408, 0.9313712, 0.14831749, 0.89142025, 0.10900346,
            0.06097801, 0.8297556, 0.46926925, 0.6560135, 0.35788414, 0.8459047, 0.6872295,
            0.79336315, 0.69625896, 0.6032861, 0.21245298, 0.7783868, 0.33385372, 0.18934485,
            0.98988926, 0.835442, 0.8285267, 0.48125055, 0.21471797, 0.6173871, 0.62692714,
            0.13899311, 0.09477642, 0.33909172, 0.50521874, 0.1845745, 0.20815027, 0.04814293,
            0.82568175, 0.00548277, 0.9520912, 0.43334082, 0.4161656, 0.13053188, 0.82981783,
            0.43391317, 0.1526219, 0.76765394, 0.8414392, 0.22662647, 0.75768614, 0.03670884,
            0.569372, 0.4016911, 0.83430797, 0.9199618, 0.5523309, 0.60879946, 0.8484274,
            0.62333465, 0.72344357, 0.93422616, 0.4833327, 0.38079956, 0.69664335, 0.6375929,
            0.05685853, 0.8684104, 0.88915735, 0.7639226, 0.89278924, 0.14760193, 0.72884977,
            0.41313493, 0.457201, 0.61535144, 0.61887467, 0.19735774, 0.80442405, 0.87782377,
            0.09958417, 0.21413611, 0.9319044, 0.81092876, 0.727294, 0.16359355, 0.20012106,
            0.43730915, 0.7470405, 0.81441253, 0.82783866, 0.46885744, 0.16224979, 0.07522171,
            0.28626588, 0.92554736, 0.42260578, 0.2664503, 0.41035688, 0.94491214, 0.29261506,
            0.66423815, 0.7502819, 0.09202226, 0.29447657, 0.89040357, 0.9338168, 0.14086206,
            0.778617, 0.18393157, 0.9409139, 0.8391969, 0.66940516, 0.7854602, 0.45880696,
            0.5301901, 0.61133265, 0.81940347, 0.23559988, 0.00453156, 0.31977177, 0.82848716,
            0.12292414, 0.2047097, 0.95561635, 0.8625563, 0.30796447, 0.24823008, 0.5031169,
            0.98074585, 0.03213529, 0.2574467, 0.07772017, 0.89346814, 0.9683522, 0.66086763,
            0.7839022, 0.9365747, 0.03193681, 0.45478263, 0.11851353, 0.24598803, 0.07832938,
            0.97511005, 0.8355728, 0.01171468, 0.8565048, 0.10912379, 0.4077279, 0.35906726,
            0.26236704, 0.65862477, 0.11245026, 0.5685218, 0.6949583, 0.6733708, 0.8991999,
            0.6030878, 0.73000854, 0.48400247, 0.19118872, 0.25460038, 0.9184611, 0.2807583,
            0.73211795, 0.6683304, 0.33361897, 0.51849383, 0.6791682, 0.48042777, 0.6937536,
            0.9167911, 0.6801258, 0.0564688, 0.7848688, 0.3418887, 0.9124181, 0.07043128,
            0.37207896, 0.49574846, 0.12505583, 0.3103582, 0.6096313, 0.24199934, 0.40645203,
            0.67775714, 0.76091385, 0.2477421, 0.23572317, 0.49046424, 0.5670339, 0.30917186,
            0.06782987, 0.19831854, 0.38844034, 0.23881091, 0.7832937, 0.48872954, 0.5716796,
            0.72878736, 0.44170135, 0.54763687, 0.13181128, 0.02235833, 0.360836, 0.7916734,
            0.7768597, 0.85824955, 0.9645565, 0.40896285, 0.6434178, 0.2303441, 0.8840179,
            0.89847404, 0.9301381, 0.41758484, 0.2730421, 0.48180395, 0.63210744, 0.6205975,
            0.9059564, 0.00599372, 0.8716085, 0.8858185, 0.5369807, 0.64973146, 0.17343594,
            0.6933606, 0.22769123, 0.3336502, 0.27681005, 0.26165754, 0.92774296, 0.6219011,
            0.5608989, 0.11108088, 0.7049294, 0.60061646, 0.68801785, 0.09777608, 0.06093569,
            0.43228298, 0.06134897, 0.7521909, 0.75235975, 0.6520992, 0.20702457, 0.9631269,
            0.83820975, 0.3128124, 0.43404636, 0.06268399, 0.09143817, 0.05626365, 0.79507726,
            0.25231564, 0.16046774, 0.18575045, 0.01911113, 0.711382, 0.66175574, 0.1826374,
            0.02453929, 0.2715362, 0.12966864, 0.6730583, 0.9958221, 0.52347237, 0.7169752,
            0.07645657, 0.44444507, 0.12873596, 0.52158403, 0.32419515, 0.8962471, 0.16951792,
            0.48415482, 0.4232015, 0.2196024, 0.94563127, 0.49693355, 0.45553604, 0.11139348,
            0.08395886, 0.71043, 0.45239362, 0.11525997, 0.28355595, 0.95543647, 0.4682662,
            0.6869693, 0.51128346, 0.5420683, 0.46346098, 0.9399698, 0.31194556, 0.4575972,
            0.02952798, 0.05740095, 0.558365, 0.63975835, 0.799062, 0.44999343, 0.58138865,
            0.9890714, 0.11409238, 0.4750676, 0.1869184, 0.8760484, 0.0823018, 0.33851793,
            0.6896478, 0.61307687, 0.12817004, 0.766394, 0.87622136, 0.32000798, 0.38584012,
            0.20234333, 0.29644713, 0.08710819, 0.5954896, 0.89744276, 0.82598114, 0.3775057,
            0.80864924, 0.28085634, 0.47305906, 0.10534421, 0.8706143, 0.32882455, 0.88731766,
            0.97063476, 0.32436553, 0.72868264, 0.80771196, 0.4281172, 0.7363536, 0.8921248,
            0.6364155, 0.6343222, 0.22897069, 0.68388855, 0.2792772, 0.6897695, 0.4751435,
            0.6972274, 0.97543496, 0.5746593, 0.8178856, 0.74363214, 0.20077299, 0.1308109,
            0.55760676, 0.5673803, 0.33047372, 0.49729654, 0.18380235, 0.12606913, 0.6054057,
            0.35723293, 0.89859825, 0.7071074, 0.76911914, 0.5279102, 0.05990019, 0.86265,
            0.6010754, 0.07892385, 0.3002219, 0.22659945, 0.30542406, 0.50342596, 0.6434107,
            0.17925061, 0.41555944, 0.544464, 0.5880696, 0.53898126, 0.02226985, 0.18543234,
            0.027802, 0.18005316, 0.7795068, 0.5227581, 0.88981736, 0.54065806, 0.7395392,
            0.95084524, 0.89484024, 0.91676915, 0.4377543, 0.2022184, 0.03596852, 0.64913374,
            0.83952224, 0.30891684, 0.31632707, 0.8525341, 0.94421536, 0.16094153, 0.9579144,
            0.5871392, 0.9499455, 0.7507363, 0.70364726, 0.06850108, 0.94590175, 0.3645535,
            0.29766196, 0.06250098, 0.27238533, 0.21670069, 0.31696305, 0.9414358, 0.19911295,
            0.8324337, 0.30397218, 0.83921856, 0.6461333, 0.51352835, 0.19493581, 0.06434184,
            0.11837589, 0.7274973, 0.89949924, 0.50550425, 0.24034186, 0.4342684, 0.44097564,
            0.6025867, 0.44379726,
        ],
    )
    .unwrap();

    let kernel28: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.9732424, 0.03319374, 0.15333544, 0.5078866, 0.0566386, 0.26517463, 0.84865195,
            0.6700582, 0.93777996, 0.96125233, 0.08282983, 0.4614755, 0.7887491, 0.89281446,
            0.7037131, 0.13075382, 0.8497422, 0.30477428, 0.21801536, 0.54378766, 0.2610342,
            0.26282084, 0.5453457, 0.7436905, 0.3842309, 0.3627867, 0.29163483, 0.79784447,
            0.35286993, 0.72115874, 0.41195875, 0.28834382, 0.6492628, 0.29683718, 0.78953046,
            0.7426654, 0.71394044, 0.08833914, 0.2942369, 0.19224383, 0.92822397, 0.4687296,
            0.2533327, 0.02948874, 0.4958622, 0.17956546, 0.36334252, 0.6860607, 0.43101177,
            0.29721686, 0.2487736, 0.8615789, 0.98453826, 0.81354123, 0.5015921, 0.38203195,
            0.99329984, 0.6315665, 0.08466158, 0.92893124, 0.7270585, 0.36967713, 0.5141419,
            0.58694243, 0.6862902, 0.64137435, 0.5392427, 0.6694263, 0.7533694, 0.6951301,
            0.9744765, 0.24959058, 0.9949823, 0.47684282, 0.4160744, 0.21001962, 0.13130435,
            0.3191993, 0.47349572, 0.30938643, 0.0038282, 0.23911464, 0.00915827, 0.00917824,
            0.80651444, 0.7993262, 0.72813416, 0.07875764, 0.14618948, 0.58040166, 0.43831322,
            0.0656543, 0.43796757, 0.6179016, 0.64524394, 0.5678443, 0.68387175, 0.46345225,
            0.8383103, 0.6445482, 0.91017437, 0.4782706, 0.7073291, 0.69897413, 0.0141753,
            0.68331534, 0.05297824, 0.5234909, 0.36412132, 0.80715597, 0.18561168, 0.32832128,
            0.22806701, 0.6854037, 0.43242833, 0.28829068, 0.10209152, 0.97122884, 0.0048431,
            0.73673743, 0.12135573, 0.02750501, 0.65992147, 0.19812581, 0.6938951, 0.39797536,
            0.47632742, 0.6451119, 0.5385581, 0.52415645, 0.45850393, 0.39004716, 0.88483644,
            0.31364414, 0.2586318, 0.73794276, 0.7320835, 0.7883233, 0.9551381, 0.34644595,
            0.4976225, 0.1913664, 0.6450341, 0.8363674, 0.73902684, 0.63540924, 0.24431834,
            0.9109329, 0.05256698, 0.5561245,
        ],
    )
    .unwrap();
    let conv_layer28 = ConvolutionLayer::new(kernel28, 1, Padding::Valid);
    let target_output28: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            0.57394, 1.3542914, 1.7261204, 2.3715072, 4.0874224, 3.7920513, 4.332332, 3.6514587,
            3.1209202, 3.362365, 3.4451127, 2.7445958, 3.9300227, 3.9385376, 4.7874174, 3.2222257,
            2.6437225, 1.6760617, 0.832804, 0.30777746, 1.3040636, 3.7658648, 5.155777, 6.4542108,
            7.233979, 7.4624147, 8.904766, 7.9785976, 8.586876, 7.4348025, 8.0462475, 7.2125034,
            7.445997, 7.371724, 6.7882557, 4.0412827, 2.8222039, 1.5944571, 1.2572441, 3.2486227,
            6.539763, 9.622598, 10.784883, 12.842339, 13.22754, 12.077445, 11.856743, 11.784579,
            12.4161415, 12.427739, 13.860813, 12.072592, 12.452878, 10.860032, 7.4639006,
            5.0271215, 2.6663904, 1.947395, 4.0969086, 8.637166, 11.219194, 14.027458, 14.503044,
            16.741938, 15.932032, 16.30042, 15.784584, 16.721838, 17.929043, 15.881019, 16.429892,
            15.835224, 14.191433, 10.2683735, 5.755763, 3.5759318, 2.7217934, 5.3321757, 11.089058,
            15.09774, 18.385, 20.082186, 21.614723, 21.030193, 20.807476, 21.111208, 20.718151,
            20.221695, 19.349684, 20.040745, 20.150938, 17.488947, 12.853668, 7.835442, 4.252636,
            3.3300967, 6.1143045, 10.524229, 14.930411, 18.894224, 20.877277, 21.962507, 22.266531,
            23.569748, 22.612816, 20.593508, 20.19381, 19.453508, 20.861126, 19.20863, 16.617643,
            11.997848, 7.3052526, 3.3898268, 4.02148, 7.0889435, 12.496722, 17.08386, 21.348202,
            21.027506, 21.4353, 22.41516, 20.780144, 19.176321, 19.157124, 18.138468, 18.323406,
            20.524845, 20.946316, 18.305952, 11.890771, 8.330322, 3.4229648, 3.6056714, 8.283222,
            12.795895, 16.637495, 20.53337, 20.940279, 20.874947, 20.710657, 20.532066, 19.599981,
            18.35939, 18.463171, 20.743359, 21.000534, 21.95109, 15.882229, 11.332602, 6.800225,
            3.2866716, 4.2162027, 9.001015, 13.020466, 17.404139, 22.13661, 21.485203, 19.960423,
            19.563232, 19.94333, 20.047478, 17.404419, 17.974924, 18.588812, 19.094273, 21.080046,
            17.732817, 11.942347, 8.211364, 3.624747, 4.7277083, 10.352272, 13.036501, 17.343063,
            21.71136, 20.980667, 19.210342, 19.901493, 18.581907, 16.906492, 17.781675, 20.506903,
            21.26328, 18.915398, 20.21127, 16.819208, 12.419252, 6.8394656, 3.5661302, 3.165869,
            8.903511, 12.088001, 14.692775, 15.9423, 16.053461, 13.598831, 13.87339, 14.386955,
            13.5622835, 13.634772, 14.95324, 16.143538, 15.628521, 17.635134, 14.17438, 9.377092,
            5.6059256, 3.6779275, 2.5624065, 6.73213, 8.606545, 10.192955, 13.145353, 12.61868,
            9.925946, 10.377525, 11.051638, 11.4401, 11.8995285, 12.741006, 13.152007, 12.5301895,
            12.357565, 10.27591, 7.5637956, 4.384647, 2.8477018, 1.2511163, 3.8660245, 5.054208,
            5.938132, 7.2756104, 7.6085186, 6.1930523, 6.901975, 7.296193, 7.1685605, 6.7421155,
            7.4589996, 7.6577682, 7.487338, 7.7458196, 6.461512, 5.007161, 2.8208067, 1.476646,
            0.5763866, 2.4346626, 2.837483, 3.0571709, 3.498084, 3.2997098, 2.6805978, 2.9774933,
            4.0198092, 4.346138, 4.53861, 3.972034, 3.9550793, 4.4401855, 3.7288036, 3.29911,
            2.097447, 1.0851415, 0.41896465, 0.22685891, 1.1240873, 2.4244137, 3.0119038,
            3.6507568, 3.6667933, 3.5436263, 2.7257078, 3.4693546, 2.945817, 3.03342, 3.5036805,
            4.034864, 3.1668715, 3.9504352, 3.1575553, 2.8695846, 1.4239372, 0.90175354,
            0.29806793, 1.2548361, 2.813883, 3.3717985, 5.5188684, 5.38855, 6.074124, 6.376427,
            6.800132, 6.427143, 6.4841022, 7.3814154, 5.616781, 5.9633927, 5.6503186, 3.916945,
            3.8966808, 1.7948637, 1.6862912, 1.5582988, 2.7300158, 5.0461264, 7.328618, 10.196835,
            10.339871, 11.662761, 10.825074, 10.193202, 11.272841, 9.752495, 10.39214, 10.546895,
            10.614678, 10.21245, 9.448838, 7.143919, 4.2401958, 2.8985038, 1.6497836, 2.942862,
            7.130398, 8.424355, 12.535764, 14.020997, 13.388494, 13.759306, 13.709737, 14.576284,
            13.041854, 14.597417, 13.986677, 14.178731, 13.69382, 11.308092, 8.418662, 5.389711,
            3.2125018, 2.315398, 4.006343, 9.1679, 11.779325, 17.261723, 18.175812, 19.803219,
            18.892084, 18.399773, 18.90058, 17.398495, 16.397814, 17.434046, 18.525625, 17.4082,
            16.385948, 11.520879, 8.578298, 4.5332804, 3.1545823, 4.6294403, 9.340129, 11.824672,
            16.11661, 18.441797, 20.223246, 19.948578, 19.632566, 19.579365, 19.052845, 18.136509,
            19.395912, 18.603098, 17.630655, 13.997946, 11.249422, 7.1074576, 3.3977532, 3.3581285,
            6.0297427, 10.368823, 13.585297, 17.097195, 18.698837, 20.169361, 19.706963, 18.285736,
            17.767225, 17.537275, 16.59154, 16.149965, 18.219587, 17.776941, 15.702697, 11.833824,
            8.602769, 3.7000036, 3.6157806, 6.0538898, 9.994087, 13.373932, 17.456375, 18.57122,
            19.10388, 18.456017, 18.620829, 16.416779, 17.784088, 17.425606, 16.083673, 16.543629,
            18.219353, 14.1030035, 12.471968, 6.8563156, 2.8966403, 3.820663, 6.446382, 10.790336,
            14.837759, 17.594872, 18.582172, 18.466988, 18.939554, 18.13319, 15.864556, 15.900386,
            15.326941, 15.809946, 16.430958, 18.814249, 15.89706, 12.608393, 7.9528046, 4.0499887,
            3.7552657, 7.9690714, 12.427945, 15.429722, 19.167768, 17.48825, 16.424772, 17.959126,
            16.58607, 15.38361, 17.518356, 17.691816, 17.963022, 17.840849, 20.207048, 15.222905,
            12.395117, 5.636294, 2.9591098, 2.7125695, 6.0726185, 9.417364, 12.7367525, 14.447891,
            13.435891, 12.92402, 12.358014, 12.389146, 11.37875, 11.418908, 13.078213, 13.525301,
            13.158891, 14.868133, 11.701187, 9.614387, 6.251401, 3.5342166, 2.0947387, 4.261091,
            7.063776, 10.721991, 12.74905, 10.358222, 8.57732, 10.1174, 10.265157, 9.574469,
            10.299684, 11.523786, 12.220268, 10.84126, 12.458016, 10.894779, 8.087116, 5.1622534,
            2.5820942, 1.4587603, 2.7160969, 3.23854, 6.173205, 7.122952, 6.6114535, 5.691183,
            6.4855742, 6.1997633, 6.757207, 7.0774817, 7.6277823, 7.5827675, 5.663194, 7.062565,
            6.8339434, 5.300908, 3.352337, 1.8773689, 0.42026165, 1.684938, 2.134192, 2.4834275,
            3.7301917, 3.110193, 2.599403, 3.0398347, 3.9659185, 3.561834, 4.1015205, 4.542206,
            3.7564657, 4.003717, 3.427186, 3.505973, 2.8658776, 1.5303502, 0.7288376,
        ],
    )
    .unwrap();
    let current_output28: Array3<f32> = conv_layer28.convolve(&test_input28);

    assert!(
        arr_allclose(&current_output28, &target_output28),
        "{:?} was not equal to {:?}",
        current_output28,
        target_output28
    );

    let test_input29 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.6222151, 0.92868453, 0.04893699, 0.10405056, 0.7266609, 0.04145219, 0.48782048,
            0.548731, 0.45881256, 0.33547178, 0.540371, 0.7910178, 0.78839546, 0.84049743,
            0.9842876, 0.3631438, 0.04040196, 0.37753972, 0.4733552, 0.9590118, 0.69483554,
            0.46147576, 0.5244579, 0.26899648, 0.41173777, 0.53783196, 0.95134264, 0.6049057,
            0.15807904, 0.523342, 0.62018555, 0.4590641, 0.28503576, 0.38717398, 0.19813369,
            0.98584664, 0.8388797, 0.32806987, 0.26547596, 0.54155624, 0.90635383, 0.58438164,
            0.80972457, 0.59019595, 0.6780788, 0.0958912, 0.47856295, 0.85674536, 0.7028763,
            0.53743315, 0.31929258, 0.09922413, 0.07765451, 0.446601, 0.58093804, 0.4849385,
            0.20790926, 0.8150346, 0.28842458, 0.2606844, 0.7152744, 0.8642892, 0.59597003,
            0.32738405, 0.22714303, 0.14223123, 0.4985312, 0.28446305, 0.8578446, 0.5093849,
            0.5639982, 0.6326081, 0.7037209, 0.6291706, 0.869952, 0.51462924, 0.78186774,
            0.62534815, 0.49688724, 0.93685853, 0.36799955, 0.40307763, 0.6977219, 0.43395323,
            0.6597403, 0.28784844, 0.761984, 0.02110602, 0.18104874, 0.61245716, 0.4681282,
            0.15993103, 0.48144373, 0.9778505, 0.6278271, 0.27373013, 0.686285, 0.02864541,
            0.44100302, 0.28628784, 0.43971175, 0.40862006, 0.823536, 0.6152849, 0.72116077,
            0.80509216, 0.13207655, 0.18460116, 0.04024655, 0.11163998, 0.13753681, 0.64616,
            0.60988927, 0.298369, 0.57679987, 0.22292198, 0.61290085, 0.2495688, 0.26395977,
            0.7026515, 0.38838807, 0.15498321, 0.37098822, 0.39290613, 0.66124403, 0.7149846,
            0.43520793, 0.20685975, 0.04516815, 0.35941374, 0.06850646, 0.9856017, 0.23198135,
            0.62659276, 0.66081995, 0.3701531, 0.54966915, 0.48693478, 0.26826328, 0.89372283,
            0.78445923, 0.58712804, 0.6811402, 0.23000365, 0.06065572, 0.8449633, 0.17815381,
            0.30446777, 0.88644, 0.8826608, 0.75789964, 0.969901, 0.9834889, 0.8907584, 0.97847944,
            0.40886414, 0.3212815, 0.39472353, 0.878493, 0.7895801, 0.75543076, 0.23345572,
            0.5435443, 0.16837756, 0.7681288, 0.8542315, 0.5103013, 0.5957757, 0.8233244,
            0.8555658, 0.25473273, 0.8721091, 0.3030269, 0.55013156, 0.36448047, 0.5878724,
            0.49309427, 0.9610754, 0.8105548, 0.00024235, 0.20580722, 0.42482692, 0.02397736,
            0.7226435, 0.2862437, 0.33910662, 0.8752055, 0.19625323, 0.29169068, 0.55841756,
            0.6221619, 0.24158852, 0.78276193, 0.94054115, 0.5855126, 0.42005202, 0.6827206,
            0.7115263, 0.61693937, 0.6575606, 0.02934249, 0.8669238, 0.7353419, 0.49630404,
            0.21345796, 0.820553, 0.17480347, 0.12723699, 0.7203788, 0.5244236, 0.68926454,
            0.5063956, 0.8505795, 0.52149975, 0.76833695, 0.67387354, 0.5844687, 0.3201185,
            0.09514732, 0.71366805, 0.4865683, 0.5130441, 0.33208346, 0.47421247, 0.65361416,
            0.9196911, 0.48471546, 0.3553714, 0.37583, 0.68677646, 0.66436833, 0.6084176,
            0.19649448, 0.05938564, 0.9080266, 0.02659295, 0.79841346, 0.5436528, 0.24870853,
            0.03752139, 0.969797, 0.42355734, 0.858121, 0.46431798, 0.25811204, 0.27433896,
            0.9107763, 0.6327045, 0.78058934, 0.76789916, 0.04331319, 0.70528007, 0.81429756,
            0.9356227, 0.7105842, 0.09783126, 0.7015808, 0.5575821, 0.60567653, 0.9730741,
            0.4249914, 0.01944306, 0.5702975, 0.47126326, 0.28650796, 0.76072216, 0.14372927,
            0.98542094, 0.6413618, 0.46130356, 0.7658825, 0.32756808, 0.16565025, 0.8382721,
            0.8694313, 0.17257373, 0.32025692, 0.5618886, 0.28889108, 0.22646557, 0.36713555,
            0.13691914, 0.63168263, 0.00830113, 0.4511592, 0.44504768, 0.5332531, 0.61392415,
            0.40765005, 0.997754, 0.582613, 0.25544515, 0.50827444, 0.408603, 0.15407899,
            0.7626016, 0.26175067, 0.9487898, 0.420784, 0.6492047, 0.8944672, 0.12573825,
            0.1309708, 0.19249535, 0.88732064, 0.94225925, 0.33589965, 0.20935446, 0.11820386,
            0.6146396, 0.9328607, 0.08010992, 0.8130077, 0.35681823, 0.33871782, 0.69573396,
            0.87327087, 0.19604516, 0.9322211, 0.8988257, 0.5802638, 0.29316396, 0.43613002,
            0.377008, 0.6758455, 0.99191517, 0.87526673, 0.25857434, 0.5614543, 0.24716882,
            0.5964632, 0.4591073, 0.7026854, 0.05888641, 0.86936975, 0.04178984, 0.19628692,
            0.48324484, 0.34818614, 0.43203035, 0.13312028, 0.59230626, 0.18394487, 0.44074106,
            0.8341198, 0.5426904, 0.02972909, 0.7810133, 0.9954068, 0.96492666, 0.562458,
            0.3993404, 0.00198996, 0.79839313, 0.7230826, 0.6282394, 0.10601443, 0.27046126,
            0.6991658, 0.32585683, 0.38133958, 0.5213885, 0.77488744, 0.34216303, 0.36691627,
            0.09267096, 0.7644656, 0.2696341, 0.59979403, 0.8897497, 0.57541674, 0.49034655,
            0.63787574, 0.23486345, 0.03662743, 0.8793221, 0.5383869, 0.9968118, 0.19825909,
            0.24576978, 0.40309098, 0.90556717, 0.12604196, 0.06919543, 0.5624922, 0.47776845,
            0.79470664, 0.7113907, 0.57747316, 0.94574445, 0.12823386, 0.72048515, 0.33813378,
            0.22258297, 0.72843254, 0.732491, 0.52486306, 0.38749784, 0.14124234, 0.37555936,
            0.09780997, 0.09185711, 0.07302681, 0.77982754, 0.4034548, 0.21926212, 0.17238653,
            0.5780929, 0.67101526, 0.7957075, 0.959029, 0.0451069, 0.9154141, 0.56598395,
            0.35120928, 0.83723956, 0.35133615, 0.44534236, 0.29018158, 0.83116454, 0.2515203,
            0.10193888, 0.6440687, 0.4127133, 0.91799986, 0.72377336, 0.2293873, 0.03298171,
            0.37819353, 0.4865611, 0.97507524, 0.25587377, 0.90634483, 0.57375854, 0.7095235,
            0.49891138, 0.02767666, 0.8851657, 0.27840444, 0.46338457, 0.74148726, 0.38590935,
            0.666266, 0.913767, 0.6195248, 0.18244016, 0.04169152, 0.73767346, 0.0778392,
            0.38854632,
        ],
    )
    .unwrap();

    let kernel29: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.68384963, 0.58338785, 0.35812908, 0.8958137, 0.32092866, 0.86535263, 0.0107795,
            0.74310327, 0.04101894, 0.44993454, 0.6848633, 0.98573536, 0.86376214, 0.2857464,
            0.9357826, 0.16086549, 0.6949514, 0.43450552, 0.03159403, 0.39067075, 0.94878227,
            0.00178706, 0.42497006, 0.7423276, 0.6238521, 0.6266061, 0.47667617, 0.02914437,
            0.12830848, 0.3983662, 0.20996386, 0.29889566, 0.79646134, 0.09930792, 0.03084684,
            0.84961617, 0.30748606, 0.9537763, 0.93483084, 0.8706936, 0.7087405, 0.24558839,
            0.6544757, 0.08091403, 0.23692593, 0.58967286, 0.4582198, 0.14067934, 0.02799125,
            0.27060798, 0.54694176, 0.9532117, 0.6919308, 0.04963119, 0.14606105, 0.13090512,
            0.39913234, 0.6624408, 0.52868897, 0.408017, 0.45679867, 0.993621, 0.6020873,
            0.7527259, 0.21162367, 0.8894942, 0.7706656, 0.13750179, 0.14496519, 0.02214848,
            0.80090123, 0.65619093, 0.44368562, 0.03848875, 0.93228406, 0.02779119, 0.21564776,
            0.10555214, 0.81917155, 0.5199574, 0.7281471, 0.5302894, 0.15210663, 0.25766373,
            0.5713909, 0.6759397, 0.03758357, 0.8303515, 0.6627151, 0.21231653, 0.6475722,
            0.63164335, 0.45277232, 0.9354205, 0.4187255, 0.5799347, 0.28412482, 0.79865277,
            0.8054729, 0.65184224, 0.5851739, 0.89133877, 0.27197847, 0.42274445, 0.4899074,
            0.39318708, 0.07816543, 0.20802912, 0.46413782, 0.7360495, 0.64456964, 0.13146874,
            0.9588753, 0.9741788, 0.5704002, 0.18771772, 0.81027585, 0.91661334, 0.9959894,
            0.4807955, 0.9178668, 0.03629474, 0.64449096, 0.99117136, 0.71227604, 0.89240646,
            0.17446654, 0.08190992, 0.05446685, 0.5360965, 0.32672238, 0.7402852, 0.5044609,
            0.83290285, 0.6618847, 0.96701485, 0.86146384, 0.73197967, 0.8654456, 0.7295462,
            0.2012408, 0.4823058, 0.7614271, 0.7941408, 0.39574632, 0.16573429, 0.45011836,
            0.92738414, 0.6498168, 0.09648224,
        ],
    )
    .unwrap();
    let conv_layer29 = ConvolutionLayer::new(kernel29, 1, Padding::Valid);
    let target_output29: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            1.3896276, 2.1262553, 3.22375, 3.9509559, 5.5288415, 5.0414734, 4.248557, 4.4546413,
            5.386165, 4.104143, 4.4798126, 4.3833656, 5.7147474, 5.2831664, 5.59144, 4.1266007,
            3.7730417, 2.1865423, 1.6580989, 2.7410104, 3.1239133, 4.9948664, 7.6318073, 10.269714,
            8.469382, 10.034382, 9.616427, 9.25033, 8.145862, 8.39525, 8.233624, 10.004652,
            10.067809, 10.000258, 7.520636, 6.1459765, 2.8283393, 1.2706327, 3.025363, 5.2317653,
            7.999004, 10.430243, 13.364353, 13.53104, 13.806629, 13.045711, 11.197292, 11.308405,
            12.882667, 13.204811, 13.770806, 14.605236, 14.568189, 10.852091, 9.071342, 5.5440903,
            2.4965308, 2.9894457, 5.8087316, 9.908184, 12.466374, 16.032076, 16.088505, 17.0652,
            15.01418, 14.521078, 12.548635, 13.967673, 14.614808, 15.942648, 16.081797, 15.908898,
            10.911036, 9.918024, 5.417539, 2.7317028, 3.645593, 6.4812784, 13.489252, 14.4700365,
            20.299541, 18.93867, 19.679619, 16.067657, 17.825722, 15.886193, 17.347162, 18.116652,
            19.804045, 18.802082, 20.359802, 16.088425, 12.606945, 6.1127486, 3.9710636, 4.1106153,
            6.139283, 12.7574005, 15.849987, 20.695192, 20.533133, 19.480173, 15.2617655, 17.90098,
            17.709236, 17.321552, 17.574135, 17.911901, 18.111507, 18.485796, 15.577448, 10.857793,
            5.6710663, 3.1237218, 3.6497326, 7.007007, 13.088913, 15.870274, 19.899858, 18.11002,
            18.811901, 15.8913145, 17.576021, 16.69962, 16.846497, 16.329268, 18.241796, 18.012714,
            17.947577, 15.729027, 13.872509, 7.4593673, 4.1229815, 3.4344306, 6.9342303, 11.894641,
            14.1774235, 18.730349, 17.444582, 19.837664, 17.771572, 17.788683, 14.846143,
            16.402567, 16.007292, 17.49328, 17.39004, 17.60967, 13.627757, 11.448881, 6.5923915,
            4.1549935, 3.0755227, 5.7920165, 12.274501, 14.131013, 18.23751, 17.679535, 18.078138,
            18.27235, 17.513296, 15.505639, 15.202607, 16.001738, 15.752275, 18.15208, 19.2934,
            15.5760975, 13.0597, 6.9743967, 4.0505853, 3.2892985, 4.4479523, 11.411952, 13.118619,
            18.557774, 18.155918, 20.050114, 18.259287, 18.501904, 15.505734, 15.625615, 16.391106,
            15.788298, 16.411089, 19.004854, 15.389865, 12.897179, 6.2895775, 4.7819247, 2.539051,
            3.131904, 7.9913187, 8.542729, 13.428492, 14.125078, 15.393861, 13.236709, 12.76648,
            12.322573, 12.026278, 10.755805, 11.941683, 11.837698, 13.369837, 11.151683, 9.779329,
            4.747903, 2.7979417, 1.2787967, 2.4042308, 5.5976453, 6.450497, 8.71416, 9.286871,
            10.929421, 9.264945, 8.9915905, 9.445925, 7.3232613, 8.84033, 8.283665, 8.236751,
            9.97522, 8.256805, 6.6841626, 2.9909399, 2.5073729, 0.87993705, 1.3814634, 3.030476,
            3.3974965, 5.416438, 5.246241, 6.822501, 5.5944843, 5.203351, 5.1000485, 4.8001637,
            3.6391098, 4.164108, 4.6156654, 6.675166, 3.8124304, 4.0873394, 2.1183681, 1.8841686,
            0.3689562, 0.7767143, 1.6446476, 2.1339698, 3.334547, 2.747314, 4.3258367, 3.479206,
            3.5380366, 3.5179715, 2.8472772, 2.3582258, 3.3618424, 2.5060928, 3.3454762, 2.3689804,
            3.0556016, 1.2466921, 1.0885652, 1.2590234, 1.7488825, 3.5664663, 3.260742, 4.680674,
            4.80799, 4.206179, 3.9697268, 3.876916, 3.5650659, 4.1408315, 3.756471, 5.094893,
            3.9569666, 4.9769163, 3.6135793, 3.2265358, 1.5508714, 1.3319997, 2.096623, 4.0447297,
            4.983284, 6.395335, 8.273833, 7.988961, 8.207192, 8.43254, 7.7545633, 6.306172,
            7.3607244, 7.6154647, 8.4588585, 8.422875, 7.840356, 6.2013674, 4.115104, 3.1304052,
            0.8046937, 1.9761336, 3.8644037, 7.0966907, 9.987401, 12.252686, 11.080714, 12.466971,
            11.965722, 11.444605, 10.182205, 10.537387, 11.526364, 12.5943365, 13.435516, 12.94602,
            10.751045, 9.433819, 5.2908497, 2.9241424, 2.3604856, 5.4291234, 9.592922, 14.232534,
            19.106478, 17.959349, 20.251717, 16.975624, 17.042822, 14.286607, 15.925527, 16.041937,
            17.445267, 18.651608, 18.322449, 15.498738, 12.26926, 7.6076527, 3.6975133, 3.2944298,
            7.44084, 13.288299, 16.777481, 23.290405, 22.331556, 22.952824, 21.070835, 19.999666,
            18.652239, 20.532906, 20.438194, 21.702929, 22.23533, 21.913277, 18.93483, 14.767029,
            9.266512, 4.8465405, 3.9489827, 7.2367115, 12.400176, 16.958836, 22.159058, 22.442253,
            22.380838, 20.054045, 19.35712, 18.978237, 19.85127, 19.791185, 21.867785, 22.045462,
            20.559694, 17.118101, 14.272659, 9.236796, 3.7158275, 3.1020362, 7.013409, 11.719347,
            16.745182, 22.81931, 21.927088, 22.364462, 20.40273, 17.91546, 17.970156, 18.842566,
            18.095041, 20.40865, 20.63147, 20.705465, 18.455618, 15.258523, 9.685355, 4.7694325,
            3.0841823, 6.2874465, 12.539743, 18.525272, 22.502058, 22.188494, 21.49743, 19.929396,
            19.513905, 19.186924, 18.697723, 18.884058, 19.63184, 19.926138, 20.357038, 17.055979,
            14.136407, 9.038735, 4.71861, 3.0784578, 7.074618, 12.045387, 16.39323, 22.792995,
            20.65646, 20.805294, 20.893827, 20.170105, 18.135939, 19.028057, 17.675766, 19.616053,
            19.035643, 19.921032, 18.404785, 14.383375, 9.264023, 5.0947423, 3.645782, 5.739526,
            11.499033, 15.578504, 20.682999, 20.121622, 22.805141, 21.634436, 20.864176, 18.669767,
            17.937872, 17.864244, 19.201975, 17.475359, 21.1181, 18.574312, 15.809435, 10.145807,
            5.38951, 2.3335268, 4.2509055, 7.4020386, 11.2450075, 15.493553, 15.378874, 18.117073,
            18.107208, 16.471733, 14.867714, 14.528376, 14.005642, 13.76179, 15.588381, 16.393608,
            14.894791, 12.716799, 8.62367, 4.504219, 1.4406958, 2.723871, 5.27746, 8.598063,
            12.389746, 13.092946, 14.693125, 14.343607, 13.466463, 11.845832, 11.079137, 11.75129,
            11.48998, 11.543063, 13.259773, 11.348047, 10.428321, 6.3604503, 3.7909727, 1.2305305,
            2.6425319, 3.9487407, 6.1692934, 9.5923195, 9.750059, 10.099015, 9.894562, 9.4335,
            8.004705, 8.404664, 7.61976, 7.648038, 8.092116, 9.026863, 7.4225864, 6.6260653,
            4.2065926, 2.427473, 0.67796063, 1.4311876, 2.4498048, 2.8119087, 4.0427785, 4.7253346,
            4.3606796, 4.308516, 4.8058248, 3.9159894, 3.8125677, 3.4855182, 2.9619117, 3.2886312,
            4.32555, 2.9065557, 2.3909006, 1.7205365, 1.0752563,
        ],
    )
    .unwrap();
    let current_output29: Array3<f32> = conv_layer29.convolve(&test_input29);

    assert!(
        arr_allclose(&current_output29, &target_output29),
        "{:?} was not equal to {:?}",
        current_output29,
        target_output29
    );

    let test_input30 = Array::from_shape_vec(
        (3, 10, 15),
        vec![
            0.52886575, 0.01740899, 0.19255765, 0.6458292, 0.19123401, 0.8210748, 0.78315556,
            0.3958118, 0.3110578, 0.47715545, 0.29922554, 0.45532396, 0.42382213, 0.42575222,
            0.56597984, 0.38580757, 0.45498174, 0.68482727, 0.9714122, 0.9165496, 0.89789516,
            0.9988615, 0.749954, 0.2109633, 0.25951192, 0.64143604, 0.6979411, 0.918334,
            0.65583056, 0.5254386, 0.17987564, 0.04420354, 0.07644754, 0.6770185, 0.02457761,
            0.19219191, 0.8623231, 0.08402257, 0.31468204, 0.40743572, 0.98625356, 0.5906839,
            0.6265308, 0.59731364, 0.21510182, 0.57183194, 0.901779, 0.9705775, 0.03424489,
            0.78139436, 0.55354595, 0.70381683, 0.47117358, 0.95235467, 0.33689418, 0.47262585,
            0.33963647, 0.530577, 0.0421344, 0.59682316, 0.93284744, 0.05644235, 0.5569182,
            0.6096802, 0.00810335, 0.7324421, 0.7327517, 0.38904786, 0.841237, 0.9108226,
            0.5435749, 0.7924024, 0.03436404, 0.649227, 0.5530898, 0.5538213, 0.8170877, 0.9940746,
            0.30411443, 0.43357348, 0.907485, 0.67047435, 0.9518084, 0.327034, 0.09215528,
            0.03004104, 0.28787526, 0.16794387, 0.8576224, 0.88640976, 0.04009474, 0.63763183,
            0.16722608, 0.5954703, 0.974773, 0.83975345, 0.51589406, 0.8149961, 0.9410913,
            0.71259856, 0.57682234, 0.39005476, 0.0324995, 0.7692697, 0.5621936, 0.40678144,
            0.48859268, 0.80427086, 0.17138262, 0.7445628, 0.83644694, 0.42324457, 0.72855157,
            0.9749447, 0.15980154, 0.6028544, 0.06674533, 0.9988898, 0.12467484, 0.03754441,
            0.69940186, 0.9558617, 0.14952931, 0.4838307, 0.36363718, 0.26352006, 0.45603734,
            0.2223024, 0.78135294, 0.88537115, 0.75166476, 0.31640235, 0.3866544, 0.48876184,
            0.8870456, 0.10377176, 0.71169674, 0.65762943, 0.2840905, 0.11980431, 0.05043373,
            0.44856635, 0.0995127, 0.66721714, 0.99523526, 0.38974792, 0.0062347, 0.25642252,
            0.7978388, 0.6872969, 0.38637865, 0.7394339, 0.89828086, 0.9000991, 0.29393503,
            0.37299708, 0.7116838, 0.9729085, 0.51860094, 0.8672759, 0.03071198, 0.62365896,
            0.6566605, 0.9792835, 0.7201858, 0.46124813, 0.01468375, 0.04436485, 0.5436191,
            0.8299819, 0.18899626, 0.02270102, 0.4278886, 0.6254018, 0.02546183, 0.7372767,
            0.6756809, 0.03686747, 0.16345957, 0.2864706, 0.12798376, 0.97041535, 0.14767134,
            0.19173194, 0.7269523, 0.3308745, 0.48967764, 0.7331613, 0.7701771, 0.9474348,
            0.6862598, 0.22131853, 0.98268986, 0.4896969, 0.6619162, 0.2885029, 0.08790161,
            0.63548344, 0.7871616, 0.56886005, 0.3848688, 0.5216492, 0.61789876, 0.99155945,
            0.1660726, 0.45400557, 0.7927198, 0.519493, 0.1856097, 0.94973904, 0.55421734,
            0.44071785, 0.20264524, 0.4809522, 0.2299158, 0.72079855, 0.33685237, 0.7066437,
            0.41910258, 0.53551847, 0.68504053, 0.75572896, 0.22152406, 0.3867441, 0.5252634,
            0.6835575, 0.00781578, 0.7451846, 0.59167516, 0.64922994, 0.53241575, 0.7195878,
            0.787326, 0.41490155, 0.57506335, 0.17358404, 0.6447292, 0.5467595, 0.77786934,
            0.47692633, 0.542522, 0.29794613, 0.12909189, 0.85711455, 0.8507247, 0.863551,
            0.85847044, 0.38785052, 0.08583226, 0.20553346, 0.47941732, 0.54092985, 0.59161955,
            0.01657799, 0.00591142, 0.6293653, 0.9232842, 0.03818879, 0.42277342, 0.21179068,
            0.19754058, 0.26319242, 0.42772555, 0.95646167, 0.62844396, 0.13638273, 0.83398765,
            0.45113885, 0.23401077, 0.8939974, 0.7832372, 0.08868469, 0.13567366, 0.8551138,
            0.20012486, 0.21221249, 0.48977068, 0.7580914, 0.34888557, 0.24929681, 0.51153195,
            0.7000697, 0.90997946, 0.43697715, 0.13939072, 0.03825287, 0.12412303, 0.80387026,
            0.03209783, 0.30807668, 0.12723272, 0.2624294, 0.08031525, 0.17361915, 0.6581009,
            0.8524115, 0.9864116, 0.35544556, 0.9968594, 0.01807762, 0.5918471, 0.56132907,
            0.18568946, 0.14083895, 0.9709682, 0.6932929, 0.9060589, 0.37787062, 0.82105917,
            0.86623365, 0.03382622, 0.149902, 0.45536265, 0.01637395, 0.13000993, 0.7345686,
            0.3311825, 0.5904201, 0.94970685, 0.68421304, 0.59009004, 0.8618434, 0.6528449,
            0.8017509, 0.02745248, 0.22952433, 0.7017341, 0.21967116, 0.50405574, 0.8577092,
            0.37675846, 0.407479, 0.6243532, 0.46982294, 0.23975594, 0.396583, 0.19221619,
            0.19351119, 0.68409836, 0.16978115, 0.11779778, 0.04202804, 0.6135814, 0.5199412,
            0.8715136, 0.50771165, 0.4924265, 0.45100802, 0.08637597, 0.40288508, 0.6487766,
            0.7941249, 0.6924839, 0.7086247, 0.68587416, 0.4621445, 0.7496024, 0.91085595,
            0.162838, 0.45783094, 0.4387137, 0.14814438, 0.04074387, 0.47096238, 0.21848392,
            0.6820497, 0.93032444, 0.6656503, 0.5914259, 0.4931909, 0.3623532, 0.3925273,
            0.7389564, 0.334363, 0.77226716, 0.3882179, 0.97707474, 0.52904606, 0.80317616,
            0.6601235, 0.6945486, 0.9020445, 0.96140546, 0.72119236, 0.42119923, 0.00080285, 0.906,
            0.75012404, 0.33486333, 0.7414227, 0.35029164, 0.03641145, 0.1589417, 0.24522811,
            0.67588323, 0.1023455, 0.86474276, 0.7663677, 0.8406605, 0.24283217, 0.926685,
            0.88133335, 0.22166131, 0.10074908, 0.45705855, 0.4260665, 0.2502391, 0.36219996,
            0.94081557, 0.71635485, 0.82449114, 0.7948271, 0.89472646, 0.6503069, 0.6528909,
            0.39407018, 0.7112734, 0.37628287, 0.5302998, 0.16035181, 0.22348203, 0.38749498,
            0.07900955, 0.88709897, 0.18496908, 0.04832328, 0.9727279, 0.9952911, 0.42161968,
            0.24824439, 0.5740834, 0.9271626, 0.52299017, 0.4668421, 0.15193757, 0.83194524,
            0.22000751, 0.9246838, 0.19625777, 0.13390501, 0.9824148, 0.00958934, 0.38621363,
            0.21235856, 0.6043816, 0.36282185, 0.53632265, 0.8767314, 0.93126136, 0.53289115,
        ],
    )
    .unwrap();

    let kernel30: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.29115057, 0.9016004, 0.1237447, 0.8414026, 0.43052003, 0.7705071, 0.02350398,
            0.72805625, 0.25325528, 0.43928608, 0.5532616, 0.54948294, 0.5457807, 0.7466225,
            0.15833755, 0.09648368, 0.5469399, 0.02905989, 0.01035187, 0.36822248, 0.82000685,
            0.8991906, 0.809669, 0.23396358, 0.93492836, 0.09607173, 0.7881427, 0.70287865,
            0.11982161, 0.84957284, 0.86541873, 0.7684956, 0.97035193, 0.13881885, 0.6592098,
            0.95970744, 0.02591292, 0.43179563, 0.8505226, 0.8886515, 0.16584113, 0.37939194,
            0.84309703, 0.3031956, 0.15206665, 0.7718611, 0.6288754, 0.03910594, 0.25060338,
            0.8471453, 0.9291924, 0.20579426, 0.5642258, 0.10823907, 0.67671156, 0.17621124,
            0.91710156, 0.34751764, 0.0617022, 0.19666669, 0.55223054, 0.42192397, 0.24281646,
            0.9156915, 0.6841967, 0.13684596, 0.2165768, 0.25471458, 0.8194214, 0.46758506,
            0.00677892, 0.94870436, 0.50459677, 0.22599821, 0.49949893, 0.7955641, 0.11782064,
            0.4909772, 0.26861846, 0.2562911, 0.6904003, 0.85411555, 0.9530135, 0.97593206,
            0.6909486, 0.16051039, 0.86921203, 0.7374898, 0.42966273, 0.06233076, 0.98106205,
            0.38010216, 0.8896496, 0.8856615, 0.04919559, 0.48767114, 0.30023637, 0.14540058,
            0.35538375, 0.96549, 0.685791, 0.05957514, 0.00513179, 0.60190606, 0.9386545,
            0.34976122, 0.02124477, 0.07550302, 0.5218702, 0.61787504, 0.01258456, 0.4866433,
            0.5303815, 0.338509, 0.41375995, 0.68078685, 0.95164126, 0.04810897, 0.05187115,
            0.6929648, 0.70951277, 0.71587545, 0.90726244, 0.73213947, 0.10857984, 0.24262014,
            0.8304564, 0.96346223, 0.6963788, 0.7209084, 0.21581873, 0.11364035, 0.14497681,
            0.79595083, 0.46187317, 0.97428215, 0.9635667, 0.89710975, 0.5958763, 0.10668167,
            0.0038069, 0.97265726, 0.92559075, 0.5123032, 0.85146296, 0.4362493, 0.308687,
            0.52693003, 0.68476427, 0.04954484,
        ],
    )
    .unwrap();
    let conv_layer30 = ConvolutionLayer::new(kernel30, 1, Padding::Valid);
    let target_output30: Array3<f32> = Array::from_shape_vec(
        (2, 14, 19),
        vec![
            0.7410395, 1.4438543, 2.0573978, 2.589202, 4.2957344, 3.5726151, 4.2233567, 4.5592694,
            4.35972, 4.5051355, 3.964469, 3.476006, 2.7096088, 3.2467139, 3.0865264, 3.3345537,
            2.139297, 1.2969372, 1.020872, 1.7423425, 2.833629, 4.7892466, 5.565966, 7.224223,
            8.732402, 9.205361, 9.411382, 9.387044, 8.617069, 7.9151106, 6.9751673, 7.567283,
            7.7232976, 6.912747, 5.3009887, 4.200146, 2.50811, 1.742965, 1.9482484, 4.1318665,
            5.9105964, 8.071718, 11.505796, 10.865749, 10.805553, 13.13782, 13.046311, 12.050196,
            12.539645, 10.953964, 11.494803, 10.036416, 12.483425, 9.786927, 7.059428, 3.9216595,
            2.7115588, 2.3483005, 4.4702644, 7.3840456, 9.888975, 12.9772, 14.105303, 15.169539,
            15.349877, 16.077703, 15.536544, 15.170933, 14.450934, 14.49428, 13.121239, 13.53234,
            11.102398, 8.880833, 4.2989893, 3.8737714, 3.3205652, 6.7065845, 10.876982, 12.5612335,
            17.91516, 16.959372, 19.800463, 20.998104, 20.64114, 21.199394, 20.782072, 19.306644,
            20.47771, 18.389633, 18.222744, 15.248845, 10.464828, 6.44372, 4.665041, 3.7783113,
            6.1706843, 9.879328, 14.0312605, 17.501862, 18.108095, 20.64595, 19.810001, 21.684645,
            20.243616, 20.10558, 20.309416, 17.92507, 16.636171, 18.34416, 15.818336, 11.284544,
            7.3820086, 4.98723, 3.271551, 6.8137546, 10.379653, 11.844966, 17.292753, 17.78232,
            19.864346, 21.303246, 21.991081, 21.00987, 22.19003, 18.863657, 19.16164, 17.686686,
            18.699846, 13.627026, 11.359524, 7.114382, 4.805353, 3.612309, 6.606248, 10.843431,
            13.890547, 17.05667, 19.746958, 19.67031, 21.434496, 23.648369, 23.043955, 20.877508,
            20.70313, 20.289038, 17.161766, 16.572727, 14.5286255, 10.952662, 5.1556163, 4.802041,
            3.7801862, 7.406555, 10.107713, 11.868011, 17.739717, 18.19287, 18.886814, 21.912151,
            21.680906, 22.146076, 20.243244, 20.217247, 19.735188, 17.433699, 18.376575, 14.945326,
            9.217929, 5.818461, 4.1124425, 4.0524344, 6.8966, 9.9721155, 13.683312, 17.039648,
            16.5788, 18.109823, 19.400803, 19.607927, 19.877846, 19.490025, 20.252796, 19.377798,
            19.691515, 19.398039, 14.051805, 9.657172, 7.436391, 3.5962567, 2.2370968, 5.0876336,
            7.706977, 9.806122, 11.990442, 12.913661, 14.762088, 14.046486, 14.700025, 14.763443,
            16.61964, 15.433885, 15.989432, 16.000635, 14.828848, 9.818344, 7.8563595, 5.372076,
            2.963248, 2.2137935, 3.6991656, 6.3917575, 7.7632613, 7.4373627, 10.224356, 8.361892,
            7.9144707, 9.656335, 11.755553, 11.728033, 11.460385, 11.665728, 12.18469, 11.594334,
            8.189155, 6.897416, 2.6355784, 1.9754336, 1.2997029, 2.3370242, 3.5799487, 4.814273,
            6.2857485, 5.293008, 4.627833, 5.916305, 5.8498936, 5.9963565, 6.665719, 7.1967716,
            7.5850883, 8.351481, 7.9627905, 6.8782797, 4.6638985, 2.5754013, 1.3090662, 0.6401614,
            0.795151, 2.6491816, 2.0895991, 2.9684243, 2.961646, 3.0651214, 2.0819793, 1.9990274,
            3.0524693, 3.4085414, 3.8894243, 4.4576807, 5.8171353, 4.4897637, 3.7357671, 2.3490844,
            2.56057, 0.92406636, 0.82931566, 1.2851379, 1.8724436, 2.9955873, 2.9163744, 3.3529801,
            5.2174554, 4.277328, 4.3023376, 4.4256, 4.2776732, 3.691907, 3.4838815, 3.4023342,
            3.1899667, 2.361831, 2.1822567, 1.9556336, 0.8437098, 1.3783087, 2.0780518, 3.4354222,
            5.5945425, 8.600262, 8.153212, 9.523809, 10.341217, 9.906155, 8.320542, 8.368834,
            8.086938, 6.944449, 6.1442623, 6.651868, 6.5335126, 5.065323, 3.230348, 1.5592942,
            1.8371103, 2.974261, 4.9945855, 7.9960527, 10.755111, 10.922878, 13.651982, 13.851387,
            13.433364, 12.264972, 11.851264, 11.503228, 10.806219, 11.72732, 11.436076, 9.123275,
            8.025761, 4.9241505, 2.3865283, 2.8039575, 5.184079, 8.747981, 11.867204, 15.582656,
            16.335976, 17.662533, 18.778011, 19.44359, 16.585312, 16.0304, 16.521542, 16.334227,
            15.036245, 16.08941, 13.313018, 9.9688425, 6.975964, 3.577788, 4.004504, 6.5876026,
            9.342705, 15.139031, 17.943626, 18.423485, 20.351873, 21.38507, 22.240685, 22.383482,
            20.33401, 20.875088, 20.392685, 17.903872, 21.07798, 15.6678095, 12.21365, 8.02011,
            4.685636, 3.7313313, 6.851941, 10.43056, 15.4499855, 17.736328, 18.761087, 19.843044,
            21.744986, 22.424395, 21.896292, 21.081394, 21.01204, 18.821789, 18.609476, 20.679296,
            15.360755, 13.175529, 8.839097, 4.803008, 2.9195075, 6.964612, 10.014873, 15.067001,
            18.26129, 18.016695, 20.261595, 22.844084, 24.337658, 24.734474, 22.892344, 21.554054,
            20.377756, 17.638754, 19.884066, 16.824192, 12.604367, 8.213149, 3.8217506, 3.5090592,
            7.2713957, 10.186337, 14.625412, 18.069927, 19.831179, 22.171211, 23.50195, 26.092823,
            25.281223, 22.63345, 22.624836, 19.788496, 17.360552, 19.304913, 16.799397, 10.550782,
            7.348514, 3.8009143, 3.8531134, 6.764957, 9.222271, 15.636685, 19.10822, 17.884108,
            21.834446, 23.515236, 23.766958, 23.989565, 23.657091, 22.129725, 19.697416, 19.07921,
            19.570927, 15.888687, 10.486763, 8.238263, 3.427664, 2.8834305, 5.913555, 11.3632765,
            14.264608, 17.402952, 19.306606, 20.91605, 21.344893, 20.12224, 22.584587, 21.901102,
            21.997513, 19.34415, 19.508472, 19.370441, 16.267038, 11.138719, 7.1685762, 3.3559668,
            2.8249624, 4.97896, 8.170251, 11.462778, 13.687437, 15.432834, 14.121873, 16.224266,
            15.73448, 16.98356, 16.598988, 18.04139, 15.982432, 16.360723, 15.630762, 13.866339,
            8.868688, 5.5983877, 2.0630465, 2.669795, 4.6726017, 6.801762, 8.914391, 10.900207,
            9.272751, 9.640966, 10.334348, 10.902438, 12.0076275, 11.366633, 13.585503, 13.104052,
            11.968269, 12.20539, 10.220226, 7.8525343, 5.230629, 1.0597309, 1.7057984, 2.880504,
            4.3005285, 5.7235007, 6.221253, 5.361586, 6.5008025, 5.6065035, 4.911099, 6.9884963,
            7.9169974, 7.8382373, 8.218443, 9.202934, 8.549405, 6.6784844, 4.157647, 3.3457975,
            1.5014908, 0.6622583, 0.93710506, 2.3708162, 2.4817607, 1.649349, 3.3157423, 2.0559986,
            1.6373147, 2.0042849, 2.3787777, 3.5225315, 3.1343858, 4.001771, 5.0601006, 4.058533,
            2.43885, 1.9597474, 1.4247596, 0.6919431,
        ],
    )
    .unwrap();
    let current_output30: Array3<f32> = conv_layer30.convolve(&test_input30);

    assert!(
        arr_allclose(&current_output30, &target_output30),
        "{:?} was not equal to {:?}",
        current_output30,
        target_output30
    );

    let test_input31 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.8648635, 0.24502176, 0.9563036, 0.8091006, 0.21886946, 0.0567609, 0.07057995,
            0.16586034, 0.08248742, 0.28810686, 0.24666145, 0.7280006, 0.21720299, 0.2797197,
            0.1429008, 0.12540661, 0.16514674, 0.79326254, 0.21495369, 0.20266142, 0.5993377,
            0.5696813, 0.6916412, 0.32460627, 0.9414587, 0.0734322, 0.8068955, 0.07320249,
            0.9129043, 0.860546, 0.14726785, 0.5177399, 0.26826426, 0.36311296, 0.6151039,
            0.6325487, 0.8320421, 0.48682922, 0.21009445, 0.04975929, 0.80676097, 0.7848971,
            0.70026565, 0.9457111, 0.85440516, 0.7180487, 0.5517275, 0.8578678, 0.23224549,
            0.02310899, 0.2598548, 0.9800414, 0.72586274, 0.22645572, 0.90784466, 0.534928,
            0.75128937, 0.46953654, 0.7742914, 0.49730703, 0.8848362, 0.38707262, 0.9234643,
            0.79674083, 0.86324733, 0.32076064, 0.3920287, 0.6946018, 0.24372894, 0.4939616,
            0.5965326, 0.11160661, 0.09670109, 0.39188403, 0.5604396, 0.2022228, 0.5031573,
            0.9767708, 0.39591292, 0.9079947, 0.65592414, 0.5572757, 0.07000257, 0.30442452,
            0.77393323, 0.2155859, 0.8007856, 0.6095338, 0.68177587, 0.5637177, 0.70609355,
            0.96067435, 0.91396964, 0.04093061, 0.25447014, 0.21445233, 0.32952574, 0.7740049,
            0.21258484, 0.6204497, 0.8391098, 0.97274446, 0.7944709, 0.82454914, 0.50744605,
            0.6451747, 0.14626299, 0.7351389, 0.10655332, 0.77344525, 0.553476, 0.16894332,
            0.89767647, 0.203828, 0.75384825, 0.758624, 0.17905368, 0.2860684, 0.6444675,
            0.5231733, 0.02075461, 0.45745206, 0.01996619, 0.39505485, 0.39265913, 0.1213429,
            0.825869, 0.85618263, 0.7577091, 0.3459607, 0.9557201, 0.9293787, 0.07907034,
            0.41537428, 0.85995775, 0.9160312, 0.26174, 0.31216502, 0.7373654, 0.2825182,
            0.9381195, 0.62593824, 0.29817143, 0.2641736, 0.6251491, 0.06003402, 0.06863046,
            0.66786885, 0.73104405, 0.23246141, 0.3216597, 0.40264118, 0.99361944, 0.03882129,
            0.60990226, 0.6618832, 0.7937507, 0.53550744, 0.7804362, 0.5908287, 0.5222477,
            0.171798, 0.75876254, 0.32153466, 0.90698326, 0.1332323, 0.6010551, 0.81028926,
            0.6555247, 0.51127625, 0.7477862, 0.87416846, 0.62494177, 0.70959914, 0.6630958,
            0.37875828, 0.4726575, 0.12168032, 0.84286946, 0.60123307, 0.7902299, 0.33639956,
            0.1295481, 0.33253834, 0.16333707, 0.45462114, 0.9793079, 0.875736, 0.00543618,
            0.45436794, 0.268819, 0.6777965, 0.8685083, 0.24649319, 0.35102448, 0.8317649,
            0.10098601, 0.12133782, 0.50588506, 0.45685568, 0.09913059, 0.2510396, 0.09967189,
            0.16055934, 0.96178347, 0.6883946, 0.66844714, 0.46234563, 0.328285, 0.99242496,
            0.11227968, 0.42852715, 0.7350134, 0.95016545, 0.1932244, 0.9673775, 0.24141203,
            0.75072336, 0.49899355, 0.11416891, 0.12978615, 0.80415183, 0.17522074, 0.9932483,
            0.07845373, 0.30105925, 0.87208086, 0.21871181, 0.73465174, 0.22369012, 0.6682944,
            0.17275229, 0.3533166, 0.5472081, 0.43991742, 0.3237903, 0.16511486, 0.780079,
            0.20005976, 0.8187329, 0.46725455, 0.29916614, 0.972841, 0.4275515, 0.08197373,
            0.11806071, 0.5958368, 0.6388251, 0.3401532, 0.28326756, 0.63256073, 0.7486978,
            0.53723675, 0.37664893, 0.7913009, 0.35058063, 0.05523287, 0.07301666, 0.97564507,
            0.61317027, 0.21154444, 0.9486215, 0.5222088, 0.13832045, 0.9633764, 0.01639629,
            0.19411111, 0.04715753, 0.31424382, 0.44769424, 0.10706459, 0.44355088, 0.71309346,
            0.5469934, 0.6052618, 0.38917127, 0.88367033, 0.4407754, 0.73792094, 0.14433429,
            0.85192674, 0.02097251, 0.9563302, 0.45995143, 0.10583407, 0.5678417, 0.10541193,
            0.87573344, 0.12863557, 0.79587996, 0.53403527, 0.2113896, 0.6925418, 0.43096247,
            0.6965461, 0.6987717, 0.9816463, 0.6430677, 0.65803695, 0.7858138, 0.5967798,
            0.7135809, 0.27493003, 0.4241894, 0.74957037, 0.31648433, 0.35538703, 0.9107666,
            0.07774146, 0.07081332, 0.15884496, 0.16601218, 0.40750048, 0.24065089, 0.4561631,
            0.0730514, 0.20042138, 0.61555564, 0.59598464, 0.8523459, 0.39690518, 0.9011878,
            0.6454708, 0.92651147, 0.21866481, 0.2656954, 0.6983828, 0.6426804, 0.43912458,
            0.0920186, 0.24951272, 0.39910504, 0.04226355, 0.03372582, 0.35070628, 0.8023284,
            0.34594545, 0.59496605, 0.68560296, 0.49572426, 0.4114992, 0.17057472, 0.7508676,
            0.9665724, 0.07823556, 0.6794208, 0.03686264, 0.2815227, 0.8644135, 0.40417364,
            0.7969972, 0.11597095, 0.29483116, 0.43114743, 0.6382897, 0.5840903, 0.66343355,
            0.26003668, 0.83035487, 0.83261126, 0.83485615, 0.3326272, 0.24397685, 0.21724485,
            0.5176914, 0.00598922, 0.8279213, 0.9753633, 0.31899843, 0.68334943, 0.10638801,
            0.28193727, 0.30331546, 0.44458252, 0.09437273, 0.18510874, 0.6317367, 0.7000181,
            0.00274565, 0.68718666, 0.578825, 0.35462692, 0.616583, 0.2751976, 0.05888736,
            0.42484936, 0.9651604, 0.213527, 0.5214844, 0.34419012, 0.23119006, 0.6806969,
            0.01715484, 0.19486532, 0.6507138, 0.17637333, 0.17714995, 0.25830767, 0.96206266,
            0.20731905, 0.05410179, 0.12974854, 0.69576323, 0.6722372, 0.78958917, 0.22394986,
            0.4686973, 0.27983865, 0.05932388, 0.08217912, 0.19400315, 0.92018247, 0.21455717,
            0.5881519, 0.5959824, 0.3016201, 0.82684654, 0.06193527, 0.10932652, 0.39186087,
            0.5791381, 0.519928, 0.68690145, 0.31554794, 0.9284058, 0.7799773, 0.57404125,
            0.633255, 0.23396462, 0.5666275, 0.6193624, 0.23979846, 0.01872301, 0.64512044,
            0.4484315, 0.57392234, 0.6379088, 0.15632313, 0.9590727, 0.8191361, 0.79628325,
            0.1876398, 0.1792817, 0.76093376, 0.04901551, 0.12188532, 0.75263584, 0.56340057,
            0.07880943, 0.55886114,
        ],
    )
    .unwrap();

    let kernel31: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.4816245, 0.3909372, 0.6338539, 0.41137746, 0.20412357, 0.76289177, 0.49030396,
            0.05624962, 0.8376677, 0.7489411, 0.92350286, 0.948173, 0.4890013, 0.00624331,
            0.00432913, 0.48294267, 0.29992157, 0.406034, 0.64294606, 0.25497472, 0.464108,
            0.06506247, 0.56834316, 0.9234758, 0.12433387, 0.25001067, 0.9758267, 0.7781154,
            0.13691516, 0.89087915, 0.9972559, 0.22074686, 0.9616415, 0.9647698, 0.6889985,
            0.03124781, 0.66253483, 0.34584802, 0.31388247, 0.8323405, 0.69736785, 0.29734898,
            0.7292857, 0.89269227, 0.5678819, 0.9903388, 0.5884459, 0.5700806, 0.18129697,
            0.08598603, 0.811496, 0.73773444, 0.30140767, 0.12168682,
        ],
    )
    .unwrap();
    let conv_layer31 = ConvolutionLayer::new(kernel31, 1, Padding::Valid);
    let target_output31: Array3<f32> = Array::from_shape_vec(
        (2, 17, 12),
        vec![
            1.0411409, 1.4302623, 2.379212, 1.9919691, 2.4064791, 1.631776, 1.7196208, 1.8936536,
            1.5256925, 1.5005908, 0.8390597, 0.43540084, 1.3993845, 2.1205084, 3.8360527,
            2.6086333, 3.5199003, 2.4133236, 2.7743125, 3.1882715, 3.7949562, 3.4729426, 1.2458055,
            0.66337055, 2.8532765, 4.856572, 7.9456887, 6.410789, 7.446801, 5.2695236, 5.82932,
            4.8782597, 6.319777, 5.670621, 3.1995301, 1.6519052, 2.5745234, 3.8720295, 5.474318,
            5.11867, 5.6657166, 4.4627137, 5.5846963, 5.900491, 6.916655, 6.4300585, 3.083175,
            1.7663003, 2.978559, 4.7122755, 7.3841605, 7.670146, 6.6901774, 6.879095, 6.644668,
            5.8950667, 6.713723, 5.965076, 3.4839945, 1.5999949, 2.3388133, 3.4968853, 4.9444,
            4.9633236, 5.4537024, 6.5584555, 7.667599, 7.0700984, 6.360614, 6.5977316, 3.3485966,
            1.7759178, 2.4006011, 4.5616083, 6.658113, 6.8631043, 8.57831, 8.079412, 6.688966,
            6.9233565, 5.779129, 6.7931547, 3.2704916, 1.5153365, 1.7439775, 4.2884865, 5.4465423,
            6.009739, 5.7997093, 6.5447626, 6.9088917, 7.444668, 7.0190015, 7.2919254, 4.554678,
            2.5035555, 2.6235476, 4.5538, 5.9132304, 6.333396, 5.3140078, 6.134472, 5.8167543,
            6.517187, 7.376148, 6.3992558, 3.6974304, 2.1315193, 2.4103932, 4.111211, 4.9488993,
            5.697706, 4.6062403, 3.8588443, 4.6697946, 6.176153, 6.9988174, 6.5078783, 3.3007815,
            2.3521023, 2.997224, 4.59397, 7.617828, 5.9246154, 5.685199, 4.9067755, 5.218958,
            5.896139, 5.735114, 6.6205006, 3.6675763, 1.9977685, 2.4736364, 5.0006804, 7.343142,
            6.4176674, 6.370898, 4.6723833, 5.0285263, 3.8063114, 4.880861, 5.490186, 3.3838468,
            1.6064553, 2.0804968, 4.466195, 6.366064, 6.585615, 8.35573, 6.4182596, 6.166696,
            5.216176, 5.960997, 5.166056, 2.708759, 1.5485036, 2.3926537, 4.5585485, 6.428088,
            6.2272177, 6.8622594, 6.225499, 7.169893, 5.716567, 5.9917507, 5.1779647, 3.3546603,
            1.8315554, 3.0655084, 3.7784953, 6.1412344, 5.386253, 5.8500466, 6.2747583, 7.2696977,
            7.296694, 7.2773995, 7.3960547, 4.000765, 1.923686, 2.7639728, 3.1601872, 5.0965986,
            3.1094775, 3.8995378, 4.814295, 4.461633, 5.137877, 4.1658816, 5.0607452, 3.2093804,
            1.7476251, 1.47055, 2.1376162, 3.3602748, 2.1185262, 2.6914651, 2.4211931, 2.3392785,
            2.4991503, 3.3469799, 3.1554816, 1.6533012, 1.0591441, 1.4770886, 2.402521, 3.8927908,
            3.9624019, 4.0828834, 2.7797709, 2.8065908, 2.9522507, 2.3436358, 2.654157, 1.4980202,
            0.76108116, 1.2760797, 2.613419, 4.8058953, 4.585967, 5.370487, 3.6012068, 4.0260606,
            4.805942, 5.194087, 5.740372, 3.1659803, 1.9444702, 2.8743854, 6.0591598, 8.515001,
            9.163534, 8.503306, 6.5154243, 6.6106467, 5.9366136, 7.660347, 7.4786024, 5.547619,
            2.5426748, 1.9337087, 4.7878838, 6.6846523, 6.2750907, 6.0448813, 6.3345375, 7.3039823,
            8.157011, 8.571213, 6.54808, 4.8511505, 2.302846, 2.6485884, 5.775198, 9.102464,
            8.944982, 8.038153, 8.440903, 7.156245, 8.370446, 8.102715, 7.157718, 4.0756087,
            1.6224729, 2.0242245, 3.7465227, 7.168925, 6.623257, 6.997883, 8.607473, 9.594792,
            8.561984, 8.154622, 7.5231304, 4.9808593, 2.683274, 3.166228, 4.7249207, 7.665287,
            8.944624, 9.543202, 8.208967, 9.08498, 8.121349, 7.993578, 7.576892, 4.381967,
            2.8528256, 2.0237331, 4.307522, 6.0893464, 6.307246, 7.2423606, 7.6796427, 8.144512,
            8.48273, 8.107628, 9.59565, 4.853631, 2.8747623, 3.01501, 5.135961, 6.7862134,
            6.713416, 6.658047, 7.0568314, 6.555832, 8.021081, 8.622588, 7.936426, 5.23266,
            2.59071, 2.3823185, 4.971304, 6.881837, 7.0324063, 5.997487, 4.6595874, 5.534241,
            6.7740808, 8.478584, 7.1391172, 5.512756, 2.4201632, 2.6440058, 5.943758, 8.385179,
            8.217866, 8.721477, 6.4543924, 6.429423, 6.260687, 6.5187106, 7.4224005, 4.5103273,
            2.5212886, 2.0359492, 5.877287, 8.834435, 8.108009, 7.7233486, 6.8666205, 6.896025,
            4.7685833, 5.352248, 6.367816, 4.630657, 2.4308507, 1.9006658, 4.773088, 7.3780484,
            8.307595, 8.722559, 7.3168864, 8.112684, 6.812307, 6.902586, 6.506159, 4.7859416,
            2.1176596, 2.9722095, 5.1254673, 7.5329423, 7.5003552, 7.426364, 8.455295, 8.159676,
            6.595497, 7.3466196, 7.611902, 5.2486105, 2.313562, 3.0445745, 4.8362036, 7.54207,
            6.881942, 6.8383765, 7.173195, 7.852047, 8.222467, 8.699017, 8.418407, 5.136925,
            2.5233965, 2.25363, 3.5634413, 4.115536, 3.2016258, 4.319854, 4.6421695, 4.6570606,
            3.975429, 4.2459598, 5.4837213, 3.1480958, 1.5905724, 1.457321, 2.4380667, 1.8317504,
            1.6049957, 2.2276053, 1.5359485, 1.5838008, 2.5001998, 2.8445985, 2.189581, 1.3168399,
            0.52151936,
        ],
    )
    .unwrap();
    let current_output31: Array3<f32> = conv_layer31.convolve(&test_input31);

    assert!(
        arr_allclose(&current_output31, &target_output31),
        "{:?} was not equal to {:?}",
        current_output31,
        target_output31
    );

    let test_input32 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.8672895, 0.45569643, 0.41169244, 0.230716, 0.6527877, 0.9535316, 0.16538836,
            0.31145656, 0.02828005, 0.14747888, 0.30263218, 0.9998127, 0.9264461, 0.46344218,
            0.4029006, 0.36729267, 0.36346474, 0.36422956, 0.7725577, 0.89565295, 0.5492495,
            0.12382696, 0.7948714, 0.2934778, 0.28533515, 0.4650447, 0.36790222, 0.66567504,
            0.81930286, 0.37452427, 0.06236777, 0.61082655, 0.94621384, 0.1944808, 0.09286012,
            0.7080163, 0.44260016, 0.2740555, 0.37098762, 0.21528777, 0.19037104, 0.7929086,
            0.48885155, 0.11583171, 0.2444331, 0.31950995, 0.82152086, 0.92018557, 0.6324256,
            0.8988874, 0.7919196, 0.63617104, 0.642465, 0.5914831, 0.63586736, 0.8462637,
            0.44348246, 0.4584158, 0.87631005, 0.6688897, 0.89464474, 0.36634243, 0.33335868,
            0.16760358, 0.6169529, 0.19301598, 0.06703918, 0.11021607, 0.46326014, 0.9099846,
            0.19569385, 0.22239834, 0.16384327, 0.9711869, 0.11606233, 0.49665624, 0.48572266,
            0.8352311, 0.8049802, 0.32960874, 0.79986304, 0.8312853, 0.11399209, 0.37213323,
            0.56118464, 0.99523085, 0.3857257, 0.49142754, 0.63120776, 0.9997972, 0.0841737,
            0.10170663, 0.31476194, 0.5850524, 0.20403187, 0.2778266, 0.6240293, 0.33923522,
            0.8554102, 0.94955045, 0.11740076, 0.9220868, 0.8472775, 0.49100837, 0.49978712,
            0.08288938, 0.49698648, 0.24435802, 0.51685953, 0.6813218, 0.5406228, 0.8402446,
            0.57455206, 0.21274436, 0.21751188, 0.6327846, 0.9325366, 0.08400947, 0.8396681,
            0.7454953, 0.8714838, 0.46964037, 0.5946748, 0.46486276, 0.46776876, 0.7749035,
            0.5702429, 0.00275485, 0.5455553, 0.7504094, 0.0516187, 0.7427081, 0.5231299,
            0.8063814, 0.27779007, 0.33038312, 0.94963986, 0.73109215, 0.21866089, 0.0114934,
            0.0989068, 0.926821, 0.48527932, 0.16351804, 0.3116739, 0.5386763, 0.3653472,
            0.8093628, 0.17813227, 0.4354284, 0.7089132, 0.9420309, 0.10524429, 0.89597744,
            0.3581413, 0.8442464, 0.6326036, 0.49300048, 0.88413817, 0.9037477, 0.00271136,
            0.98342794, 0.04954946, 0.787193, 0.7686151, 0.19857672, 0.17108533, 0.58195865,
            0.8838584, 0.16141163, 0.60231775, 0.294304, 0.14176327, 0.37438837, 0.10216843,
            0.17332368, 0.11517226, 0.3817901, 0.32803875, 0.6643417, 0.7733252, 0.947744,
            0.00787854, 0.13019027, 0.58464366, 0.70387626, 0.697838, 0.99696946, 0.8761452,
            0.5237107, 0.8381286, 0.45777786, 0.15208961, 0.56539786, 0.26558962, 0.00088664,
            0.05462804, 0.43966386, 0.47845423, 0.34291574, 0.69536626, 0.1036236, 0.68493664,
            0.841703, 0.14973171, 0.51744187, 0.2674213, 0.05020873, 0.8967645, 0.28862262,
            0.738402, 0.99305737, 0.6317803, 0.08334628, 0.5971739, 0.05311463, 0.3840044,
            0.05716072, 0.9456335, 0.31587508, 0.6932092, 0.91989446, 0.26697785, 0.1736736,
            0.20744501, 0.9865482, 0.94583005, 0.80740196, 0.3352269, 0.01231102, 0.06471063,
            0.7702817, 0.04418208, 0.05123908, 0.31676802, 0.02213015, 0.9998762, 0.34928933,
            0.7523395, 0.42995888, 0.895856, 0.68170774, 0.37262207, 0.7072854, 0.682487,
            0.69825464, 0.41573936, 0.80277765, 0.7722144, 0.5328812, 0.37460858, 0.9811295,
            0.5904251, 0.11250915, 0.58982396, 0.12515384, 0.2545693, 0.9257646, 0.14790155,
            0.86361974, 0.00816071, 0.16182604, 0.71637905, 0.5098158, 0.23436014, 0.27748674,
            0.0989435, 0.49678063, 0.3482415, 0.40149435, 0.44752908, 0.4844109, 0.58768094,
            0.8322659, 0.2263038, 0.9106096, 0.10668962, 0.9503608, 0.00645077, 0.01176434,
            0.36804476, 0.185258, 0.23739757, 0.09321253, 0.6142842, 0.9766592, 0.37697607,
            0.6303855, 0.6886716, 0.7045316, 0.9038667, 0.7685541, 0.09102922, 0.3052067,
            0.2785308, 0.85340834, 0.02803171, 0.38585195, 0.76870936, 0.15628383, 0.81502956,
            0.03257992, 0.29636487, 0.23406821, 0.6885466, 0.40710646, 0.68527246, 0.49084947,
            0.08669137, 0.6970686, 0.49293855, 0.9118095, 0.40840417, 0.20486033, 0.24171825,
            0.32654667, 0.3027954, 0.58513415, 0.80932313, 0.06084506, 0.91577756, 0.36349937,
            0.49541315, 0.7306092, 0.55541974, 0.3212567, 0.08391169, 0.47639692, 0.5654139,
            0.24304809, 0.78207755, 0.08051699, 0.84173137, 0.66277754, 0.6512211, 0.44558695,
            0.32629654, 0.17646311, 0.69403934, 0.44565287, 0.70450526, 0.96684873, 0.8550647,
            0.6370797, 0.7020013, 0.4422912, 0.8638695, 0.13879521, 0.52424467, 0.5377849,
            0.72673947, 0.5688153, 0.6256276, 0.26191136, 0.17741989, 0.89845973, 0.5524051,
            0.9414409, 0.9048843, 0.01719667, 0.43135417, 0.5723982, 0.86594313, 0.14621608,
            0.95570713, 0.8926391, 0.12217854, 0.03542557, 0.8012088, 0.9948361, 0.287212,
            0.645167, 0.34233773, 0.49766174, 0.47700465, 0.67733943, 0.3003492, 0.39818338,
            0.8549322, 0.21975358, 0.77274996, 0.82208914, 0.41363552, 0.16918235, 0.91666114,
            0.558943, 0.5093269, 0.6983236, 0.96101004, 0.86614877, 0.11358444, 0.69930184,
            0.11822087, 0.35515, 0.44291237, 0.9029227, 0.16815847, 0.07096831, 0.53853285,
            0.73666346, 0.674916, 0.38428995, 0.4929124, 0.43514693, 0.32562396, 0.60863686,
            0.17941345, 0.3601743, 0.31631762, 0.8700462, 0.81253463, 0.9968952, 0.8596117,
            0.02886825, 0.3830526, 0.84223384, 0.6051626, 0.97340894, 0.10386568, 0.4452185,
            0.90387195, 0.88147926, 0.34565842, 0.64309967, 0.70366824, 0.48822477, 0.92969257,
            0.14900696, 0.21402211, 0.07800543, 0.8195282, 0.2418856, 0.92642605, 0.3954864,
            0.71764106, 0.42897722, 0.8851262, 0.24837622, 0.69469833, 0.35201788, 0.51265216,
            0.4955361, 0.6430718, 0.49957812, 0.13845451, 0.9765559, 0.6471354, 0.5898562,
            0.8990035, 0.1745854,
        ],
    )
    .unwrap();

    let kernel32: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.86026084, 0.5816211, 0.30822515, 0.07629808, 0.85125345, 0.18523273, 0.94789124,
            0.98244303, 0.4664868, 0.93176335, 0.64147437, 0.39205092, 0.8465009, 0.8526771,
            0.6523331, 0.11517583, 0.1424162, 0.6945481, 0.5679988, 0.7184982, 0.06246058,
            0.5065825, 0.4098685, 0.8833122, 0.85233843, 0.9882022, 0.27290356, 0.47061768,
            0.897314, 0.02439791, 0.7161806, 0.5046985, 0.53135425, 0.73321646, 0.06972428,
            0.9941263, 0.53949803, 0.09359702, 0.42704046, 0.02412173, 0.18144442, 0.2849727,
            0.07861274, 0.20421812, 0.01063524, 0.05189181, 0.19160785, 0.32884195, 0.9533139,
            0.47525635, 0.68437326, 0.33750752, 0.5577621, 0.06917533,
        ],
    )
    .unwrap();
    let conv_layer32 = ConvolutionLayer::new(kernel32, 1, Padding::Valid);
    let target_output32: Array3<f32> = Array::from_shape_vec(
        (2, 17, 12),
        vec![
            1.8695704, 2.367421, 3.0676904, 2.0051181, 2.8359523, 3.061333, 3.3614845, 3.2494345,
            2.400836, 2.9297597, 1.3319265, 0.8380222, 2.0876381, 5.1389804, 6.6359653, 5.45902,
            6.110305, 5.3123803, 5.7476134, 5.4337006, 5.8493295, 5.924681, 3.1809328, 1.8818754,
            2.6819654, 5.787196, 8.656556, 7.5718107, 7.4937906, 6.9274645, 5.6406517, 6.9092627,
            7.5821934, 7.9405603, 6.503543, 2.488452, 2.7073698, 5.6322246, 8.188984, 6.813474,
            7.6593, 7.1677637, 6.1413155, 6.6276116, 7.8735714, 8.291009, 5.644993, 1.893501,
            2.90176, 6.2726417, 8.120705, 7.1821456, 7.795139, 6.174222, 6.5035796, 6.801,
            8.094605, 7.8345547, 5.2020574, 2.7788625, 3.2677643, 6.3707833, 8.8107, 9.112574,
            7.5858636, 6.7746363, 7.2740216, 8.164054, 9.653248, 9.19667, 6.24094, 2.7311084,
            3.5627403, 6.576047, 9.9738035, 8.108559, 7.9264984, 6.8091745, 6.911608, 6.7962427,
            7.2470675, 8.990973, 6.4127393, 3.266383, 2.8434293, 6.505951, 8.485926, 7.2299986,
            6.5925083, 7.8808756, 7.823511, 7.45235, 7.285596, 7.9220257, 6.1164513, 2.9404323,
            2.5443494, 6.0318537, 7.9295435, 7.1743956, 5.7103043, 7.4827275, 8.543012, 8.431655,
            8.144432, 9.011449, 6.792586, 3.1935883, 2.3836303, 5.7749023, 7.5947213, 6.772373,
            5.7083473, 7.6869354, 8.7695875, 9.285655, 9.284201, 9.77522, 6.6100035, 3.7110193,
            1.8588036, 5.9571543, 7.258145, 7.1822524, 6.21234, 7.0331364, 6.661379, 7.3537683,
            8.119497, 9.053406, 7.357526, 4.224998, 2.11197, 5.080002, 9.42664, 8.5448265,
            7.123611, 6.6824694, 6.7728667, 7.1283326, 7.7815776, 8.065928, 6.317795, 3.798605,
            2.808777, 5.9233804, 9.977187, 9.684909, 7.5945525, 6.767623, 7.681746, 7.68854,
            7.6930165, 6.205743, 4.8318624, 3.1637921, 2.5167937, 5.59861, 8.414772, 8.84037,
            7.7543573, 8.279909, 9.352364, 7.8088584, 8.750899, 5.677453, 4.5386524, 1.9561956,
            2.5739286, 5.8870163, 7.980127, 7.4782314, 7.8651376, 8.5890875, 8.213141, 9.106124,
            8.689475, 7.1137, 3.5647657, 1.4185529, 1.217064, 3.743338, 4.470199, 4.8348417,
            3.7813644, 4.966193, 5.089712, 5.99919, 5.59801, 5.339302, 3.2909188, 1.2133262,
            0.41686788, 1.6787082, 2.149996, 2.019946, 1.3496779, 1.3479314, 2.0597398, 2.2056894,
            1.7015866, 2.3414607, 1.1991614, 0.35931322, 0.8329124, 2.1395884, 1.6127702,
            1.6031927, 1.3563058, 2.3764973, 2.2852278, 2.127923, 1.599964, 1.1501596, 0.91144556,
            0.4144459, 1.1702155, 3.1921449, 3.9937043, 3.7713761, 3.3409958, 3.3692203, 2.9651508,
            2.8735275, 3.2248712, 3.3307495, 2.413015, 1.2735751, 1.5891285, 4.7129927, 5.616362,
            5.020245, 4.5157804, 4.4251842, 4.610261, 4.555111, 4.8340526, 5.889733, 3.3857894,
            0.7426568, 1.3824772, 3.8849945, 5.131544, 5.8663883, 5.4197593, 4.5229735, 4.0929084,
            4.55229, 4.9695334, 5.0067797, 3.428308, 1.5430989, 1.4282761, 4.0326457, 5.6854787,
            5.3394303, 4.716178, 4.1258445, 4.184621, 4.902094, 5.0967517, 5.6683817, 4.2621007,
            1.6342762, 1.7587523, 4.418976, 5.799479, 6.1156096, 5.2625637, 4.662623, 5.578276,
            5.994432, 6.2078657, 6.0617914, 3.7212772, 1.2020154, 2.35095, 4.7233076, 6.02593,
            5.7412024, 4.7934737, 4.488369, 4.8026366, 4.14976, 5.108012, 6.2042546, 5.0526805,
            2.0774398, 1.9907794, 3.7500918, 5.0610814, 5.0056963, 4.7796326, 5.2251997, 5.5555534,
            4.912516, 5.110977, 6.2521296, 4.40539, 1.6688682, 1.2259558, 4.5330944, 5.846893,
            4.9281406, 3.5635355, 5.148777, 6.0094824, 4.758314, 5.2384424, 6.075721, 5.053282,
            2.184083, 1.7959206, 3.5088367, 4.191622, 3.6281495, 4.1396675, 5.7580442, 5.5540605,
            5.168688, 5.6075177, 6.8236365, 5.1847587, 1.9703724, 0.7747791, 3.8596663, 5.4668913,
            5.1007547, 4.1826544, 4.2602396, 5.4198294, 5.2288384, 4.761549, 6.219401, 5.227832,
            2.505422, 0.9926919, 4.038609, 6.1595654, 5.3168535, 4.22686, 4.061873, 4.741849,
            4.7889414, 5.2934813, 5.3192263, 4.859254, 2.4381862, 1.7248185, 4.844206, 6.58436,
            5.983586, 4.958222, 5.1719823, 5.2251873, 5.383684, 4.3315463, 4.546349, 3.6739602,
            1.7064528, 1.5463204, 4.1384974, 5.9588842, 6.4033675, 4.9400454, 5.4556866, 5.3199406,
            6.2375736, 5.692333, 4.3623595, 3.0472636, 1.0570383, 1.3081846, 4.387704, 5.814232,
            5.7488117, 5.027757, 4.6760607, 5.8917303, 6.72167, 4.910089, 3.6620502, 2.8334997,
            1.4830177, 0.6995025, 2.3260424, 3.0310123, 3.2622638, 2.936165, 3.5863576, 3.0561242,
            4.0839434, 3.830284, 3.5151215, 1.722472, 0.20292275, 0.5569823, 1.1747465, 1.4562023,
            1.9863343, 1.215719, 1.2388146, 1.7538276, 1.6356319, 1.9802086, 1.9132564, 0.64283526,
            0.44660994,
        ],
    )
    .unwrap();
    let current_output32: Array3<f32> = conv_layer32.convolve(&test_input32);

    assert!(
        arr_allclose(&current_output32, &target_output32),
        "{:?} was not equal to {:?}",
        current_output32,
        target_output32
    );

    let test_input33 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.19982047, 0.90395254, 0.5478458, 0.96795374, 0.22741623, 0.00554162, 0.55170393,
            0.5601068, 0.75972295, 0.7179427, 0.5663951, 0.00826331, 0.11534049, 0.42596257,
            0.6817369, 0.4604141, 0.34953818, 0.69908696, 0.7361598, 0.88632005, 0.68609756,
            0.6732832, 0.37878716, 0.32302734, 0.5766481, 0.27476153, 0.01185389, 0.19381721,
            0.9255945, 0.08145659, 0.2965461, 0.9996797, 0.12471338, 0.61783546, 0.43614203,
            0.39178115, 0.35493043, 0.49653238, 0.5755102, 0.51010305, 0.91676563, 0.5230349,
            0.700519, 0.76227057, 0.06306251, 0.5069124, 0.9456902, 0.00299157, 0.12880772,
            0.05983794, 0.77259356, 0.5264099, 0.25460967, 0.28755966, 0.16006812, 0.8973991,
            0.2606863, 0.26253387, 0.67275447, 0.84160686, 0.1393529, 0.49849266, 0.955501,
            0.9176197, 0.39986315, 0.89406526, 0.08086525, 0.37690058, 0.9472316, 0.90634656,
            0.41918305, 0.94620466, 0.9539543, 0.7064477, 0.85239345, 0.10098496, 0.34863842,
            0.02051973, 0.37064746, 0.34976023, 0.63522565, 0.5822416, 0.31255615, 0.7061453,
            0.13239637, 0.51017934, 0.8859752, 0.9154152, 0.0093977, 0.8665582, 0.6020712,
            0.08560265, 0.21459882, 0.69151706, 0.8576095, 0.3410254, 0.8993465, 0.46590054,
            0.990704, 0.6721973, 0.7690768, 0.47991776, 0.6923757, 0.98023206, 0.8744264,
            0.65587145, 0.18077046, 0.54235333, 0.14190416, 0.59148335, 0.11199604, 0.22239625,
            0.49535275, 0.10202583, 0.5330766, 0.1925287, 0.14314991, 0.71126366, 0.7039669,
            0.7503396, 0.61614865, 0.5901891, 0.37142363, 0.9428474, 0.4253642, 0.7146162,
            0.9730212, 0.61613715, 0.50159, 0.23079261, 0.4925117, 0.20337714, 0.46196786,
            0.8073715, 0.5038819, 0.09893908, 0.90349656, 0.01722594, 0.5784551, 0.11725764,
            0.8073887, 0.50780314, 0.00467546, 0.40760243, 0.13988449, 0.8453326, 0.8307157,
            0.60654116, 0.18171401, 0.31007424, 0.2942452, 0.4888085, 0.52514094, 0.703604,
            0.14197119, 0.08584995, 0.34441712, 0.56593883, 0.4493232, 0.19173315, 0.07816565,
            0.5425498, 0.7132138, 0.4862424, 0.0525712, 0.96248484, 0.6902671, 0.2879344,
            0.8519083, 0.55267817, 0.07016034, 0.82135326, 0.62920415, 0.90577847, 0.9347623,
            0.09443506, 0.23280993, 0.65946394, 0.8947401, 0.03987844, 0.38589397, 0.77658385,
            0.48183945, 0.94045246, 0.11011575, 0.7308709, 0.8328545, 0.29012534, 0.4569207,
            0.9529406, 0.5358466, 0.9687458, 0.4472085, 0.18282856, 0.769097, 0.8386977,
            0.21557523, 0.94424677, 0.50224614, 0.21579173, 0.9772731, 0.47108477, 0.99656236,
            0.36141592, 0.7001516, 0.57343286, 0.61278397, 0.27807143, 0.6407772, 0.3605408,
            0.72915196, 0.5104628, 0.59073764, 0.5717296, 0.29667476, 0.92121494, 0.9667328,
            0.47047687, 0.71601814, 0.49495855, 0.27396587, 0.04238893, 0.3999544, 0.99121827,
            0.70719117, 0.23122132, 0.10337279, 0.33192208, 0.27677527, 0.20377244, 0.39588144,
            0.3832173, 0.26080993, 0.4803283, 0.35350803, 0.6332842, 0.41102257, 0.2293425,
            0.63983893, 0.9376581, 0.42087105, 0.02744765, 0.11062973, 0.1787167, 0.5125019,
            0.1897166, 0.99207646, 0.01530014, 0.02463103, 0.6676321, 0.53152925, 0.8400259,
            0.56391525, 0.8316277, 0.3228065, 0.15356176, 0.81715685, 0.9747539, 0.90132594,
            0.5194669, 0.32003468, 0.97291625, 0.5424355, 0.25952706, 0.2682298, 0.09730922,
            0.9460035, 0.9785876, 0.7371736, 0.9941749, 0.35973564, 0.06196258, 0.79140055,
            0.43666556, 0.78015715, 0.33209485, 0.6855751, 0.67111015, 0.74436355, 0.04572792,
            0.6131918, 0.781168, 0.01862379, 0.7148674, 0.85626405, 0.05245275, 0.31138107,
            0.5932752, 0.26923984, 0.40164033, 0.6793183, 0.9401547, 0.84130347, 0.47107708,
            0.4022033, 0.42742896, 0.04634837, 0.9779148, 0.93737435, 0.4095396, 0.41777328,
            0.9895415, 0.7139765, 0.11441413, 0.14224136, 0.08854763, 0.01855595, 0.16720486,
            0.38319588, 0.267287, 0.67903227, 0.89380723, 0.4683366, 0.93492687, 0.28192636,
            0.43289438, 0.5126539, 0.06127732, 0.04873959, 0.35348675, 0.602, 0.18075775,
            0.3706305, 0.54883826, 0.2624883, 0.74253213, 0.17598268, 0.6743594, 0.9869322,
            0.7629663, 0.86821306, 0.97871965, 0.7989542, 0.71905494, 0.34765512, 0.34274808,
            0.06045034, 0.55789274, 0.2188389, 0.6924317, 0.6751086, 0.5856843, 0.44401753,
            0.360823, 0.11797103, 0.9353965, 0.28468877, 0.2590096, 0.6319564, 0.9091785,
            0.90224165, 0.0492401, 0.5070151, 0.02703854, 0.30561775, 0.7367476, 0.9649247,
            0.7962459, 0.12578371, 0.96801484, 0.9006433, 0.89867175, 0.86861897, 0.86013335,
            0.9421052, 0.05097519, 0.5984821, 0.24334699, 0.6616385, 0.28245237, 0.42253864,
            0.61110425, 0.66795814, 0.9024756, 0.7763093, 0.86239356, 0.44741336, 0.76970786,
            0.4141578, 0.15038556, 0.29719463, 0.7443069, 0.93509567, 0.33021635, 0.38336864,
            0.07322941, 0.2794688, 0.81592786, 0.7104612, 0.35742825, 0.6417253, 0.39207277,
            0.87420404, 0.85303366, 0.4814232, 0.5530291, 0.31536198, 0.69832444, 0.01077096,
            0.73046064, 0.06813734, 0.13388659, 0.5064835, 0.45037648, 0.77707547, 0.8831219,
            0.01058917, 0.5249456, 0.29823583, 0.74204314, 0.50086904, 0.86974585, 0.10466193,
            0.6287949, 0.508476, 0.31764308, 0.65402883, 0.32067546, 0.90192676, 0.78996,
            0.96392447, 0.83785075, 0.07532936, 0.02624486, 0.85766184, 0.80531436, 0.69086134,
            0.12122969, 0.7383121, 0.19533794, 0.44526327, 0.7058163, 0.90610075, 0.5032462,
            0.24466415, 0.11470018, 0.8247195, 0.7054897, 0.6289111, 0.6951812, 0.7176144, 0.35663,
            0.34600323, 0.98480684, 0.558168, 0.4576909, 0.39555076, 0.3486375, 0.01817268,
            0.5559114,
        ],
    )
    .unwrap();

    let kernel33: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.20362668, 0.5367513, 0.6464879, 0.5576659, 0.36609647, 0.6970278, 0.96843016,
            0.10468024, 0.6529659, 0.3899614, 0.5569262, 0.59517515, 0.6577067, 0.66722494,
            0.5047524, 0.66096354, 0.23255506, 0.4457503, 0.26285827, 0.5836484, 0.5136288,
            0.7514403, 0.40931305, 0.06902273, 0.17514281, 0.38094538, 0.25736928, 0.9031745,
            0.26183346, 0.05843278, 0.533389, 0.7678357, 0.09784848, 0.83987904, 0.4090506,
            0.9593906, 0.95724046, 0.24014333, 0.51399225, 0.94846255, 0.71030915, 0.3510309,
            0.40466377, 0.59137547, 0.07333596, 0.52430856, 0.45519072, 0.38453335, 0.6964576,
            0.8799919, 0.9961713, 0.13681252, 0.6625547, 0.80891675,
        ],
    )
    .unwrap();
    let conv_layer33 = ConvolutionLayer::new(kernel33, 1, Padding::Valid);
    let target_output33: Array3<f32> = Array::from_shape_vec(
        (2, 17, 12),
        vec![
            0.2652482, 1.2536862, 2.5343602, 3.0607793, 2.2302933, 1.8074566, 0.7166084, 1.0044526,
            2.0060472, 2.2441368, 1.8271654, 0.86881936, 0.83926344, 3.101176, 4.4907527,
            4.3372293, 3.764721, 2.7543416, 3.1398668, 3.669821, 3.6824286, 4.0113015, 3.2380974,
            1.5071144, 1.5880594, 4.4519596, 6.434861, 7.778168, 6.483881, 5.6941867, 5.0580883,
            4.4402485, 5.966677, 6.9912167, 4.8479004, 1.2178874, 1.95924, 4.5724235, 6.537685,
            7.3548994, 6.3009405, 6.7564073, 5.287603, 5.628043, 6.9378853, 7.125908, 5.1730003,
            2.4696517, 2.2484286, 5.8430877, 8.041085, 7.7058277, 6.695197, 6.24121, 5.53126,
            5.7494226, 6.1715446, 6.2577515, 4.168531, 1.1659312, 2.8274364, 6.259598, 7.7290707,
            7.1406965, 5.207541, 6.286544, 6.645683, 7.033481, 5.792467, 6.1741033, 4.9601307,
            2.5617414, 3.293366, 5.820317, 7.7358494, 7.163722, 6.888694, 7.524009, 6.9364734,
            7.5363884, 6.0971565, 6.5155845, 4.4459558, 2.1643143, 2.8543396, 4.8238993, 7.7671537,
            7.738426, 8.052977, 7.8096957, 7.3678308, 5.5224257, 5.841792, 6.085355, 3.9445949,
            1.7767131, 1.9726967, 4.3139586, 7.224506, 8.286845, 7.920782, 7.181265, 5.861265,
            6.0497665, 6.794176, 6.639813, 4.5205193, 2.5479856, 1.8413787, 4.2151256, 5.9802737,
            6.6149764, 7.133541, 6.610974, 6.2209487, 5.587963, 5.724593, 5.337442, 4.6790724,
            2.0230386, 2.1128216, 3.9940355, 5.9812913, 6.535425, 7.013054, 6.9923663, 6.7583084,
            6.8689775, 6.3727894, 7.126793, 4.6947513, 2.6258006, 1.9971902, 3.7197375, 5.667535,
            5.8218474, 6.6530485, 5.9289255, 6.1054335, 6.5754642, 7.008547, 8.395396, 5.7144136,
            2.9120371, 1.8983531, 4.985556, 6.9672003, 6.530412, 6.8875036, 7.2453065, 6.62883,
            7.6769333, 7.995203, 8.033068, 4.5595956, 1.707371, 2.07025, 4.6882915, 6.0047846,
            6.190334, 6.0831885, 5.949125, 6.262906, 6.3099527, 7.957842, 6.771196, 4.5018005,
            1.7463995, 2.5912185, 5.254275, 7.04269, 6.8417077, 7.1708765, 6.1871395, 6.449186,
            7.0164485, 7.5965557, 5.9307423, 3.6637182, 1.260201, 2.142591, 3.6893544, 4.217474,
            4.4307575, 4.2819595, 3.9640858, 3.8754234, 3.6208272, 4.054258, 3.5537958, 1.8502812,
            0.77398586, 1.2948679, 2.0262122, 2.549272, 2.3439374, 1.6734825, 2.1046107, 2.0186338,
            2.6432462, 2.2900481, 2.25248, 1.002382, 0.5280948, 0.6811783, 2.4797833, 3.3508313,
            3.987679, 2.4495087, 1.6019715, 1.2516681, 1.8206527, 2.8744397, 2.7926896, 1.6232746,
            0.71714073, 1.2555466, 3.3791785, 5.8133445, 5.9641957, 5.112724, 4.207256, 3.9876013,
            4.1276875, 4.7397065, 5.7315183, 3.9658606, 1.6005653, 1.8021848, 5.1917267, 7.783986,
            9.118616, 7.9225106, 6.621721, 5.0620403, 5.078922, 7.0545616, 6.870349, 5.5841427,
            2.03159, 1.8973376, 6.2328186, 8.601095, 8.832984, 7.3156757, 7.8666744, 7.054453,
            6.0794277, 6.5509415, 8.381279, 6.1213055, 2.6479883, 2.5680583, 6.5562453, 9.76839,
            8.618797, 7.6765013, 7.6148314, 7.04516, 6.772112, 7.029051, 7.009738, 6.130167,
            2.1911936, 3.3318796, 7.0976763, 9.539318, 9.103326, 6.433219, 7.4182854, 7.935156,
            7.6846075, 6.39938, 7.502794, 5.9111648, 2.859046, 2.7323093, 6.861967, 9.486958,
            8.292305, 7.8167353, 8.183719, 8.128176, 8.944134, 8.092812, 7.8193345, 6.4759655,
            3.0076766, 2.3783376, 5.682207, 9.02515, 9.769016, 10.038009, 8.177979, 7.681562,
            7.339218, 7.043815, 6.430986, 5.4772496, 2.8642921, 2.2056265, 5.432476, 8.239112,
            9.424151, 9.421626, 9.643666, 7.5331755, 7.4130816, 6.7521143, 7.7289066, 5.140111,
            2.6536744, 2.0075748, 3.960338, 6.500279, 8.066532, 8.8770895, 7.670841, 8.242225,
            7.192086, 7.6397133, 6.829504, 5.809374, 2.552607, 2.1448352, 4.8173704, 7.6019893,
            8.529246, 8.697145, 8.406332, 6.685051, 7.634819, 8.319227, 8.757751, 5.31046,
            3.1515203, 1.5284107, 4.732463, 7.206794, 6.8346486, 8.145324, 7.429554, 7.7058535,
            7.551185, 8.474045, 9.351344, 7.1598735, 3.4661114, 2.0847487, 4.6556797, 7.218503,
            7.453975, 7.4703584, 8.594918, 8.640662, 8.433497, 8.884418, 8.613502, 5.8478837,
            2.8631265, 2.3153777, 6.0533414, 7.747083, 6.979013, 7.489569, 6.879271, 8.0207615,
            7.7812495, 8.369804, 7.7592525, 5.7929745, 2.0387807, 2.8261905, 6.4233155, 8.951036,
            7.9501376, 6.868249, 7.9624896, 7.1319056, 8.444095, 8.648434, 7.269152, 4.6412888,
            1.6310724, 1.2163597, 3.6468365, 5.1996317, 4.9596214, 5.202606, 4.418948, 3.8454828,
            4.261058, 5.2609153, 4.2002826, 3.5873213, 1.4416437, 0.67228895, 1.6823711, 2.7056322,
            2.1297104, 1.9618908, 2.3782153, 1.5283713, 2.3763194, 2.3696868, 1.7429609,
            0.98566246, 0.77720237,
        ],
    )
    .unwrap();
    let current_output33: Array3<f32> = conv_layer33.convolve(&test_input33);

    assert!(
        arr_allclose(&current_output33, &target_output33),
        "{:?} was not equal to {:?}",
        current_output33,
        target_output33
    );

    let test_input34 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.5196752, 0.63378453, 0.6144302, 0.35837704, 0.23309404, 0.34644812, 0.50217426,
            0.00554681, 0.2207341, 0.9855095, 0.35234872, 0.05972259, 0.1404125, 0.7420292,
            0.36001205, 0.39828563, 0.86437464, 0.34967113, 0.8001929, 0.9618047, 0.50686455,
            0.559009, 0.2582814, 0.21612453, 0.8080103, 0.20993726, 0.00845493, 0.8139426,
            0.03389508, 0.13004215, 0.27251562, 0.5501398, 0.11797722, 0.3407683, 0.98185354,
            0.27791747, 0.02695821, 0.48075756, 0.9413573, 0.9598438, 0.47197652, 0.31927556,
            0.79388624, 0.9663948, 0.41221553, 0.04869543, 0.956683, 0.02038087, 0.10196105,
            0.14647067, 0.95831466, 0.5729306, 0.24979122, 0.9183129, 0.45220876, 0.8044326,
            0.42501828, 0.08402323, 0.57557297, 0.84704405, 0.24117838, 0.9232175, 0.5352726,
            0.66831505, 0.84581494, 0.02265424, 0.47793466, 0.1441583, 0.23037143, 0.9375789,
            0.71464306, 0.8545862, 0.1224625, 0.4731851, 0.33050996, 0.01891187, 0.53442717,
            0.063399, 0.07788111, 0.8760362, 0.13885641, 0.9537846, 0.09553351, 0.60492355,
            0.23765405, 0.79063565, 0.38434002, 0.711263, 0.6243588, 0.06738149, 0.07549326,
            0.12387726, 0.19784369, 0.68663126, 0.59032553, 0.62274987, 0.5970565, 0.71210676,
            0.12374777, 0.7791601, 0.5503317, 0.46311814, 0.28902137, 0.37557426, 0.7025585,
            0.35601366, 0.15500914, 0.8273933, 0.63807166, 0.883448, 0.1015854, 0.46811357,
            0.3143135, 0.75357485, 0.2200977, 0.92466223, 0.1372336, 0.989562, 0.90013695,
            0.60268074, 0.29225165, 0.8990756, 0.4354277, 0.70261323, 0.4153414, 0.5055576,
            0.6388459, 0.2952592, 0.13750617, 0.01179794, 0.22622024, 0.04377225, 0.5594078,
            0.9288911, 0.8165832, 0.17169783, 0.66343135, 0.66260463, 0.22986317, 0.2665503,
            0.29389632, 0.29072547, 0.04191615, 0.5280909, 0.34129518, 0.57593834, 0.25140822,
            0.18509477, 0.13568091, 0.7269978, 0.25790986, 0.69324833, 0.8679245, 0.59633005,
            0.65488356, 0.87685895, 0.967748, 0.48245648, 0.9374606, 0.38765016, 0.86497676,
            0.400054, 0.32328948, 0.0151671, 0.32235637, 0.7305659, 0.9027017, 0.75469947,
            0.2543982, 0.34620103, 0.6152326, 0.21047816, 0.15493484, 0.5038661, 0.838882,
            0.58702785, 0.9090709, 0.25651568, 0.30576277, 0.608248, 0.19374174, 0.49685606,
            0.7302286, 0.72125804, 0.15272117, 0.7587074, 0.39229694, 0.7610872, 0.30246893,
            0.8383011, 0.94492614, 0.39669687, 0.17953911, 0.48956135, 0.17531991, 0.81426054,
            0.51194495, 0.00589341, 0.4856146, 0.2117447, 0.9185463, 0.1967555, 0.6015046,
            0.25964326, 0.09959481, 0.44542107, 0.6194622, 0.5293358, 0.08988074, 0.9194768,
            0.97676104, 0.5854387, 0.08310746, 0.7869529, 0.11308007, 0.6603618, 0.58312225,
            0.03236333, 0.23011816, 0.1625122, 0.6463952, 0.9213473, 0.6615045, 0.48125225,
            0.32576007, 0.8601632, 0.5216071, 0.19041517, 0.15599571, 0.9668574, 0.52926344,
            0.6078623, 0.8403314, 0.03379478, 0.31380126, 0.92111635, 0.7584332, 0.61748165,
            0.20176977, 0.8982146, 0.65994954, 0.06532437, 0.64356047, 0.22805685, 0.8226498,
            0.63475907, 0.88734704, 0.6989102, 0.22591083, 0.76115644, 0.9804811, 0.09919641,
            0.7140448, 0.5246399, 0.66615474, 0.7942114, 0.7926027, 0.99714524, 0.15588701,
            0.28218988, 0.21515913, 0.2523892, 0.53114694, 0.07968733, 0.590361, 0.23308377,
            0.72369504, 0.82807124, 0.10934412, 0.89117837, 0.16005383, 0.45873183, 0.20520075,
            0.62342596, 0.5587902, 0.81622064, 0.304105, 0.71163654, 0.10509957, 0.86186355,
            0.97906446, 0.15706603, 0.11903284, 0.15461008, 0.13425252, 0.05023352, 0.32775852,
            0.9435393, 0.76032287, 0.82373565, 0.3074064, 0.22278658, 0.35444143, 0.6227668,
            0.07482269, 0.6352265, 0.93379414, 0.6084598, 0.81633985, 0.7938294, 0.9833442,
            0.7669788, 0.25625056, 0.8309169, 0.26520997, 0.5645692, 0.969097, 0.05388465,
            0.7587759, 0.7075585, 0.36315936, 0.3090082, 0.77128536, 0.3440802, 0.1375511,
            0.7766764, 0.4454178, 0.3584414, 0.72871476, 0.9426159, 0.12266664, 0.16580608,
            0.20253018, 0.91294247, 0.7180022, 0.5285052, 0.63151246, 0.02755868, 0.37300143,
            0.16874252, 0.22429508, 0.46965292, 0.38946074, 0.86716634, 0.02051388, 0.23504323,
            0.15247433, 0.22628488, 0.01136111, 0.9723616, 0.21735138, 0.05186762, 0.6036967,
            0.4727555, 0.84556717, 0.8781844, 0.7431968, 0.4704734, 0.2972315, 0.8261646,
            0.98925644, 0.33214343, 0.26777977, 0.38164377, 0.9193449, 0.30965453, 0.89371026,
            0.816318, 0.9184309, 0.4946111, 0.9935074, 0.3386878, 0.6829108, 0.42882872,
            0.07337865, 0.6904631, 0.33399308, 0.31139955, 0.81936634, 0.11950397, 0.5489697,
            0.52128464, 0.7931158, 0.4718432, 0.4363914, 0.02397078, 0.40344155, 0.02668436,
            0.4338736, 0.7971797, 0.32682723, 0.27223235, 0.12087691, 0.13423896, 0.70387655,
            0.65776235, 0.2882407, 0.1864088, 0.02156927, 0.2390027, 0.01747457, 0.08151705,
            0.42640674, 0.023332, 0.7051767, 0.7238778, 0.07542202, 0.5070594, 0.26892266, 0.91088,
            0.03202334, 0.26757732, 0.5040979, 0.66929567, 0.30578545, 0.20677379, 0.29064912,
            0.5301375, 0.53650105, 0.3352366, 0.0677837, 0.1536621, 0.79320407, 0.6287965,
            0.8816608, 0.7569012, 0.01938523, 0.978318, 0.31143916, 0.27851093, 0.7666568,
            0.03297786, 0.67032087, 0.4962149, 0.40878415, 0.5339488, 0.82015866, 0.9769518,
            0.6421733, 0.06657688, 0.01797699, 0.6343292, 0.8178364, 0.9943553, 0.9562293,
            0.6767696, 0.14548539, 0.56790006, 0.8746105, 0.28121006, 0.40319064, 0.21566778,
            0.594935, 0.9995037, 0.9538717, 0.32445627, 0.82740843, 0.7941346, 0.7832342,
            0.24875638,
        ],
    )
    .unwrap();

    let kernel34: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.53098685, 0.87364227, 0.71275234, 0.62711567, 0.17735237, 0.82326293, 0.5634873,
            0.8189058, 0.23060308, 0.68002754, 0.8024984, 0.14866899, 0.30162072, 0.39940432,
            0.984915, 0.13301279, 0.24096294, 0.9041999, 0.5548302, 0.5162294, 0.20752071,
            0.92154115, 0.41252124, 0.41155177, 0.27965236, 0.97634184, 0.1825079, 0.38320434,
            0.6132724, 0.6197911, 0.05417962, 0.79023945, 0.44458553, 0.5893513, 0.23997463,
            0.86761755, 0.72059697, 0.84052527, 0.11897708, 0.023685, 0.01450239, 0.5398071,
            0.5885413, 0.409648, 0.4861491, 0.44084755, 0.32281688, 0.49857914, 0.6754611,
            0.00709001, 0.3654985, 0.8653281, 0.3124743, 0.54546535, 0.5388062, 0.2876998,
            0.12142149, 0.2570787, 0.16549692, 0.3244519, 0.2457382, 0.48512897, 0.06775604,
            0.15867555, 0.17943048, 0.12739219, 0.52981263, 0.43739402, 0.16849968, 0.7804716,
            0.32884085, 0.9658324, 0.77542007, 0.5676015, 0.99179137, 0.6197924, 0.11152316,
            0.99616134, 0.83928454, 0.47061965, 0.34076488, 0.89489484, 0.15552202, 0.61116034,
            0.17411815, 0.94153976, 0.1768624, 0.61146617, 0.76753354, 0.63610965, 0.2980205,
            0.8495612, 0.9121548, 0.04038839, 0.16118859, 0.78595555, 0.11643393, 0.62377745,
            0.26794127, 0.451131, 0.1958822, 0.10165259, 0.10025226, 0.8303008, 0.87098825,
            0.22490515, 0.32732126, 0.5807619, 0.2488159, 0.42630666, 0.42271057, 0.36138168,
            0.77579254, 0.31943667, 0.66366726, 0.1089614, 0.45151472, 0.704337, 0.7188009,
            0.13860539, 0.29699826, 0.02498931, 0.58095855, 0.53823626, 0.7894441, 0.91466755,
            0.30172202, 0.60567856, 0.1890054, 0.0603164, 0.34424198, 0.16754848, 0.05135555,
            0.99599046, 0.2310866, 0.8497308, 0.34082386, 0.7554349, 0.56480473, 0.30550992,
            0.4534563, 0.01440341, 0.71699256, 0.05252765, 0.24022588, 0.8696194, 0.74842566,
            0.35906684, 0.615944, 0.71554166,
        ],
    )
    .unwrap();
    let conv_layer34 = ConvolutionLayer::new(kernel34, 1, Padding::Valid);
    let target_output34: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.8871597, 2.0184188, 2.9297462, 3.1994946, 3.4725409, 3.3755865, 3.6378388, 3.1006718,
            3.39181, 2.895872, 3.0769753, 1.6722544, 0.9354452, 0.6080824, 2.516336, 2.9366167,
            4.609499, 5.4216614, 7.0895634, 7.486602, 8.252714, 7.5680804, 7.5742774, 9.124267,
            6.976139, 3.9732103, 2.8313684, 2.3788974, 2.4710958, 4.117668, 6.255851, 8.128039,
            10.452538, 10.326613, 11.6873665, 10.819293, 11.373149, 12.584515, 8.904783, 5.537948,
            5.3290567, 3.4076047, 2.7936134, 5.4396353, 7.246022, 9.92144, 12.046319, 13.715164,
            13.983407, 14.268989, 13.880103, 16.198227, 10.980361, 8.327668, 6.022666, 3.7370105,
            4.0868826, 6.432864, 9.204277, 13.015063, 16.654995, 16.972216, 16.296432, 17.042994,
            16.902195, 16.56304, 12.45122, 9.096985, 7.46033, 5.122269, 4.4350257, 6.3324437,
            9.601078, 11.377764, 16.31048, 15.885148, 17.585392, 18.324757, 15.835521, 18.012106,
            14.116437, 10.225631, 7.240484, 5.0794, 5.02152, 7.1621013, 10.048103, 14.950026,
            16.872116, 16.02202, 17.119335, 17.027384, 15.4147, 16.554888, 12.186481, 8.121694,
            6.617128, 4.388462, 5.0873466, 8.7317, 11.986238, 14.870414, 17.566963, 16.580017,
            17.100548, 14.75369, 13.616549, 16.177116, 12.452891, 9.197978, 7.2169347, 5.004449,
            5.274298, 8.193669, 11.23565, 14.520363, 18.659765, 17.206657, 17.683735, 16.134357,
            15.065478, 16.257893, 11.263443, 7.7839756, 6.71434, 5.0506387, 4.6846066, 7.6310534,
            10.229069, 13.190332, 18.28092, 16.576193, 17.293858, 17.293154, 15.430809, 17.013174,
            12.177886, 9.759819, 7.5546703, 4.13867, 4.194134, 6.5954056, 10.165015, 12.66876,
            17.090492, 16.439978, 17.394285, 16.121521, 16.544886, 18.18188, 12.038975, 10.089272,
            6.0738883, 4.770391, 2.7014937, 6.2476344, 9.0320635, 11.385895, 15.337226, 16.467695,
            17.373331, 17.413534, 17.993092, 18.725565, 12.866048, 10.277635, 6.9371595, 5.0583463,
            2.5466745, 5.1686993, 8.514237, 11.653345, 14.454326, 17.215591, 16.473543, 20.550226,
            18.75784, 19.617674, 12.442359, 10.444397, 6.225691, 3.8955195, 3.6022985, 4.138557,
            8.131329, 10.505869, 15.122118, 16.423418, 18.05622, 19.669224, 19.8806, 18.193502,
            14.091766, 12.26772, 7.0173135, 3.6444001, 2.459811, 5.280287, 8.590975, 12.50413,
            14.591389, 16.61876, 17.624058, 20.196861, 18.236883, 16.990807, 14.920157, 12.661592,
            6.8334837, 3.4415975, 2.0913038, 3.470204, 6.1675014, 9.331409, 12.768734, 13.318284,
            14.999165, 17.251835, 15.51863, 15.545159, 13.2024145, 10.01749, 6.2674627, 2.9810722,
            1.7694778, 2.8903377, 4.132717, 7.4759846, 9.414771, 8.793617, 10.485951, 11.730818,
            11.076076, 10.272091, 8.962121, 6.6362133, 5.094136, 1.7897357, 1.2493796, 1.5937684,
            2.1562734, 4.347175, 5.5513577, 6.361632, 7.375753, 7.9680014, 7.606084, 6.948167,
            5.0895114, 4.162496, 3.5169163, 1.335876, 0.45989257, 0.7102884, 1.237895, 2.2709272,
            2.5211, 2.899477, 4.1873374, 4.242276, 3.8011491, 3.3533456, 2.9677892, 2.7013566,
            1.7759006, 0.45564935, 1.2720437, 1.8037411, 2.855021, 3.7621138, 4.173126, 4.2813315,
            4.130569, 3.4886355, 3.9119136, 3.8543634, 3.5189507, 2.3995037, 1.7685454, 1.5050048,
            1.1008563, 1.9244378, 3.7554152, 4.439806, 5.764975, 6.111914, 5.91278, 6.5198793,
            6.477275, 7.373391, 6.689114, 4.490508, 3.7294579, 2.3324628, 1.9227854, 3.1390216,
            5.183752, 8.192879, 9.661443, 9.989632, 11.298973, 10.262502, 10.795145, 11.495237,
            7.9966173, 6.371486, 4.8893414, 2.349722, 2.0619128, 5.367035, 8.3216305, 10.591847,
            11.967126, 13.445817, 12.8831835, 14.087869, 14.121456, 15.117111, 12.235067, 9.880473,
            6.4284854, 4.053651, 3.0461493, 5.099434, 9.123611, 11.981537, 16.671354, 16.864513,
            18.539013, 18.884039, 17.20733, 16.994259, 15.335785, 9.643965, 6.1610794, 4.533531,
            4.220265, 5.6490083, 8.679391, 11.876525, 17.34118, 15.889824, 17.356228, 18.200222,
            16.669321, 17.891695, 12.990362, 11.543343, 7.6306505, 5.2923517, 3.6585824, 6.4076915,
            10.670509, 13.213604, 17.624681, 16.565084, 18.064531, 16.168455, 16.078878, 15.909754,
            12.938589, 9.202969, 6.3231573, 3.8587863, 4.6758194, 6.5054736, 11.405465, 15.824661,
            18.252668, 16.567173, 17.092073, 15.577335, 14.679363, 15.353619, 12.44659, 10.563484,
            7.095481, 5.5643916, 4.551832, 7.9073687, 11.529038, 13.8126335, 17.343662, 16.99569,
            16.067034, 16.081076, 15.132686, 15.517308, 12.3511505, 7.850722, 6.3355384, 3.823423,
            3.9810596, 6.6739883, 10.555298, 13.215947, 17.98773, 14.690704, 16.673521, 14.782311,
            15.145924, 17.642004, 11.587194, 11.008842, 6.254984, 5.108342, 3.296979, 7.2014694,
            9.239333, 13.049978, 16.03252, 16.192057, 15.730694, 15.929655, 15.593663, 16.266685,
            12.843569, 10.048538, 6.2989006, 4.3937483, 2.039961, 5.784643, 8.56284, 11.435291,
            13.777678, 18.012829, 16.901274, 19.177074, 16.856842, 18.900145, 13.269088, 11.301169,
            6.866756, 4.974282, 2.7939498, 4.3851147, 8.2868595, 11.442209, 15.063386, 16.73657,
            18.821703, 19.126266, 18.87904, 19.650629, 14.392463, 11.857453, 5.60655, 3.5494227,
            2.685857, 3.822175, 8.4834585, 10.986132, 16.738506, 17.057703, 18.65873, 20.386782,
            19.33434, 18.932022, 14.570946, 12.65457, 6.195059, 3.96436, 2.904489, 4.2630157,
            8.2059355, 12.112888, 15.829452, 17.776993, 18.850237, 20.463818, 18.713547, 19.300337,
            14.405109, 11.578884, 6.0201635, 3.4914289, 1.282445, 4.2977743, 6.17508, 9.263966,
            12.214467, 12.053734, 14.548308, 15.466945, 14.3516655, 13.963735, 11.561859, 9.774448,
            5.641377, 2.7192223, 1.8971555, 2.495267, 4.573297, 8.523536, 10.354615, 10.853186,
            11.25782, 11.952854, 11.149573, 12.584922, 9.032165, 7.7110634, 4.6097746, 2.425335,
            1.5384092, 1.7840112, 2.877935, 3.9969985, 5.9293094, 6.520331, 6.9468603, 7.4975867,
            7.6817183, 8.024288, 5.6797557, 5.056555, 3.125645, 1.7470403, 0.43037978, 0.61926794,
            1.0739038, 1.7326353, 2.1087043, 2.8703897, 3.1217532, 3.9246867, 3.4840798, 3.7275407,
            3.1374385, 2.5205424, 1.5530716, 1.1326506,
        ],
    )
    .unwrap();
    let current_output34: Array3<f32> = conv_layer34.convolve(&test_input34);

    assert!(
        arr_allclose(&current_output34, &target_output34),
        "{:?} was not equal to {:?}",
        current_output34,
        target_output34
    );

    let test_input35 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.9964236, 0.48360798, 0.65542877, 0.92131656, 0.62419057, 0.28075695, 0.95138586,
            0.03742034, 0.24292202, 0.5112613, 0.09925622, 0.3738838, 0.3501035, 0.683113,
            0.00036895, 0.31636, 0.5258305, 0.20907213, 0.31935102, 0.46920267, 0.9548321,
            0.22725932, 0.72710156, 0.9838608, 0.7348552, 0.95043266, 0.1939531, 0.8495752,
            0.84936816, 0.31214204, 0.020407, 0.29198912, 0.5470224, 0.7187741, 0.9696485,
            0.8560521, 0.4610603, 0.36576656, 0.02449073, 0.59270257, 0.5402461, 0.12048424,
            0.54154533, 0.6322593, 0.5571932, 0.08840237, 0.49039194, 0.6217684, 0.24218307,
            0.6632383, 0.8816509, 0.15960339, 0.6093835, 0.739127, 0.31076494, 0.6617724,
            0.7946265, 0.35911655, 0.69393593, 0.15214977, 0.18737185, 0.74053663, 0.7191395,
            0.43812937, 0.6957145, 0.9952376, 0.16850758, 0.7345647, 0.4049107, 0.4767252,
            0.6637993, 0.42989764, 0.3272699, 0.7196134, 0.96709275, 0.5945655, 0.12965602,
            0.5255171, 0.92811966, 0.86373013, 0.7708463, 0.8937434, 0.25468576, 0.34347492,
            0.530338, 0.6199976, 0.01742517, 0.47107297, 0.07118031, 0.6127199, 0.09857575,
            0.81341505, 0.2806283, 0.32021993, 0.3820947, 0.9581791, 0.2628233, 0.9801681,
            0.01609867, 0.5272288, 0.8630202, 0.8208894, 0.3541803, 0.07215097, 0.05219934,
            0.3644227, 0.18509601, 0.0866156, 0.81923145, 0.8462739, 0.07187212, 0.19391125,
            0.9640388, 0.20116507, 0.5135085, 0.04018129, 0.44840696, 0.3864388, 0.6831303,
            0.45846483, 0.45164114, 0.60945815, 0.14712231, 0.10600431, 0.54439926, 0.96085125,
            0.89940333, 0.6723138, 0.8294056, 0.2400944, 0.81366646, 0.1530087, 0.55479336,
            0.0768621, 0.81959426, 0.14144829, 0.09299238, 0.39703202, 0.50219774, 0.5504823,
            0.7626221, 0.02017781, 0.20396212, 0.2315043, 0.28059694, 0.0384257, 0.92572653,
            0.85304475, 0.9227076, 0.61218125, 0.85572857, 0.39250162, 0.00926249, 0.2670481,
            0.6299236, 0.6380664, 0.15112722, 0.12904108, 0.9610627, 0.7121952, 0.4587128,
            0.44769827, 0.90325624, 0.37947366, 0.8030902, 0.03485033, 0.4617171, 0.6479722,
            0.53539133, 0.2788216, 0.2423434, 0.5864343, 0.67460907, 0.46925062, 0.07147343,
            0.7644256, 0.8566437, 0.29966143, 0.05329819, 0.60962343, 0.9285702, 0.32679623,
            0.3903264, 0.64249885, 0.96716243, 0.897583, 0.24524814, 0.52139103, 0.32803342,
            0.5181942, 0.51220167, 0.18159197, 0.8665665, 0.9785378, 0.7287427, 0.7786622,
            0.29876545, 0.75457317, 0.20196797, 0.17440334, 0.39972377, 0.9031067, 0.0279216,
            0.07560094, 0.4063533, 0.89307874, 0.26793155, 0.54531777, 0.76704943, 0.24446122,
            0.5655409, 0.855276, 0.46456698, 0.6747385, 0.25479087, 0.7553026, 0.47348526,
            0.4810381, 0.01440958, 0.89691705, 0.378025, 0.4112019, 0.3518699, 0.38309374,
            0.97874445, 0.25838065, 0.16904165, 0.53067166, 0.42017522, 0.45530656, 0.4978779,
            0.14543204, 0.55258465, 0.947921, 0.23003381, 0.7165106, 0.79403925, 0.11938072,
            0.26642635, 0.57685304, 0.9238777, 0.23035105, 0.4781139, 0.82838976, 0.15508978,
            0.95054454, 0.42030758, 0.9285927, 0.95514953, 0.1027505, 0.9967142, 0.39562112,
            0.7045485, 0.7547516, 0.32704812, 0.3185606, 0.78284556, 0.76108783, 0.86893994,
            0.19355603, 0.165468, 0.98580116, 0.83806276, 0.6458135, 0.96608514, 0.4744012,
            0.51113236, 0.7972437, 0.5827626, 0.35040325, 0.34192115, 0.00720319, 0.5927163,
            0.8042268, 0.09722981, 0.12880406, 0.896239, 0.5635491, 0.7330833, 0.08234657,
            0.56454206, 0.10750511, 0.8068582, 0.5117609, 0.8734937, 0.6808026, 0.07851031,
            0.3460928, 0.09790236, 0.0988896, 0.36921418, 0.69639486, 0.37377915, 0.9150178,
            0.77607256, 0.41136658, 0.19929981, 0.435523, 0.24557048, 0.02676343, 0.08051511,
            0.6405559, 0.49451137, 0.4149794, 0.72737783, 0.72403, 0.04702903, 0.40806046,
            0.152939, 0.44103095, 0.2244921, 0.68232304, 0.18933062, 0.83893037, 0.15520981,
            0.21666723, 0.45026395, 0.9916083, 0.29856464, 0.2287987, 0.12699115, 0.4539676,
            0.7224578, 0.7267446, 0.03087187, 0.6736655, 0.8916521, 0.22144382, 0.5158916,
            0.2085157, 0.39927888, 0.95807105, 0.2943695, 0.90529513, 0.7952436, 0.26358747,
            0.4270144, 0.49643677, 0.52485585, 0.10436007, 0.9574334, 0.12942687, 0.2244735,
            0.00970959, 0.6722845, 0.55595505, 0.9639111, 0.07906571, 0.6608763, 0.51526874,
            0.00945449, 0.92360485, 0.57159376, 0.5449533, 0.61592543, 0.14274225, 0.01026518,
            0.46913606, 0.17376864, 0.38009068, 0.26423022, 0.57912683, 0.73671806, 0.7878329,
            0.9675421, 0.39445186, 0.3428721, 0.06958814, 0.5659006, 0.71229553, 0.6954722,
            0.9774286, 0.87228006, 0.38645524, 0.05056721, 0.280568, 0.7337121, 0.79937047,
            0.9749549, 0.49178642, 0.6229996, 0.46538925, 0.7953501, 0.7406703, 0.51276684,
            0.31285286, 0.44514382, 0.53394765, 0.608863, 0.63766026, 0.58972347, 0.14867568,
            0.9134012, 0.8087745, 0.8816074, 0.7201289, 0.08099908, 0.23243731, 0.2603031,
            0.5149132, 0.83670455, 0.5423381, 0.17121983, 0.43495062, 0.8069043, 0.8381945,
            0.14064422, 0.20690504, 0.08369987, 0.45527726, 0.19925202, 0.11626041, 0.68621,
            0.7946413, 0.2866232, 0.56197965, 0.34871954, 0.418459, 0.24505354, 0.81632674,
            0.01926605, 0.16734742, 0.54784405, 0.9593917, 0.538895, 0.82884103, 0.00895003,
            0.5774044, 0.7182023, 0.8326292, 0.41107583, 0.6369332, 0.87786776, 0.02565966,
            0.9121203, 0.56961155, 0.09498502, 0.7413816, 0.7560407, 0.3634248, 0.69651574,
            0.1327469, 0.8627079, 0.05492407, 0.6814465, 0.07444459, 0.60906744, 0.34991544,
            0.7524436, 0.68666,
        ],
    )
    .unwrap();

    let kernel35: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.01549418, 0.32269347, 0.7132774, 0.879468, 0.2724277, 0.95146346, 0.047074,
            0.3831229, 0.07697041, 0.5519918, 0.21812607, 0.90267074, 0.9492341, 0.8055037,
            0.06217905, 0.97975385, 0.43391776, 0.49807012, 0.17744416, 0.65311456, 0.27143422,
            0.36561352, 0.46828213, 0.35435796, 0.03111337, 0.47552216, 0.906517, 0.16475675,
            0.02054715, 0.01428977, 0.3654481, 0.15186748, 0.25017264, 0.8383886, 0.08802161,
            0.02301173, 0.18382856, 0.40716594, 0.3063715, 0.47630212, 0.80055225, 0.21931884,
            0.13783294, 0.601813, 0.64131045, 0.04667937, 0.897173, 0.5418886, 0.77906114,
            0.33597425, 0.6233486, 0.42958102, 0.4621884, 0.36957732, 0.39779025, 0.58597034,
            0.42941824, 0.5441924, 0.2855142, 0.92948604, 0.1716157, 0.3805317, 0.70403796,
            0.26814866, 0.30325878, 0.38515112, 0.6479137, 0.75838685, 0.5264963, 0.73011106,
            0.8971626, 0.02432681, 0.28150013, 0.23198476, 0.11015231, 0.5846968, 0.19323848,
            0.682621, 0.24645625, 0.28065884, 0.28302717, 0.06797581, 0.18582676, 0.53293884,
            0.7061356, 0.21556447, 0.7464236, 0.6190288, 0.34428266, 0.18036312, 0.96327585,
            0.46971908, 0.7099942, 0.11456152, 0.6758199, 0.66015846, 0.76844287, 0.44120148,
            0.61676294, 0.11921299, 0.5351139, 0.894492, 0.05393951, 0.14384301, 0.00778698,
            0.684635, 0.7101957, 0.5847652, 0.32704464, 0.7931947, 0.9240008, 0.54372054,
            0.27133584, 0.46858206, 0.6808438, 0.7670258, 0.41600463, 0.4189943, 0.59114003,
            0.88006234, 0.30812186, 0.93577814, 0.5618839, 0.9468379, 0.25126496, 0.7165851,
            0.41707778, 0.04056123, 0.44379708, 0.09425906, 0.33453104, 0.21114524, 0.44094405,
            0.48172623, 0.5900978, 0.87333375, 0.98692304, 0.49946982, 0.08870029, 0.8025547,
            0.89840883, 0.03177308, 0.948784, 0.5420228, 0.6694761, 0.9944557, 0.47288647,
            0.16930467, 0.8001697, 0.69373703,
        ],
    )
    .unwrap();
    let conv_layer35 = ConvolutionLayer::new(kernel35, 1, Padding::Valid);
    let target_output35: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.47254565, 1.9013903, 1.5525893, 3.2334747, 3.625415, 3.8520417, 3.2142427, 3.5353162,
            3.0131953, 3.201418, 1.7111156, 1.6521628, 1.4889336, 0.56769514, 1.4914625, 2.0361035,
            3.420023, 4.6349316, 7.099311, 6.3240743, 5.4259677, 6.133536, 5.9214554, 5.1327996,
            4.058604, 3.2960515, 2.7691407, 1.1822578, 1.6424183, 3.9724946, 6.0462565, 8.661454,
            10.340965, 10.39763, 12.185505, 9.358115, 9.931148, 8.777, 7.35305, 4.9854517,
            3.952268, 1.4770145, 2.4469142, 4.7041006, 7.7831573, 10.692193, 13.39316, 15.0571995,
            14.792428, 13.48545, 13.003774, 11.77399, 9.745144, 6.555587, 4.894911, 2.218372,
            3.1436977, 5.649543, 8.165072, 14.416245, 17.100382, 18.033062, 17.250248, 17.48206,
            15.79103, 14.658896, 12.06646, 8.35786, 5.8109145, 2.6101406, 2.6262188, 5.31003,
            9.473927, 13.029114, 17.337076, 16.877775, 18.047829, 17.77556, 15.884496, 15.528327,
            10.827946, 9.08458, 4.468927, 2.160334, 2.4984002, 6.1529665, 9.10231, 13.386035,
            18.038052, 18.360971, 18.40126, 16.652056, 17.97268, 15.851475, 11.35481, 8.41679,
            6.2499766, 2.5200903, 3.0264556, 6.4237576, 9.918353, 13.873253, 18.308697, 18.433966,
            18.193848, 18.209633, 15.430354, 15.926471, 12.047461, 9.824063, 6.628273, 2.6984076,
            3.1640878, 6.492139, 10.433226, 14.186043, 17.021841, 17.63228, 17.297081, 16.957592,
            16.165764, 15.65383, 12.322966, 9.796287, 7.0044384, 2.879881, 3.1570804, 5.946201,
            10.787844, 16.072813, 18.241302, 17.352444, 17.192966, 16.087986, 16.73559, 15.830887,
            13.061767, 10.090704, 6.085174, 3.3182263, 4.064167, 6.9408894, 10.217986, 15.956398,
            18.3093, 18.804764, 15.367352, 16.462147, 15.031064, 15.952482, 11.855229, 10.785213,
            7.223914, 2.8931937, 3.6218553, 6.647882, 9.831556, 15.139002, 17.062378, 16.760225,
            15.915404, 18.234545, 13.8337555, 15.8201685, 12.56878, 10.566437, 7.1862864,
            2.8633041, 2.395452, 6.944736, 9.351263, 13.711401, 16.075197, 16.086216, 16.732693,
            16.553299, 16.332262, 17.144743, 12.178675, 10.859223, 7.4114914, 2.6166508, 2.535245,
            5.5996275, 8.804124, 13.790589, 15.311988, 17.080616, 16.195705, 15.188329, 17.043722,
            13.91957, 13.985079, 10.291455, 7.447478, 1.9603071, 2.6822982, 5.407944, 9.411619,
            11.973521, 16.289265, 15.11068, 16.135828, 15.383825, 16.537233, 15.329648, 14.305945,
            10.622847, 7.169576, 2.2400591, 2.255933, 3.4613245, 6.5300894, 9.30223, 12.367027,
            12.178405, 12.205438, 12.852273, 12.670851, 12.447616, 11.041681, 8.696882, 5.2832236,
            1.2425106, 1.9414201, 2.5095508, 5.23176, 6.107454, 9.100552, 8.626757, 9.784643,
            8.573949, 10.623798, 9.842939, 8.319651, 6.689737, 3.5532236, 0.9777416, 1.3289589,
            1.8257287, 3.6853495, 4.486683, 5.3265066, 6.253971, 5.5007105, 6.159863, 6.5650635,
            5.3302674, 4.5279384, 3.4604833, 1.9991819, 0.4874601, 0.49010256, 1.1691154,
            1.0344062, 2.661953, 1.8515246, 2.6214418, 2.22275, 3.1925378, 2.413635, 3.3619394,
            2.6358104, 1.7799456, 1.1124235, 0.10367603, 1.0982139, 1.8466215, 2.4382274, 4.051107,
            4.7313247, 4.8433943, 5.173651, 4.895319, 4.12699, 4.434221, 3.0768163, 2.7322705,
            2.0435665, 0.9955421, 1.4559368, 2.7685342, 4.1821713, 6.502455, 8.422066, 8.636825,
            8.134499, 7.7209964, 7.205939, 8.172774, 6.2184124, 4.934256, 3.252862, 1.8910787,
            2.0316973, 3.4861915, 6.408261, 10.304225, 11.567329, 12.940676, 12.802999, 12.206944,
            12.149267, 10.888205, 8.508819, 6.962782, 5.029949, 2.0313363, 1.7551903, 4.8311844,
            8.174223, 11.787473, 15.714286, 17.224047, 16.839233, 17.01352, 15.041757, 13.843046,
            12.006683, 8.12443, 6.114836, 3.308641, 3.4311144, 5.5575047, 9.714493, 15.403057,
            19.422915, 20.106045, 21.47977, 21.354782, 19.001673, 17.588572, 14.722973, 11.338223,
            7.28257, 3.7915947, 2.1573958, 5.3160553, 9.861015, 14.346183, 19.707203, 19.698181,
            21.576534, 19.837011, 18.29596, 18.34068, 14.363877, 11.190069, 6.2434688, 3.2619116,
            2.1662717, 6.4269333, 9.788742, 15.775422, 20.25675, 21.51607, 21.01821, 21.420586,
            21.078623, 18.76731, 13.829328, 11.745303, 8.041202, 3.5774455, 3.0471582, 6.2591405,
            10.475252, 15.707279, 21.280273, 22.064743, 21.775501, 20.574055, 19.504871, 18.419662,
            15.927871, 12.857174, 8.588071, 4.270629, 2.6140113, 6.6619425, 10.615078, 15.211321,
            21.128105, 21.037596, 19.403843, 20.387167, 19.417004, 17.374592, 15.30728, 12.244588,
            9.336996, 4.4833922, 2.8267107, 5.662627, 11.305718, 16.742245, 20.841022, 21.620977,
            20.391064, 20.132847, 19.377993, 19.464573, 14.681161, 12.661995, 7.489834, 4.9805946,
            3.9157817, 7.2625504, 11.384932, 16.703382, 22.195803, 21.370672, 19.699331, 19.926985,
            19.01914, 18.779837, 14.431869, 12.94338, 9.584347, 4.651948, 2.6145654, 6.715148,
            11.176045, 15.9082775, 20.633188, 21.079353, 20.296705, 20.09327, 17.561016, 18.852755,
            15.900864, 13.578065, 9.532971, 4.6395516, 2.080514, 6.2376175, 9.684621, 14.691013,
            19.681967, 19.898575, 20.116997, 19.818573, 20.134706, 19.228506, 15.468469, 14.347773,
            9.450405, 4.1321707, 2.3574789, 5.3009586, 9.830658, 13.67678, 20.155758, 19.654598,
            20.020832, 19.231731, 19.630434, 17.655005, 16.099117, 12.519658, 8.866899, 3.4633508,
            2.7625568, 5.439109, 10.147041, 14.31683, 19.416267, 16.973236, 20.670063, 17.615005,
            18.693409, 17.914255, 15.922894, 13.181099, 8.993348, 3.8089175, 1.5799633, 2.901919,
            7.111735, 9.705606, 14.144437, 13.63886, 14.322333, 13.757185, 14.128393, 13.127076,
            12.665434, 10.271085, 6.667264, 2.7814608, 1.1641572, 2.6619775, 4.1931825, 6.258855,
            9.043903, 10.001021, 10.368575, 10.038744, 11.269348, 10.960526, 8.462524, 7.916937,
            4.6692004, 1.7522779, 0.8216799, 2.3955102, 2.961639, 5.399425, 6.417942, 7.2878723,
            6.8895445, 6.8090806, 6.947318, 5.698356, 5.5686913, 4.2000203, 3.17315, 1.2949492,
            0.2825646, 1.2659843, 1.7343493, 2.9178019, 3.436604, 3.259489, 3.5572472, 3.4181733,
            3.4166071, 3.6266754, 3.573223, 2.4770384, 1.5906801, 0.5560661,
        ],
    )
    .unwrap();
    let current_output35: Array3<f32> = conv_layer35.convolve(&test_input35);

    assert!(
        arr_allclose(&current_output35, &target_output35),
        "{:?} was not equal to {:?}",
        current_output35,
        target_output35
    );

    let test_input36 = Array::from_shape_vec(
        (3, 15, 10),
        vec![
            0.76781565, 0.8918218, 0.7473441, 0.5532268, 0.6964844, 0.10984504, 0.59089476,
            0.6066833, 0.27276048, 0.1006932, 0.0453749, 0.47227803, 0.5079503, 0.9648078,
            0.8570686, 0.72912633, 0.53507906, 0.00238096, 0.11027454, 0.1789127, 0.59824157,
            0.17319581, 0.37650406, 0.59797186, 0.40831715, 0.54864365, 0.02069527, 0.6553853,
            0.80163413, 0.8177609, 0.7971179, 0.08406905, 0.508026, 0.11442149, 0.04620427,
            0.3497844, 0.45462498, 0.07369657, 0.52332807, 0.74098635, 0.46049482, 0.33960003,
            0.93051934, 0.71563727, 0.7999726, 0.00534251, 0.8396754, 0.9142885, 0.625111,
            0.6029102, 0.6333335, 0.7700269, 0.23793669, 0.8206902, 0.3374138, 0.26670292,
            0.08686233, 0.1029643, 0.4008225, 0.95465165, 0.8181969, 0.66963005, 0.7306344,
            0.0549346, 0.8426447, 0.96914834, 0.6678507, 0.57052803, 0.34104946, 0.2814671,
            0.61166996, 0.41391012, 0.12344587, 0.6252355, 0.94266546, 0.5703369, 0.21797805,
            0.8809775, 0.29241282, 0.02982224, 0.44230437, 0.11709308, 0.10283989, 0.4274258,
            0.66300994, 0.11320372, 0.08474967, 0.849806, 0.8935719, 0.21038549, 0.55810463,
            0.33296862, 0.12571159, 0.23451181, 0.9052224, 0.1988695, 0.55767894, 0.9546512,
            0.12630945, 0.6958903, 0.5024765, 0.05693591, 0.0815046, 0.00728971, 0.6072152,
            0.04567454, 0.29845986, 0.11050353, 0.38485697, 0.09593545, 0.43946478, 0.8565683,
            0.18553229, 0.06604452, 0.5574499, 0.6237617, 0.04779868, 0.13355136, 0.44111732,
            0.66940916, 0.255508, 0.8048158, 0.21831155, 0.2923272, 0.9146937, 0.87467635,
            0.76187396, 0.5403959, 0.89598167, 0.43917, 0.96864545, 0.08220442, 0.9865399,
            0.9424468, 0.2556481, 0.81214136, 0.9677495, 0.74180704, 0.1071836, 0.25940374,
            0.99580127, 0.5932102, 0.04343178, 0.7311494, 0.04783731, 0.72769856, 0.6176036,
            0.37383646, 0.3769874, 0.35903165, 0.11956753, 0.5422157, 0.1025933, 0.29599845,
            0.34388152, 0.6096152, 0.74966764, 0.03922287, 0.22169068, 0.54000634, 0.7720287,
            0.08456346, 0.09107142, 0.49166626, 0.6969486, 0.30650783, 0.33481097, 0.6885192,
            0.92016417, 0.78164, 0.56275487, 0.5161816, 0.85731035, 0.47906098, 0.7001218,
            0.8242743, 0.43211794, 0.8650503, 0.69807684, 0.70200926, 0.6481248, 0.7281945,
            0.01313858, 0.7139359, 0.00338423, 0.3701509, 0.6825711, 0.29473898, 0.34203872,
            0.6492484, 0.78417206, 0.35578284, 0.92984384, 0.5067316, 0.14365989, 0.80710125,
            0.30427325, 0.8632821, 0.4412164, 0.9898425, 0.13985266, 0.50355774, 0.71038556,
            0.75199634, 0.20438518, 0.302565, 0.32253316, 0.24522461, 0.38874564, 0.01596426,
            0.03268935, 0.5199071, 0.9730751, 0.25791696, 0.72531515, 0.8901288, 0.3369298,
            0.7706615, 0.58939576, 0.24533354, 0.45030525, 0.09461671, 0.6565849, 0.66725403,
            0.36014387, 0.16459827, 0.7206875, 0.66180915, 0.1968727, 0.2568436, 0.69032484,
            0.47962424, 0.3329353, 0.31321532, 0.61263674, 0.15715665, 0.04113929, 0.31686947,
            0.54813904, 0.5478772, 0.7496332, 0.8914651, 0.70726824, 0.7185725, 0.10002703,
            0.57364607, 0.21136971, 0.6512276, 0.51929957, 0.40889722, 0.99110264, 0.5522474,
            0.30395797, 0.00863769, 0.1212473, 0.1666415, 0.5887852, 0.6696046, 0.10532968,
            0.5708666, 0.41972712, 0.0050115, 0.9416627, 0.2743094, 0.5644317, 0.6896496,
            0.58043236, 0.593486, 0.45790267, 0.30341497, 0.18811014, 0.9402614, 0.7669063,
            0.634105, 0.7982995, 0.41619235, 0.12894545, 0.52092886, 0.521647, 0.15041436,
            0.6379747, 0.24152991, 0.01694399, 0.08953476, 0.18014309, 0.27443436, 0.07064668,
            0.9068687, 0.15657824, 0.74904203, 0.41392356, 0.36214927, 0.01264012, 0.06306978,
            0.13794519, 0.43036366, 0.55465347, 0.5103922, 0.5617109, 0.83329135, 0.23382041,
            0.69890016, 0.24523091, 0.33235383, 0.44655514, 0.6824109, 0.4055674, 0.5139047,
            0.16944607, 0.38137078, 0.3950377, 0.99505395, 0.49050683, 0.12798251, 0.550415,
            0.0107817, 0.9804115, 0.01554713, 0.5638509, 0.73606557, 0.02244601, 0.71388936,
            0.8822338, 0.41637895, 0.5204471, 0.31435138, 0.7621477, 0.5980359, 0.9225537,
            0.43390045, 0.18671374, 0.14004932, 0.37515613, 0.11509855, 0.58042264, 0.11006287,
            0.05430869, 0.7133292, 0.24697433, 0.58181113, 0.8818306, 0.24270806, 0.16793567,
            0.7600932, 0.5092142, 0.2787269, 0.936621, 0.55376446, 0.3195551, 0.9381164, 0.8077021,
            0.10565319, 0.67167306, 0.76066047, 0.09583076, 0.96722347, 0.6016514, 0.7150578,
            0.6595543, 0.76611406, 0.7153868, 0.2819424, 0.6738613, 0.5304246, 0.13520858,
            0.7469712, 0.81467754, 0.3061074, 0.35754028, 0.47058627, 0.36717632, 0.23220702,
            0.26958194, 0.28030816, 0.18757097, 0.30671576, 0.6050165, 0.75661963, 0.4542289,
            0.9907141, 0.03288648, 0.00421954, 0.63708895, 0.22448166, 0.2107704, 0.80958194,
            0.32154062, 0.7765318, 0.01871248, 0.82956314, 0.09080196, 0.01912449, 0.46620196,
            0.6916267, 0.20822853, 0.4514327, 0.11364792, 0.5546642, 0.7541355, 0.6899308,
            0.9034433, 0.694196, 0.5063144, 0.94890165, 0.61905736, 0.40940228, 0.7602986,
            0.07813971, 0.61089563, 0.6752682, 0.7528657, 0.02211638, 0.964609, 0.2357167,
            0.94941133, 0.23183365, 0.6772494, 0.30506894, 0.6058327, 0.23764269, 0.63789237,
            0.2806987, 0.8436678, 0.92047054, 0.04169853, 0.840219, 0.43775168, 0.24986073,
            0.81967235, 0.51197404, 0.3724083, 0.34628263, 0.63907087, 0.25998822, 0.8692504,
            0.84424555, 0.99396145, 0.49582243, 0.18524589, 0.26350108, 0.7190492, 0.7134346,
            0.30633783, 0.63444036, 0.38289404, 0.43202257, 0.26971525, 0.60774666, 0.51972485,
            0.38157287,
        ],
    )
    .unwrap();

    let kernel36: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.19452758, 0.502141, 0.2597569, 0.47333992, 0.8008906, 0.8724074, 0.793483,
            0.51520824, 0.5068442, 0.00387712, 0.6971712, 0.62291604, 0.00499232, 0.85458857,
            0.6985803, 0.7607782, 0.21467632, 0.0488642, 0.07048018, 0.96504945, 0.9557799,
            0.53076035, 0.8014985, 0.12924373, 0.6947651, 0.9900095, 0.49909648, 0.6837008,
            0.30657023, 0.4826988, 0.06244482, 0.31241128, 0.34538904, 0.90569776, 0.27529702,
            0.03544521, 0.5917267, 0.56012625, 0.05200182, 0.00022103, 0.8649758, 0.26781648,
            0.02556094, 0.7193077, 0.0072373, 0.7198472, 0.73335916, 0.8908257, 0.6227516,
            0.87142104, 0.5688352, 0.6098034, 0.49211782, 0.46667865, 0.24232654, 0.7421376,
            0.16839387, 0.9509948, 0.14007695, 0.75773144, 0.69407845, 0.5918919, 0.04692093,
            0.762922, 0.21589486, 0.2564574, 0.05703689, 0.17130233, 0.1785365, 0.43020758,
            0.54026544, 0.86454815, 0.2149228, 0.92304647, 0.6279961, 0.38870603, 0.9002247,
            0.6234512, 0.9132112, 0.9236824, 0.39895928, 0.8495973, 0.77339244, 0.7795671,
            0.68179756, 0.26511827, 0.70248216, 0.95133615, 0.6828541, 0.17350982, 0.93321526,
            0.8860448, 0.1298894, 0.8050948, 0.8641754, 0.15434536, 0.8135725, 0.42144233,
            0.35233787, 0.5023904, 0.93941313, 0.95214695, 0.26292253, 0.40754157, 0.53568405,
            0.45440432, 0.77755684, 0.3037366, 0.5276461, 0.28086394, 0.5651197, 0.7110755,
            0.4318458, 0.79006946, 0.5402848, 0.784176, 0.97129184, 0.5945981, 0.5620368,
            0.04885763, 0.09155878, 0.7166568, 0.49002212, 0.04703298, 0.7267018, 0.54574215,
            0.250633, 0.7031715, 0.6353514, 0.99749255, 0.7743095, 0.67304164, 0.00554333,
            0.1113743, 0.14250895, 0.48221946, 0.545842, 0.58763003, 0.99515516, 0.9610416,
            0.86321056, 0.67114294, 0.00256654, 0.53197616, 0.94388, 0.715203, 0.7596735,
            0.61149436, 0.89363664, 0.34156242,
        ],
    )
    .unwrap();
    let conv_layer36 = ConvolutionLayer::new(kernel36, 1, Padding::Valid);
    let target_output36: Array3<f32> = Array::from_shape_vec(
        (2, 19, 14),
        vec![
            0.4007396, 1.958683, 2.4188406, 3.3036919, 4.4455733, 4.940919, 4.2186527, 3.7475486,
            3.9424226, 4.044228, 2.6710215, 1.6825004, 1.1533313, 0.69100404, 1.5856657, 2.953185,
            4.215123, 6.181394, 7.46154, 7.9753175, 7.782161, 8.48134, 8.032532, 6.7260323,
            5.2337646, 3.7246928, 2.7152216, 1.9105093, 1.7315329, 4.3599257, 6.2549663, 7.525514,
            10.773684, 11.902641, 11.650997, 10.489763, 11.918399, 9.907744, 9.547833, 6.750728,
            5.1548705, 3.469629, 2.7411194, 5.9062147, 8.036073, 9.652832, 12.918963, 12.156876,
            12.848995, 12.682167, 12.732947, 15.233071, 11.519846, 7.8698807, 6.2550955, 4.5131273,
            3.9281602, 7.141939, 10.148758, 13.375893, 18.074633, 17.91148, 17.859175, 17.192049,
            17.747478, 18.182169, 15.738745, 11.415239, 7.9145813, 6.5114403, 3.5944216, 7.086467,
            10.309346, 13.372293, 18.309643, 18.399418, 17.689234, 18.311848, 17.599375, 18.077387,
            16.02537, 11.216223, 8.022681, 6.703167, 3.9878895, 7.3150682, 12.013977, 12.392882,
            18.14792, 17.148811, 17.680468, 19.542316, 17.292782, 19.029812, 15.054059, 12.829659,
            7.8468866, 5.9367495, 4.161086, 6.6530957, 10.537342, 12.989825, 16.70084, 16.352915,
            18.479397, 17.495241, 17.915104, 17.978874, 15.142688, 10.4649105, 6.587819, 5.435051,
            3.8115177, 6.3365927, 9.754172, 11.708784, 17.346182, 16.16629, 18.66307, 18.413532,
            16.432491, 18.866365, 14.049653, 13.085332, 7.035606, 5.3607135, 3.6381354, 6.2293406,
            9.324874, 12.091315, 16.182316, 16.153, 17.023869, 17.792997, 17.906067, 17.537815,
            13.165209, 11.985033, 7.0826683, 4.810312, 4.3490195, 6.8099465, 9.339588, 11.920511,
            16.50861, 15.862794, 15.71919, 16.702442, 16.588203, 16.877966, 12.863304, 10.329134,
            6.6810207, 4.7512784, 4.1619124, 5.9751573, 9.638038, 10.97144, 16.18378, 14.842906,
            14.871594, 15.960851, 16.322817, 15.79323, 13.582874, 10.390762, 5.969394, 5.111085,
            3.9725769, 7.159583, 10.548158, 10.765111, 17.76818, 15.257572, 17.483536, 16.464657,
            17.756702, 16.578352, 14.056168, 11.230346, 7.447277, 4.4444356, 4.2087975, 7.1290717,
            9.800745, 12.643248, 17.943092, 17.294209, 18.724472, 19.03432, 17.381023, 17.896336,
            14.152658, 9.243073, 7.1338205, 4.837699, 4.3411217, 8.070292, 10.705278, 12.539008,
            18.361904, 15.272747, 17.925722, 16.41769, 16.954996, 17.196156, 13.3266115, 9.549795,
            6.551692, 4.1429853, 3.22947, 5.9556394, 7.7005873, 9.573723, 13.349693, 13.354603,
            13.15566, 14.761574, 12.580703, 13.077394, 9.463033, 8.278433, 4.9897356, 3.5650892,
            2.1734133, 5.1906786, 5.3152246, 6.1853585, 10.39902, 9.066295, 9.692206, 10.401009,
            11.4645605, 10.478706, 8.109992, 5.8511286, 4.141908, 2.6130185, 2.1077871, 2.432997,
            4.356669, 4.8898587, 5.7591977, 7.143958, 6.5122147, 7.5304947, 6.730603, 7.5754013,
            5.7298536, 4.1313663, 2.2674472, 1.9159789, 1.171573, 1.4854486, 1.6086874, 2.8473716,
            3.18123, 3.2208333, 2.605054, 2.827475, 3.0764112, 3.5926085, 2.6033382, 2.0110002,
            1.594459, 1.2152165, 0.53838354, 1.7791488, 2.0479429, 3.101164, 3.9818459, 3.9186316,
            3.9342408, 3.8015509, 3.4684052, 3.5763693, 2.3505938, 1.5552007, 1.0302172,
            0.33774137, 1.8221357, 3.8778095, 5.4204597, 7.2620134, 9.540468, 9.380618, 9.436669,
            9.378491, 8.724749, 8.779678, 6.638128, 4.375533, 3.2990112, 1.3842545, 2.3229394,
            4.9348426, 7.8202977, 10.956576, 13.063503, 14.231399, 13.023142, 13.660491, 13.583586,
            12.9081745, 10.489879, 7.7929573, 5.787227, 2.3059726, 3.5081186, 6.792836, 9.2744875,
            14.665118, 15.892745, 16.738123, 16.760605, 15.736718, 17.07256, 16.355436, 13.340956,
            11.122862, 7.7199845, 3.3981605, 4.9286823, 9.298389, 12.064112, 17.800148, 20.338953,
            20.51176, 20.974611, 19.929802, 19.941286, 21.327099, 18.636383, 13.007277, 9.209329,
            4.6495647, 4.638682, 8.59424, 13.171154, 18.504532, 23.141054, 19.876682, 22.512043,
            20.410307, 21.817268, 23.061275, 19.30377, 15.479387, 10.577339, 5.2136993, 4.7453914,
            8.4269285, 13.535105, 18.333918, 22.276611, 20.659828, 21.277037, 20.282217, 21.863865,
            22.736422, 17.262234, 14.7468605, 9.117039, 4.9661074, 5.3778315, 7.5433865, 13.818831,
            17.470951, 20.404993, 21.16936, 20.628359, 22.37425, 20.356424, 23.072166, 18.332596,
            13.573122, 8.0300455, 4.5177326, 5.8051147, 7.090213, 13.302997, 17.409664, 20.541012,
            19.970415, 21.819927, 22.818113, 20.305561, 22.513433, 17.67542, 14.563342, 8.175933,
            4.5278735, 5.4729686, 7.5767074, 12.310924, 16.724316, 19.583181, 20.45996, 19.480764,
            21.322676, 20.97722, 21.199377, 16.359804, 12.933009, 8.578233, 3.8606586, 5.8009844,
            8.462316, 12.421943, 16.120705, 19.92332, 20.045177, 19.410671, 21.205936, 20.124462,
            22.16002, 15.325022, 13.135356, 7.797292, 4.186109, 5.08595, 7.24891, 11.2133465,
            14.359758, 19.004454, 17.3992, 17.148178, 20.432907, 19.196539, 19.709055, 15.108114,
            13.423336, 7.3550825, 3.5979924, 4.50125, 7.771701, 12.0227375, 15.255985, 20.456614,
            19.813148, 18.5789, 20.13485, 20.670994, 20.06973, 15.621628, 12.816869, 8.622797,
            3.7915545, 5.106252, 8.059362, 13.094147, 16.369846, 20.435057, 20.953667, 21.534187,
            21.959723, 21.801657, 20.976015, 16.99837, 11.890834, 8.288067, 3.2737207, 6.3453584,
            8.50416, 13.173236, 16.99682, 20.813894, 19.439793, 21.864206, 20.834068, 22.047165,
            20.659441, 16.109186, 11.911207, 7.3367753, 3.0806851, 4.6013126, 7.019451, 11.817366,
            12.675043, 18.957762, 16.733301, 17.671326, 17.635542, 17.961231, 17.651852, 13.328605,
            10.209296, 6.5646844, 3.0739493, 3.5895362, 5.2383323, 8.513057, 10.076389, 11.165051,
            13.379183, 12.337375, 13.225016, 13.805175, 12.909077, 9.095318, 7.09865, 4.255001,
            1.6598859, 3.1428652, 3.660786, 5.296703, 7.632766, 7.6212616, 7.85774, 9.01966,
            9.418773, 8.511729, 9.252619, 6.1127505, 5.056889, 2.3244603, 1.2713343, 1.8587826,
            2.351243, 2.047747, 3.962501, 3.6658156, 3.3624032, 3.6354156, 3.653553, 3.631141,
            4.213472, 3.128685, 2.4893007, 1.4862475, 0.9162593,
        ],
    )
    .unwrap();
    let current_output36: Array3<f32> = conv_layer36.convolve(&test_input36);

    assert!(
        arr_allclose(&current_output36, &target_output36),
        "{:?} was not equal to {:?}",
        current_output36,
        target_output36
    );
}
