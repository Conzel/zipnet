(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "../pkg/wasm.js":
/*!**********************!*\
  !*** ../pkg/wasm.js ***!
  \**********************/
/*! exports provided: encode_image, decode_image, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbg_new_693216e109162396, __wbg_stack_0ddaca5d1abfb52f, __wbg_error_09919627ac0992f5, __wbg_debug_6df4b1a327dd2e94, __wbg_error_ca520cb687b085a1, __wbg_error_644d3bc8c0537e80, __wbg_info_8bed0988e7416289, __wbg_log_681299aef22afa27, __wbg_warn_ca021eeadd0df9cd, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_bg.wasm */ \"../pkg/wasm_bg.wasm\");\n/* harmony import */ var _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasm_bg.js */ \"../pkg/wasm_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"encode_image\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"encode_image\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"decode_image\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"decode_image\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_string_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_693216e109162396\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_new_693216e109162396\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_0ddaca5d1abfb52f\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_stack_0ddaca5d1abfb52f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_09919627ac0992f5\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_09919627ac0992f5\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_debug_6df4b1a327dd2e94\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_debug_6df4b1a327dd2e94\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_ca520cb687b085a1\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_ca520cb687b085a1\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_644d3bc8c0537e80\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_644d3bc8c0537e80\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_info_8bed0988e7416289\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_info_8bed0988e7416289\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_681299aef22afa27\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_681299aef22afa27\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_warn_ca021eeadd0df9cd\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_warn_ca021eeadd0df9cd\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _wasm_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/wasm.js?");

/***/ }),

/***/ "../pkg/wasm_bg.js":
/*!*************************!*\
  !*** ../pkg/wasm_bg.js ***!
  \*************************/
/*! exports provided: encode_image, decode_image, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbg_new_693216e109162396, __wbg_stack_0ddaca5d1abfb52f, __wbg_error_09919627ac0992f5, __wbg_debug_6df4b1a327dd2e94, __wbg_error_ca520cb687b085a1, __wbg_error_644d3bc8c0537e80, __wbg_info_8bed0988e7416289, __wbg_log_681299aef22afa27, __wbg_warn_ca021eeadd0df9cd, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encode_image\", function() { return encode_image; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decode_image\", function() { return decode_image; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_693216e109162396\", function() { return __wbg_new_693216e109162396; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_0ddaca5d1abfb52f\", function() { return __wbg_stack_0ddaca5d1abfb52f; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_09919627ac0992f5\", function() { return __wbg_error_09919627ac0992f5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_debug_6df4b1a327dd2e94\", function() { return __wbg_debug_6df4b1a327dd2e94; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_ca520cb687b085a1\", function() { return __wbg_error_ca520cb687b085a1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_644d3bc8c0537e80\", function() { return __wbg_error_644d3bc8c0537e80; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_info_8bed0988e7416289\", function() { return __wbg_info_8bed0988e7416289; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_681299aef22afa27\", function() { return __wbg_log_681299aef22afa27; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_warn_ca021eeadd0df9cd\", function() { return __wbg_warn_ca021eeadd0df9cd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_bg.wasm */ \"../pkg/wasm_bg.wasm\");\n\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* Takes in the data of a png and returns.\n* @param {Uint8Array} buffer\n* @returns {Uint8Array}\n*/\nfunction encode_image(buffer) {\n    try {\n        const retptr = _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        var ptr0 = passArray8ToWasm0(buffer, _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"encode_image\"](retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 1);\n        return v1;\n    } finally {\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n    }\n}\n\n/**\n* Takes in the binary data of an encoded image data and returns the binary representation of\n* a png.\n* @param {Uint8Array} encoded_bin\n* @returns {Uint8Array}\n*/\nfunction decode_image(encoded_bin) {\n    try {\n        const retptr = _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        var ptr0 = passArray8ToWasm0(encoded_bin, _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"decode_image\"](retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 1);\n        return v1;\n    } finally {\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n    }\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nfunction __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        _wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1);\n    }\n};\n\nfunction __wbg_debug_6df4b1a327dd2e94(arg0, arg1, arg2, arg3) {\n    console.debug(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nfunction __wbg_error_ca520cb687b085a1(arg0) {\n    console.error(getObject(arg0));\n};\n\nfunction __wbg_error_644d3bc8c0537e80(arg0, arg1, arg2, arg3) {\n    console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nfunction __wbg_info_8bed0988e7416289(arg0, arg1, arg2, arg3) {\n    console.info(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nfunction __wbg_log_681299aef22afa27(arg0, arg1, arg2, arg3) {\n    console.log(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nfunction __wbg_warn_ca021eeadd0df9cd(arg0, arg1, arg2, arg3) {\n    console.warn(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_bg.js?");

/***/ }),

/***/ "../pkg/wasm_bg.wasm":
/*!***************************!*\
  !*** ../pkg/wasm_bg.wasm ***!
  \***************************/
/*! exports provided: memory, encode_image, decode_image, __wbindgen_add_to_stack_pointer, __wbindgen_malloc, __wbindgen_free, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_bg.js */ \"../pkg/wasm_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_zipnet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-zipnet */ \"../pkg/wasm.js\");\n\nconst { Image } = __webpack_require__(/*! image-js */ \"./node_modules/image-js/src/index.js\");\n\n// wasm.greet();\n\n/// Prompts user to download the passed data\n/// https://stackoverflow.com/questions/23451726/saving-binary-data-as-file-using-javascript-from-a-browser\nfunction promptDownload(data) {\n    var saveByteArray = (function () {\n        var a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        return function (data, name) {\n            var blob = new Blob(data, { type: \"octet/stream\" }),\n                url = window.URL.createObjectURL(blob);\n            a.href = url;\n            a.download = name;\n            a.click();\n            window.URL.revokeObjectURL(url);\n        };\n    }());\n    saveByteArray([data], \"zipnet-enc-\" + Date.now() + \".bin\");\n}\n\nvar last_bpp = undefined;\n\n/// Displays a file selected by the user in a preview.\nfunction previewImageToEncode() {\n    var preview = document.getElementById(\"encodedPreview\");\n    var file = document.getElementById(\"imgInput\").files[0];\n\n    if (file) {\n        file.arrayBuffer().then(\n            (buffer) => {\n                enforceSizeRestrictions(buffer, 256, 256);\n                displayBuffer(preview, buffer)\n            }\n        )\n    } else {\n        preview.src = \"\";\n    }\n}\n\nfunction enforceSizeRestrictions(buffer, max_height, max_width) {\n    Image.load(buffer).then(\n        (image) => {\n            if (image.width > max_width || image.height > max_height) {\n                document.getElementById(\"warn_size\").innerHTML = \"<b>WARNING: Your image has dimensions (H,W) of \" + max_height + \"x\" + max_width + \". We strongly recommend using a maximum image size of 256x256 for speed reasons (see <i>Detailed Usage</i> section).</b>\"\n            }\n            else {\n                document.getElementById(\"warn_size\").innerHTML = \"\"\n            }\n        }\n    )\n}\n\n/// Encodes the given image with the given JPEG quality.\nfunction imgToJpeg(quality, image) {\n    return image.toBuffer({\n        format: \"jpeg\",\n        encoder: {\n            quality: quality\n        }\n    })\n}\n\n/// Finds the closest bpp to the target.\n/// We expect an image-js Image.\nfunction findBpp(target_bpp, image) {\n    var n_pixels = getNumPixels(image);\n    var high = 100;\n    var low = 0;\n    var n_it = 0; // failswitch\n    while (high != low && n_it < 20) {\n        n_it += 1;\n        var current = Math.round((high + low) / 2);\n        var buffer = imgToJpeg(current, image);\n        var bits = 8 * buffer.length;\n        var bpp = bits / n_pixels;\n        if (bpp > target_bpp) {\n            high = current - 1;\n        }\n        else if (bpp < target_bpp) {\n            low = current;\n        }\n    }\n    // So we are definitely over the target bpp, wouldn't want to be unfair\n    // by giving JPEG less bpp.\n    if (bpp < target_bpp) {\n        current += 1;\n    }\n    return { buffer: buffer, quality: current, bpp: bpp };\n}\n\n/// Call back for failing to read an image.\nfunction imageReadFail(error) {\n    alert(\"Could not read image: \" + error);\n}\n\n/// Returns the number of pixel at the given Path. Path\n/// has to be loadable by the Image.load function.\n/// Returns number of pixel in the image.\n/// A pixel is the same in RGB and grayscale images.\nfunction getNumPixels(image) {\n    return image.width * image.height;\n}\n\nfunction displayJpegStats(bpp, psnr) {\n    document.getElementById(\"statsJpeg\").innerHTML = \"JPEG: \" + bpp + \" bpp, \" + \" PSNR\";\n}\n\nfunction calculatePsnr(image1, image2) {\n    var p1 = image1.getPixelsArray();\n    var p2 = image2.getPixelsArray();\n    if (p1.length != p2.length) {\n        console.log(\"Images had two different array lengths.\");\n        return -1;\n    }\n    var error_sum = 0;\n    for (var i = 0; i < p1.length; i++) {\n        for (var j = 0; j < 3; j++) {\n            error_sum += Math.pow(p1[i][j] - p2[i][j], 2);\n        }\n    }\n    var mse = error_sum / (p1.length * 3);\n    return 20 * Math.log10(255) - 10 * Math.log10(mse);\n}\n\n/// Displays a JPEG image that has roughly the target BPM.\nfunction displaySimilarBppJpeg(image, bpp) {\n    var view = document.getElementById(\"jpeg_image\");\n    var bpp_result = findBpp(bpp, image);\n    displayBuffer(view, bpp_result.buffer);\n    return bpp_result;\n}\n\nfunction activateDecoderTags() {\n    document.getElementById(\"dec-tag-jpeg\").innerHTML = \"JPEG:\";\n    document.getElementById(\"dec-tag-ours\").innerHTML = \"Zipnet: \";\n}\n\n/// Starts the encoding process and then opens a download prompt for the user.\nfunction downloadEncodedImage() {\n    var file = document.getElementById(\"imgInput\").files[0];\n    var reader = new FileReader();\n\n    // Fallout if no file is selected beforehand.\n    if (file) {\n        file.arrayBuffer().then(\n            (array_buffer) => {\n                var data = new Uint8Array(array_buffer);\n                // Measuring exection time for the statistics\n                var start = performance.now();\n                var encoded = wasm_zipnet__WEBPACK_IMPORTED_MODULE_0__[\"encode_image\"](data);\n                var end = performance.now();\n\n                Image.load(data).then(\n                    (image) => {\n                        var bpp = (encoded.length * 8) / getNumPixels(image);\n                        displayEncoderStats(data.length, encoded.length, bpp, end - start);\n                        last_bpp = bpp;\n                    }\n                ).catch(imageReadFail);\n\n                promptDownload(encoded);\n            }, imageFileError\n        )\n    }\n    else {\n        alert(\"Please first select an image to encode.\");\n        console.log(\"Tried to encode without selected image.\");\n        return;\n    }\n}\n\nfunction imageFileError(err) {\n    alert(\"Couldn't read image. Error: \" + err);\n}\n\nfunction displayEncoderStats(prev_size, new_size, bpp, time) {\n    document.getElementById(\"statsEncoded\").innerHTML = \"<p> Previous size: \"\n        + prev_size + \" Byte, Encoded size: \" + new_size + \" Byte (\" + (new_size / prev_size * 100).toFixed(2) + \" % of original), \" + bpp.toFixed(2) + \" bpp\" + \", Encoding time: \" + time.toFixed() + \" ms</p>\";\n}\n\nfunction displayDecoderStats(time) {\n    document.getElementById(\"statsDecoded\").innerHTML = \"<p>Decoding time: \" + time.toFixed() + \" ms </p>\";\n}\n\nfunction displayDecoderStatsExtended(time, bpp_zipnet, bpp_jpeg, psnr_zipnet, psnr_jpeg) {\n    document.getElementById(\"statsDecoded\").innerHTML = \"<p>Decoding time: \" + time.toFixed() + \" ms <br><span style='width: 3.2em; display:inline-block'>Zipnet:</span>\" + bpp_zipnet.toFixed(2) + \" bpp&ensp;\" + psnr_zipnet.toFixed(2) + \" PSNR <br><span style='width: 3.2em; display:inline-block'>JPEG:</span>\" + bpp_jpeg.toFixed(2) + \" bpp&ensp;\" + psnr_jpeg.toFixed(2) + \" PSNR</p>\";\n}\n\n/// Displays the image at the buffer at the .src attribute of the given preview element.\nfunction displayBuffer(view, buffer) {\n    // Puts the decoded data into the preview (in a convoluted way)\n    var blob = new Blob([buffer]);\n    var view_reader = new FileReader();\n    view_reader.onload = function (e) {\n        view.height = \"200\";\n        view.src = e.target.result;\n        view.style.display = \"block\";\n    }\n    view_reader.readAsDataURL(blob);\n}\n\n/// Decodes image and displays it in the preview, as well as a JSON representation\n/// if possible.\nfunction decodeImageAndPreview() {\n    var preview = document.getElementById(\"decodedPreview\");\n    var file = document.getElementById('encodedInput').files[0];\n    // original is used to calculate PSNR and JPEG reconstructions\n    var original_file = document.getElementById(\"imgInput\").files[0];\n\n    if (file) {\n        file.arrayBuffer().then(\n            (array_buffer) => {\n                var data = new Uint8Array(array_buffer);\n\n                // Measuring time for the performance stats.\n                var start = performance.now();\n                var decoded = wasm_zipnet__WEBPACK_IMPORTED_MODULE_0__[\"decode_image\"](data).buffer;\n                var end = performance.now();\n                displayBuffer(preview, decoded);\n\n                if (original_file && last_bpp) {\n                    original_file.arrayBuffer().then(\n                        (orig_array_buffer) => Image.load(orig_array_buffer)\n                    ).then(\n                        (im_orig) => {\n                            var jpeg_res = displaySimilarBppJpeg(im_orig, last_bpp);\n\n                            Promise.all([Image.load(jpeg_res.buffer), Image.load(decoded)]).then(\n                                (images) => {\n                                    var im_jpeg = images[0];\n                                    var im_dec = images[1];\n                                    var psnr_zipnet = calculatePsnr(im_orig, im_dec);\n                                    var psnr_jpeg = calculatePsnr(im_orig, im_jpeg);\n                                    activateDecoderTags();\n                                    displayDecoderStatsExtended(end - start, last_bpp, jpeg_res.bpp, psnr_zipnet, psnr_jpeg);\n                                }\n                            )\n                        }\n                    )\n                }\n                else {\n                    displayDecoderStats(end - start);\n                }\n            }\n        )\n    }\n}\n\n/// Prompts the user to download the decoded image that is shown in the decoder preview.\nfunction downloadDecodedImage() {\n    var img_dataurl = document.getElementById(\"decodedPreview\").src;\n    Image.load(img_dataurl).then(\n        (_) => {\n            var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n            a.href = img_dataurl;\n            a.download = \"zipnet-decoded-\" + Date.now() + \".png\";\n            a.click();\n            window.URL.revokeObjectURL(img_dataurl);\n        })\n        .catch(\n            (error) => {\n                alert(\"Error getting your download ready. Maybe you didn't upload an image or didn't wait for the decoding process to finish?\");\n                console.log(\"Download error: \" + error);\n            });\n}\n\nconsole.log(\"Reload\");\ndocument.getElementById('imgInput').addEventListener(\"change\", previewImageToEncode);\ndocument.getElementById(\"downloadEncoded\").addEventListener(\"click\", downloadEncodedImage);\ndocument.getElementById('encodedInput').addEventListener(\"change\", decodeImageAndPreview);\ndocument.getElementById(\"downloadDecoded\").addEventListener(\"click\", downloadDecodedImage);\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);