use ml::convolutions::*;
use ndarray::{array, Array, Array4, Dimension};
// Template test file for testing the Rust implementation against the Python
// one. This file has been automatically generated by Jinja2 via the
// script generate_tests_torch.py.
// Please do not change this file by hand.

fn arr_allclose<D: Dimension>(arr1: &Array<f32, D>, arr2: &Array<f32, D>) -> bool {
    (arr1 - arr2).map(|x| (*x as f32).abs()).sum() < 1e-3
}

#[test]
fn test_py_implementation_random_arrays_conv2d() {
    let test_input1 = array![[
        [0.17014849, 0.43056882, 0.5715329, 0.06520256, 0.12669588],
        [0.75015649, 0.98379819, 0.55574155, 0.04181346, 0.23677547],
        [0.51154924, 0.02844254, 0.60484786, 0.72306337, 0.22177844],
        [0.16487044, 0.46672951, 0.54035134, 0.69223571, 0.27845532],
        [0.66966338, 0.41083884, 0.45831479, 0.70402897, 0.61773261]
    ]];

    let kernel1: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.92697753, 0.56033562, 0.90980128, 0.26970649, 0.24242379, 0.79448488, 0.75231163,
            0.96925828, 0.12854726, 0.91485179, 0.33565241, 0.37189406, 0.55898563, 0.5888119,
            0.44166553, 0.90343251, 0.2795916, 0.75676637, 0.85028299, 0.96145765, 0.55666793,
            0.84558665, 0.04742411, 0.23985275, 0.07658575, 0.71978642, 0.13313323,
        ],
    )
    .unwrap();
    let conv_layer1 = ConvolutionLayer::new(kernel1, 1, Padding::Valid);
    let target_output1 = array![
        [
            [2.29147887, 1.91258049, 2.214118],
            [3.02353168, 2.95401716, 2.38188958],
            [2.58825684, 2.67377782, 2.80898142]
        ],
        [
            [2.68461347, 2.24761176, 1.94815421],
            [2.48137236, 2.89010525, 2.36475253],
            [2.37480855, 2.41483092, 2.78952789]
        ],
        [
            [1.83125174, 2.35398054, 1.74418366],
            [2.89258265, 2.13711071, 1.82019758],
            [1.49817824, 2.04962969, 2.51356602]
        ]
    ];
    let current_output1 = conv_layer1.convolve(&test_input1);

    assert!(
        arr_allclose(&current_output1, &target_output1),
        "{:?} was not equal to {:?}",
        current_output1,
        target_output1
    );

    let test_input2 = array![[
        [0.69580542, 0.12692, 0.38484825, 0.77533601, 0.52113837],
        [0.43646371, 0.14352315, 0.89971072, 0.64410552, 0.04471071],
        [0.76767201, 0.43464628, 0.16569944, 0.18875163, 0.12285258],
        [0.27811149, 0.53907282, 0.50665719, 0.97435566, 0.39133722],
        [0.7964828, 0.98891903, 0.35985747, 0.00756764, 0.53660642]
    ]];

    let kernel2: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.8659267, 0.8576183, 0.81628793, 0.94803988, 0.45711016, 0.89837223, 0.8462714,
            0.70536446, 0.92891332, 0.0067116, 0.65220493, 0.72789614, 0.00785977, 0.32536872,
            0.09833383, 0.1022715, 0.7567798, 0.23972042, 0.38848336, 0.00744711, 0.87157013,
            0.07988323, 0.62830051, 0.82418534, 0.16570753, 0.64872344, 0.14438818,
        ],
    )
    .unwrap();
    let conv_layer2 = ConvolutionLayer::new(kernel2, 1, Padding::Valid);
    let target_output2 = array![
        [
            [3.42334175, 2.85887408, 2.99863172],
            [3.39702249, 3.79771042, 3.20127797],
            [3.84387517, 3.38830328, 2.49126482]
        ],
        [
            [0.95334184, 1.38851666, 1.2978754],
            [1.47303808, 1.80462384, 1.41646957],
            [1.5527643, 0.88856351, 0.7442953]
        ],
        [
            [1.90634584, 2.04231882, 1.29054689],
            [1.89471781, 1.47693038, 1.39891922],
            [2.04985619, 1.8974545, 1.29006767]
        ]
    ];
    let current_output2 = conv_layer2.convolve(&test_input2);

    assert!(
        arr_allclose(&current_output2, &target_output2),
        "{:?} was not equal to {:?}",
        current_output2,
        target_output2
    );

    let test_input3 = array![[
        [0.62861935, 0.34163022, 0.03235205, 0.25922647, 0.59344524],
        [0.9308157, 0.22162326, 0.91818294, 0.97700956, 0.18019114],
        [0.775954, 0.14120784, 0.34261811, 0.5417864, 0.77682263],
        [0.34603763, 0.61141032, 0.97160413, 0.51576948, 0.50755494],
        [0.66598025, 0.62932201, 0.60627973, 0.27978492, 0.28792505]
    ]];

    let kernel3: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.75477028, 0.0509604, 0.10449678, 0.89887627, 0.65723281, 0.69558298, 0.36264111,
            0.37613921, 0.92412781, 0.39898983, 0.69086773, 0.55113011, 0.36253916, 0.3678665,
            0.88718722, 0.69587743, 0.48700338, 0.71353725, 0.98625484, 0.22876499, 0.75677498,
            0.56175294, 0.55667271, 0.70358317, 0.92333792, 0.85647198, 0.36252776,
        ],
    )
    .unwrap();
    let conv_layer3 = ConvolutionLayer::new(kernel3, 1, Padding::Valid);
    let target_output3 = array![
        [
            [2.7674017, 2.44961214, 2.73835301],
            [3.09175467, 2.10894346, 2.98142147],
            [3.05588508, 2.44238782, 2.52394199]
        ],
        [
            [2.59145784, 2.23813605, 2.42777848],
            [2.89959693, 3.18578672, 3.44280195],
            [3.01087093, 2.56113219, 2.69500732]
        ],
        [
            [2.97651029, 2.48378181, 2.78875661],
            [3.61453938, 3.40291405, 3.82892013],
            [3.64893889, 3.07663822, 3.14356351]
        ]
    ];
    let current_output3 = conv_layer3.convolve(&test_input3);

    assert!(
        arr_allclose(&current_output3, &target_output3),
        "{:?} was not equal to {:?}",
        current_output3,
        target_output3
    );

    let test_input4 = array![[
        [0.93732308, 0.01684272, 0.34317795, 0.92199302, 0.36392413],
        [0.7462054, 0.7556754, 0.31284245, 0.40316649, 0.73762665],
        [0.79263411, 0.36348056, 0.84374106, 0.03665259, 0.23846497],
        [0.82509994, 0.97324104, 0.96826524, 0.77620416, 0.84270752],
        [0.4298905, 0.76771309, 0.54514445, 0.78783929, 0.21897991]
    ]];

    let kernel4: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.97565903, 0.73295322, 0.69994045, 0.86701023, 0.76087948, 0.62354497, 0.14890751,
            0.86106661, 0.21943341, 0.16440929, 0.60892437, 0.86124849, 0.02602104, 0.30423533,
            0.50874046, 0.16869895, 0.33294667, 0.17949399, 0.33126613, 0.11996287, 0.21606163,
            0.87119263, 0.33579683, 0.2313126, 0.25765271, 0.37489849, 0.30113343, 0.8142977,
            0.42324699, 0.8179498, 0.92175004, 0.21606776, 0.19149331, 0.42403409, 0.14780204,
            0.46443273, 0.00207204, 0.359202, 0.90198509, 0.21363449, 0.6390296, 0.59770577,
            0.81350477, 0.36853562, 0.90738844, 0.78289449, 0.98120834, 0.67269244, 0.46724817,
            0.17302094,
        ],
    )
    .unwrap();
    let conv_layer4 = ConvolutionLayer::new(kernel4, 1, Padding::Valid);
    let target_output4 = array![[[6.42907524]], [[8.08070946]]];
    let current_output4 = conv_layer4.convolve(&test_input4);

    assert!(
        arr_allclose(&current_output4, &target_output4),
        "{:?} was not equal to {:?}",
        current_output4,
        target_output4
    );

    let test_input5 = array![[
        [0.39839588, 0.78055173, 0.85763607, 0.73359811, 0.52934056],
        [0.95292788, 0.78965247, 0.46750202, 0.08403921, 0.73126567],
        [0.34934824, 0.34592319, 0.54770445, 0.68714256, 0.29283326],
        [0.53392634, 0.88501508, 0.69093564, 0.44388365, 0.9043074],
        [0.99497239, 0.64743849, 0.36691285, 0.53965846, 0.53726039]
    ]];

    let kernel5: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.47547423, 0.44373917, 0.34716286, 0.21774843, 0.94379529, 0.51856594, 0.15765554,
            0.93507128, 0.86233215, 0.81734436, 0.65661539, 0.38794869, 0.28848995, 0.58141308,
            0.06870039, 0.78543747, 0.47194286, 0.12733267, 0.61117267, 0.25675833, 0.74741314,
            0.45714312, 0.96499193, 0.57969916, 0.52087113, 0.93666833, 0.13247306, 0.7087714,
            0.17877894, 0.40766998, 0.69067845, 0.96753695, 0.224454, 0.28950994, 0.75431514,
            0.99582965, 0.81208641, 0.95363239, 0.77037488, 0.683158, 0.16371862, 0.42877796,
            0.73003109, 0.94567369, 0.05700503, 0.19623296, 0.44457256, 0.5512328, 0.15101007,
            0.25140873,
        ],
    )
    .unwrap();
    let conv_layer5 = ConvolutionLayer::new(kernel5, 1, Padding::Valid);
    let target_output5 = array![[[7.57492256]], [[7.75947571]]];
    let current_output5 = conv_layer5.convolve(&test_input5);

    assert!(
        arr_allclose(&current_output5, &target_output5),
        "{:?} was not equal to {:?}",
        current_output5,
        target_output5
    );

    let test_input6 = array![[
        [0.2031063, 0.55377507, 0.36415587, 0.70193703, 0.27669304],
        [0.85076063, 0.00186597, 0.3316532, 0.15485734, 0.35000806],
        [0.42372493, 0.03995521, 0.50671971, 0.38907994, 0.37287286],
        [0.21294773, 0.86463558, 0.10154326, 0.75313084, 0.7910046],
        [0.15368015, 0.25977604, 0.40315585, 0.635939, 0.25689794]
    ]];

    let kernel6: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.13678746, 0.43744904, 0.6658951, 0.56468201, 0.70429956, 0.67241763, 0.15790685,
            0.25059524, 0.6432024, 0.60438922, 0.45131882, 0.96080875, 0.40131756, 0.60942906,
            0.70350941, 0.64735606, 0.05433872, 0.7478619, 0.24740443, 0.35665986, 0.00020906,
            0.23741228, 0.57013199, 0.63988189, 0.71328582, 0.90739846, 0.82469879, 0.1319153,
            0.68764621, 0.84672896, 0.18134635, 0.90260192, 0.54676576, 0.33139232, 0.83673465,
            0.05539654, 0.55546729, 0.91498041, 0.9791666, 0.90003225, 0.6329186, 0.30872978,
            0.30553623, 0.04431259, 0.52872152, 0.3358437, 0.72178565, 0.72704844, 0.85191243,
            0.07464863,
        ],
    )
    .unwrap();
    let conv_layer6 = ConvolutionLayer::new(kernel6, 1, Padding::Valid);
    let target_output6 = array![[[4.6137495]], [[5.29087067]]];
    let current_output6 = conv_layer6.convolve(&test_input6);

    assert!(
        arr_allclose(&current_output6, &target_output6),
        "{:?} was not equal to {:?}",
        current_output6,
        target_output6
    );

    let test_input7 = array![[
        [
            0.86783801, 0.58492021, 0.14913943, 0.18325551, 0.40498126, 0.75359419, 0.01821492,
            0.59172363, 0.91982274, 0.52876538, 0.71512849, 0.38420153, 0.517026, 0.51501412,
            0.26934662
        ],
        [
            0.73560452, 0.97902701, 0.63627543, 0.27803295, 0.32063981, 0.83432082, 0.78711735,
            0.28247103, 0.78126878, 0.52701458, 0.4719829, 0.47535484, 0.23715672, 0.44046767,
            0.90286418
        ],
        [
            0.66611386, 0.02649495, 0.31939759, 0.1660805, 0.5121102, 0.17436478, 0.313714,
            0.47244505, 0.99067805, 0.90646706, 0.29454134, 0.99321058, 0.12515199, 0.17643406,
            0.16320723
        ],
        [
            0.48754973, 0.53866875, 0.63589709, 0.8935865, 0.82249757, 0.92702304, 0.10556214,
            0.2828355, 0.14977625, 0.53714937, 0.06378802, 0.44972161, 0.79292246, 0.53001659,
            0.68762497
        ],
        [
            0.47446238, 0.73655207, 0.42605234, 0.65925771, 0.32377991, 0.42867732, 0.87574344,
            0.70010745, 0.01496939, 0.78416554, 0.61210718, 0.98323473, 0.93168049, 0.05175687,
            0.70876055
        ],
        [
            0.52122001, 0.68573385, 0.415587, 0.87644995, 0.73337436, 0.54510111, 0.20423086,
            0.5554448, 0.48578473, 0.27645711, 0.91929458, 0.89205094, 0.34320405, 0.4283556,
            0.3897719
        ],
        [
            0.0636046, 0.72917302, 0.1946033, 0.86342539, 0.6576018, 0.96574591, 0.22873744,
            0.47843248, 0.22157177, 0.91623065, 0.02157675, 0.44649429, 0.27921922, 0.68582704,
            0.75294507
        ],
        [
            0.79195857, 0.22560764, 0.88778717, 0.80092112, 0.00003577, 0.97378775, 0.9146247,
            0.13869576, 0.70596468, 0.0936791, 0.26477472, 0.52025, 0.0330946, 0.17754779,
            0.41998119
        ],
        [
            0.02919355, 0.82382417, 0.41568551, 0.49590722, 0.69720375, 0.71553151, 0.40795937,
            0.15397235, 0.02265206, 0.70904147, 0.75877124, 0.67035423, 0.39483563, 0.86222315,
            0.99930576
        ],
        [
            0.84902793, 0.26427645, 0.86764544, 0.24274232, 0.69865254, 0.57399909, 0.76205967,
            0.29289714, 0.88402118, 0.89428535, 0.77575279, 0.16431308, 0.48939566, 0.56055365,
            0.46453193
        ]
    ]];

    let kernel7: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.9573795, 0.88995079, 0.16098963, 0.63514714, 0.81047396, 0.29953358, 0.46075394,
            0.02808736, 0.59781087, 0.88556441, 0.61877849, 0.95374666, 0.61971681, 0.3379795,
            0.13108306, 0.30692965, 0.33537497, 0.01351478, 0.45529486, 0.66261278, 0.94970221,
            0.7403127, 0.06039312, 0.08292098, 0.80679556, 0.1354166, 0.25606222,
        ],
    )
    .unwrap();
    let conv_layer7 = ConvolutionLayer::new(kernel7, 1, Padding::Valid);
    let target_output7 = array![
        [
            [
                3.32528758, 2.06347394, 1.5545522, 1.53869164, 2.60532761, 2.45699477, 2.4050653,
                3.22809649, 3.18904901, 3.08384061, 2.10430837, 2.1035459, 1.9349314
            ],
            [
                2.83811283, 2.67400312, 2.2088635, 2.24762917, 2.20486045, 2.65042663, 2.15575171,
                2.88071299, 2.86732173, 2.63121367, 2.45866442, 2.06851053, 1.82706511
            ],
            [
                2.14343476, 2.20696974, 2.31889629, 2.72378993, 2.68607116, 1.9218961, 1.65354168,
                2.73360229, 2.74701309, 2.78371906, 2.69516993, 2.68784118, 2.29669833
            ],
            [
                2.58231544, 3.08765745, 3.0928762, 3.29656267, 2.92014313, 2.80768251, 1.90512228,
                1.61707425, 2.24125504, 2.6185708, 2.70748091, 3.29337907, 2.5906899
            ],
            [
                2.35575151, 3.08295012, 2.74773192, 3.29628277, 2.26809216, 2.71801114, 2.44057655,
                2.41354179, 1.7594322, 3.33131647, 3.21011543, 3.37542081, 2.33207488
            ],
            [
                2.76780772, 2.65462112, 2.74786544, 3.90133214, 3.06315017, 2.29240775, 2.21480441,
                1.90623343, 2.23507738, 2.32119203, 2.34485221, 2.29052138, 2.00256824
            ],
            [
                1.97802377, 2.80072522, 2.8958478, 3.04357433, 3.17429805, 3.03968382, 1.79106665,
                1.9865036, 2.11858082, 2.14693975, 1.66717196, 2.03221083, 2.09313917
            ],
            [
                2.82995486, 2.43496203, 3.26176381, 2.49256325, 2.9524436, 3.06078577, 2.39124441,
                1.79907227, 2.51438427, 2.20724392, 2.51992965, 1.98471379, 2.02515697
            ]
        ],
        [
            [
                2.36051893, 1.76075578, 1.32268, 1.74673343, 1.64608347, 2.22819543, 2.21334815,
                2.59517837, 3.16001225, 2.21605062, 2.27357578, 1.93303311, 1.54740715
            ],
            [
                2.66658926, 2.06269145, 1.86848783, 2.10185528, 2.5331111, 2.0950737, 2.23019457,
                2.12695169, 2.65401697, 2.19595933, 1.65404034, 2.07985735, 1.93267536
            ],
            [
                1.87686837, 1.42324102, 2.03418517, 1.90025938, 1.95245194, 1.88110614, 2.19944572,
                2.42274308, 2.27771163, 2.80490971, 1.82045949, 2.35638022, 1.4492172
            ],
            [
                2.36595082, 2.77132344, 2.86121035, 3.28092456, 2.27367473, 2.0527339, 1.44817245,
                1.73430908, 1.13463879, 2.17101431, 2.51075602, 2.72009087, 2.62801099
            ],
            [
                2.15822315, 2.52570844, 2.10212469, 2.55408812, 2.58152652, 2.44847608, 1.83464324,
                2.15532827, 1.97284555, 2.90439439, 3.11537671, 2.46150374, 2.26751018
            ],
            [
                1.92436469, 2.70897341, 2.64952779, 2.89276433, 2.28440046, 2.48486233, 1.6571511,
                1.82822573, 2.17951846, 2.42265749, 2.15047789, 2.04502797, 1.51963949
            ],
            [
                1.66740775, 2.53345776, 2.45798802, 3.11231279, 2.30660057, 2.74236727, 1.59331286,
                1.8359102, 1.5426079, 1.94747221, 1.3689959, 1.92896819, 1.94918978
            ],
            [
                2.39962173, 2.60442686, 2.1555829, 2.59136581, 2.61953235, 2.59778571, 2.22099686,
                1.24348783, 1.87055039, 2.06358004, 1.63632607, 1.534567, 1.5513016
            ]
        ],
        [
            [
                2.20359159, 1.43259323, 1.49967372, 1.60983896, 1.57116568, 1.90988994, 2.50924563,
                2.42849827, 3.09511137, 2.56309438, 1.87315881, 2.27282476, 1.27614629
            ],
            [
                2.73824906, 1.93359458, 1.91203845, 2.36943817, 2.6781621, 2.19152212, 1.7922585,
                2.01756191, 2.17564845, 2.33251429, 1.35891044, 2.15528297, 2.2617023
            ],
            [
                1.66199851, 1.71346354, 1.8506701, 2.05411673, 1.86379588, 2.09577179, 2.30956459,
                2.76305056, 1.75502813, 2.95725322, 1.91676724, 2.06014919, 1.94509661
            ],
            [
                2.23367643, 2.97487354, 2.68659401, 3.32140255, 2.14498901, 1.79859257, 1.43394208,
                1.90707922, 1.25865328, 1.98890793, 2.620224, 2.89783835, 2.55158782
            ],
            [
                1.77032077, 2.68492317, 1.80202878, 2.69310045, 2.5758388, 2.83492732, 1.40792787,
                2.18747663, 1.86865163, 2.88701344, 2.72727847, 2.40445685, 1.95480967
            ],
            [
                2.09045815, 2.55044174, 2.54191995, 3.05720472, 1.81927025, 2.62447286, 2.07645297,
                1.512362, 2.14862466, 2.54346395, 1.69421196, 1.91432583, 1.27910876
            ],
            [
                1.61202586, 2.41591334, 2.57191277, 3.09743047, 2.05508757, 2.50523591, 1.73140001,
                1.69672239, 1.58730984, 1.8304249, 1.6050843, 2.25658989, 2.05788207
            ],
            [
                2.40198374, 2.5205946, 2.24222136, 2.19548488, 2.94360518, 2.38953996, 2.37283039,
                1.37905812, 1.79042733, 2.20713043, 1.9050982, 1.36140299, 1.54850745
            ]
        ]
    ];
    let current_output7 = conv_layer7.convolve(&test_input7);

    assert!(
        arr_allclose(&current_output7, &target_output7),
        "{:?} was not equal to {:?}",
        current_output7,
        target_output7
    );

    let test_input8 = array![[
        [
            0.80891573, 0.97702754, 0.41249681, 0.43591018, 0.87333111, 0.1396195, 0.5204747,
            0.88564532, 0.29781444, 0.21130918, 0.83071965, 0.3337948, 0.97835617, 0.42070098,
            0.55396016
        ],
        [
            0.16172562, 0.76349668, 0.36205767, 0.48491393, 0.49804138, 0.60014838, 0.65126087,
            0.36919112, 0.11615072, 0.26983074, 0.86905251, 0.74464162, 0.47161298, 0.72900704,
            0.842964
        ],
        [
            0.21457536, 0.93840097, 0.41665936, 0.05351101, 0.43856344, 0.72531127, 0.85203244,
            0.41512332, 0.35101932, 0.73887608, 0.3592986, 0.67414793, 0.99658078, 0.31170342,
            0.86057029
        ],
        [
            0.94308546, 0.8192489, 0.31478795, 0.75032399, 0.36604243, 0.78454617, 0.039194,
            0.23696694, 0.2418382, 0.24788351, 0.56222231, 0.15428482, 0.50688076, 0.37682603,
            0.44385925
        ],
        [
            0.00051633, 0.53422697, 0.5675659, 0.53845215, 0.2130759, 0.86445095, 0.43288101,
            0.62559181, 0.39425651, 0.07226853, 0.09869356, 0.32627373, 0.85439629, 0.85603164,
            0.25422712
        ],
        [
            0.24929269, 0.36793317, 0.39957173, 0.90795348, 0.86575798, 0.82237727, 0.60374194,
            0.76580248, 0.0215734, 0.47320398, 0.65947816, 0.86392706, 0.85666667, 0.48541846,
            0.54855826
        ],
        [
            0.58605551, 0.158874, 0.10558709, 0.19664533, 0.39609066, 0.27843866, 0.49128444,
            0.75033016, 0.35650546, 0.46870382, 0.61598491, 0.25470009, 0.17250927, 0.07203952,
            0.87246574
        ],
        [
            0.14018923, 0.12091745, 0.47703981, 0.43290495, 0.63567976, 0.76194442, 0.23835071,
            0.95481588, 0.49641545, 0.70660178, 0.10666513, 0.06810815, 0.79673209, 0.29373888,
            0.55241187
        ],
        [
            0.23906927, 0.18915932, 0.02753429, 0.14385741, 0.54197413, 0.71984385, 0.12837073,
            0.55637453, 0.14355855, 0.10225686, 0.87554918, 0.62895285, 0.21388301, 0.30016333,
            0.49605926
        ],
        [
            0.82451067, 0.45287652, 0.68369415, 0.28745724, 0.50312577, 0.26911621, 0.92149793,
            0.71658926, 0.04745785, 0.55642488, 0.34654749, 0.83168657, 0.8410765, 0.7668131,
            0.84094905
        ]
    ]];

    let kernel8: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.6012723, 0.92569946, 0.66010622, 0.43380973, 0.62281451, 0.45852852, 0.61445724,
            0.52457897, 0.06486581, 0.14233574, 0.13930365, 0.58387869, 0.45914945, 0.30819194,
            0.70949814, 0.88037591, 0.69272485, 0.50569828, 0.73587477, 0.58652497, 0.85065928,
            0.3247378, 0.67601919, 0.44835041, 0.59195756, 0.37883573, 0.77964994,
        ],
    )
    .unwrap();
    let conv_layer8 = ConvolutionLayer::new(kernel8, 1, Padding::Valid);
    let target_output8 = array![
        [
            [
                3.02593255, 2.83475757, 2.22801566, 2.2684288, 2.59161162, 2.90518045, 2.65916824,
                1.7910521, 2.16655827, 2.80236173, 3.15038824, 3.29234266, 3.22021389
            ],
            [
                2.94125628, 2.52264071, 2.02128363, 2.48164725, 2.95660186, 2.76108217, 1.76321197,
                1.53367066, 1.98559713, 2.7689414, 3.01513839, 2.8067317, 3.0738337
            ],
            [
                2.65381145, 2.54167628, 2.00629783, 2.32885075, 2.77541757, 2.77109933, 2.02350473,
                2.02526379, 1.9358691, 1.86765862, 2.35757208, 2.79325318, 3.10446954
            ],
            [
                2.49852467, 2.60600233, 2.58271861, 3.13594747, 2.80406785, 2.46759486, 1.9348557,
                1.59261882, 1.31156504, 1.70651448, 2.36724019, 2.8886404, 2.78356814
            ],
            [
                1.84030974, 2.19260716, 2.30988622, 2.7484715, 2.7999928, 2.89483881, 2.56700015,
                2.02990913, 1.48045504, 1.98998976, 2.66562247, 2.93473792, 2.5998385
            ],
            [
                1.3363632, 1.76793134, 2.56358004, 2.99877501, 3.05663443, 2.98483467, 2.6095984,
                2.44817948, 2.29797292, 2.6635952, 2.41965532, 2.36271596, 2.52578187
            ],
            [
                1.17192101, 1.01114273, 1.4025631, 2.02117538, 2.3987751, 2.58003783, 2.53105307,
                2.56175351, 1.95783746, 1.98728216, 2.05583692, 1.53897297, 1.84926236
            ],
            [
                1.5338136, 1.62080455, 2.06076908, 2.53974748, 2.49728513, 2.65163803, 2.76811266,
                2.37902856, 1.89394927, 2.0242548, 2.22650552, 2.51806045, 2.59641361
            ]
        ],
        [
            [
                2.10819268, 2.39907122, 1.9240669, 1.78487146, 2.64276767, 2.78639555, 2.08174467,
                1.66995227, 2.31251001, 2.50104356, 2.98639345, 2.87540364, 3.08908153
            ],
            [
                2.58109522, 2.35822916, 1.91084707, 2.47402906, 2.44971585, 2.1195333, 1.3010962,
                1.55079544, 1.87428808, 2.20826101, 2.44077682, 2.11268187, 2.75682759
            ],
            [
                1.97093141, 2.36416221, 1.93873525, 2.56495476, 2.1039331, 2.38201141, 1.66050231,
                1.75902116, 1.39607406, 1.2423805, 2.13723111, 2.22319198, 2.82527184
            ],
            [
                1.67613614, 2.46066117, 2.35932159, 3.35704064, 2.4928391, 2.75916076, 1.92399681,
                1.6006099, 1.35083079, 1.80909586, 2.76180363, 2.93256092, 2.58814692
            ],
            [
                1.59663522, 1.71822166, 1.78722429, 2.46654844, 2.27284741, 2.62050796, 2.04005933,
                2.02472091, 1.69749475, 2.21615577, 2.54119349, 2.05053592, 1.96441936
            ],
            [
                1.16142368, 1.53900349, 2.12028313, 2.34670353, 2.41453171, 2.7786634, 2.03726745,
                2.71703362, 2.1796782, 1.9798131, 1.74211729, 1.50737345, 2.41452622
            ],
            [
                0.96272111, 0.92017686, 1.4751246, 2.04712987, 2.11853409, 2.65093184, 1.70954418,
                2.163831, 1.63705766, 1.72146749, 2.17379141, 1.44124103, 2.03937054
            ],
            [
                1.88827407, 1.5515132, 1.99633896, 2.07655525, 1.99292886, 2.70162296, 2.12071085,
                1.9350065, 1.55247808, 2.06873727, 2.5440135, 2.56246305, 2.7164495
            ]
        ],
        [
            [
                3.05755901, 2.79688501, 2.57964969, 2.47831535, 3.22540903, 3.03786373, 2.60424399,
                2.28031945, 2.42734933, 3.03475904, 3.88145161, 3.08444476, 3.84080887
            ],
            [
                2.87972641, 2.9862895, 2.09859204, 2.99302053, 2.8317039, 2.79933476, 1.81081092,
                1.69786882, 2.43297935, 2.60682178, 3.28312874, 3.05424094, 3.20074821
            ],
            [
                2.70914268, 2.74675608, 2.19071937, 2.82989073, 2.93085122, 2.93756866, 2.25104308,
                2.06749678, 1.83320415, 2.19221997, 2.86984491, 3.09169555, 3.29485178
            ],
            [
                2.65654659, 3.30140877, 2.88243532, 3.64731145, 2.90526485, 2.96832347, 1.77812338,
                1.85959518, 1.72894537, 2.08339572, 2.95665526, 3.01312733, 3.0604105
            ],
            [
                1.79478347, 2.26809764, 2.49225259, 2.98893356, 2.86281013, 3.37666941, 2.59729767,
                2.17315006, 1.90789366, 2.08483028, 2.76869273, 2.81901288, 3.008991
            ],
            [
                1.58492386, 2.07841992, 2.8498435, 3.42308211, 3.02091336, 3.65541816, 2.62825012,
                2.97770452, 2.20791745, 2.66453266, 2.8804152, 2.35391474, 2.89123464
            ],
            [
                1.19006014, 1.13653028, 1.75589418, 2.37751317, 2.39469552, 2.87650156, 2.44900918,
                2.58587193, 2.55428886, 2.1375494, 2.1106298, 1.72967303, 2.24342012
            ],
            [
                1.99041951, 1.63277733, 2.40076303, 2.64598513, 2.95584393, 3.14980006, 2.49382901,
                2.79441929, 1.88784647, 2.65664387, 2.77754879, 2.65950489, 3.16729832
            ]
        ]
    ];
    let current_output8 = conv_layer8.convolve(&test_input8);

    assert!(
        arr_allclose(&current_output8, &target_output8),
        "{:?} was not equal to {:?}",
        current_output8,
        target_output8
    );

    let test_input9 = array![[
        [
            0.32748001, 0.44507304, 0.74884216, 0.14428215, 0.87857769, 0.15468395, 0.66387251,
            0.30651525, 0.94925148, 0.55669755, 0.08302987, 0.45890567, 0.05946975, 0.9099885,
            0.30235246
        ],
        [
            0.24214035, 0.42138378, 0.38782486, 0.21880286, 0.91822054, 0.85290708, 0.50703254,
            0.52722338, 0.71761002, 0.560904, 0.22129431, 0.26244272, 0.65570881, 0.00633,
            0.66032144
        ],
        [
            0.45500924, 0.65239857, 0.14666249, 0.32440838, 0.28057192, 0.42671443, 0.74477623,
            0.91189731, 0.53352833, 0.36968936, 0.56937558, 0.36426733, 0.11819326, 0.95361023,
            0.13343851
        ],
        [
            0.59402418, 0.72822953, 0.93200069, 0.46956547, 0.50878742, 0.79529177, 0.73709416,
            0.33586889, 0.03185031, 0.27057355, 0.26166973, 0.58431293, 0.53371387, 0.19571388,
            0.1192536
        ],
        [
            0.75616852, 0.97167399, 0.71154076, 0.26672949, 0.07128377, 0.3383284, 0.80085631,
            0.95049468, 0.59714341, 0.78477727, 0.92326205, 0.24163639, 0.12968541, 0.5954836,
            0.6734995
        ],
        [
            0.08627631, 0.74857154, 0.87824841, 0.68631546, 0.72643531, 0.08944888, 0.68172634,
            0.4284322, 0.48237634, 0.68565236, 0.04009921, 0.0687674, 0.9063645, 0.42620142,
            0.61030612
        ],
        [
            0.10040135, 0.50107219, 0.76305701, 0.25769316, 0.88161141, 0.77701313, 0.23345616,
            0.62762325, 0.15315742, 0.73589576, 0.27520672, 0.85641517, 0.74394841, 0.65813059,
            0.40562607
        ],
        [
            0.13899311, 0.26460667, 0.91797941, 0.96651816, 0.89336775, 0.18948041, 0.93711783,
            0.71248111, 0.96575491, 0.62036752, 0.32684848, 0.11439406, 0.07654371, 0.95680341,
            0.97286393
        ],
        [
            0.60558715, 0.00439729, 0.85256128, 0.3167563, 0.1349921, 0.68338643, 0.79550468,
            0.21689218, 0.28267041, 0.12328367, 0.68900431, 0.59066495, 0.41700743, 0.30266365,
            0.57165983
        ],
        [
            0.12726786, 0.35587692, 0.16889892, 0.31148919, 0.13098989, 0.24026695, 0.55435273,
            0.34375766, 0.4225387, 0.37165097, 0.62029453, 0.60695333, 0.05756182, 0.0153275,
            0.84975781
        ]
    ]];

    let kernel9: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.79796967, 0.40719958, 0.19325097, 0.04944435, 0.59729163, 0.39304133, 0.67900197,
            0.61268537, 0.67232878, 0.71562921, 0.09058711, 0.33372015, 0.89416437, 0.30899736,
            0.3348802, 0.6412177, 0.26750944, 0.03709449, 0.56803027, 0.87562728, 0.57711325,
            0.56024177, 0.58685749, 0.75167765, 0.36936092, 0.37185488, 0.35425208,
        ],
    )
    .unwrap();
    let conv_layer9 = ConvolutionLayer::new(kernel9, 1, Padding::Valid);
    let target_output9 = array![
        [
            [
                1.81063259, 1.77739084, 1.82383537, 2.07634234, 2.59916449, 2.36438251, 2.88315034,
                2.60847402, 2.42926693, 1.67455828, 1.37928438, 1.93427169, 1.52639854
            ],
            [
                2.38569975, 2.16501594, 2.14990902, 2.22992206, 3.06777453, 3.03073025, 2.27683711,
                1.75986159, 1.67810774, 1.82683873, 1.59685552, 1.79639637, 1.84377682
            ],
            [
                3.07489371, 2.69529796, 1.52436125, 1.54752624, 2.12559032, 2.79103947, 2.84592724,
                2.69721627, 2.45936108, 2.25756955, 2.05936503, 1.59157479, 1.60428441
            ],
            [
                2.95577645, 3.13703728, 2.76098442, 1.89553547, 2.39905763, 2.634794, 2.62282515,
                2.0928216, 1.82189095, 1.65697467, 1.46956158, 1.93342829, 2.44230795
            ],
            [
                2.8213377, 2.92898178, 2.69778442, 2.04776931, 1.93834734, 2.45236993, 2.26672363,
                2.74683285, 2.16352654, 2.37784004, 2.47124362, 2.55277705, 2.19646025
            ],
            [
                2.02123094, 3.06133652, 3.47494245, 3.0364821, 2.70003486, 2.03815079, 2.98042488,
                2.57512283, 2.48274231, 1.81251502, 1.39617622, 2.0195384, 2.89632773
            ],
            [
                1.94442928, 2.43992448, 2.72173572, 2.1278913, 2.63588858, 2.78275847, 2.18601584,
                1.96464348, 1.7525171, 2.03862238, 1.93677258, 2.40099812, 2.75060725
            ],
            [
                1.18173289, 1.96021926, 1.97673309, 1.9898349, 2.30751538, 1.99857056, 2.37563586,
                2.05186319, 2.37649179, 2.34049106, 1.70470941, 1.16228914, 1.68457162
            ]
        ],
        [
            [
                1.4728936, 1.47398543, 1.75527775, 1.29835737, 2.44036174, 1.87567043, 2.41752744,
                2.11328387, 2.1086607, 1.61974013, 1.08631015, 1.37744009, 1.37112582
            ],
            [
                1.60871565, 1.88070405, 1.6712296, 1.51076162, 2.1020503, 2.46889758, 2.3401494,
                1.96745634, 1.52268195, 1.40268314, 1.40610981, 1.45560956, 1.53421926
            ],
            [
                2.27314067, 2.50810623, 1.9070642, 1.44603658, 1.60142982, 2.19494939, 2.35711122,
                2.02338386, 1.4321059, 1.71532691, 1.73462284, 1.55427742, 1.06057429
            ],
            [
                2.30491138, 2.68069172, 2.39551187, 1.65907919, 1.63362229, 1.87189412, 2.34794807,
                2.05995178, 1.71446288, 1.93318617, 1.43967223, 1.28972924, 1.68280137
            ],
            [
                1.69589865, 2.55436397, 2.38871121, 1.60824358, 2.03623462, 1.64993894, 2.08526826,
                2.22865629, 1.76842701, 1.95164752, 1.5196718, 1.64024961, 2.18615913
            ],
            [
                1.11674154, 2.06550574, 2.87057328, 2.2156074, 2.5203402, 1.64445293, 1.96894014,
                2.17228842, 1.67453241, 2.03656983, 1.34026325, 1.6189177, 2.23643279
            ],
            [
                1.30646181, 1.600263, 2.91868854, 1.99187922, 2.24927235, 2.14329123, 2.23513627,
                2.07110786, 1.67259026, 1.81665301, 1.49131238, 1.84777808, 1.78682363
            ],
            [
                1.44121683, 1.25344157, 2.14452124, 1.63331258, 1.73631847, 1.70286894, 2.3935473,
                1.47419608, 1.77134669, 1.45943379, 1.77029848, 1.57162011, 1.19647956
            ]
        ],
        [
            [
                2.14498806, 2.03036284, 2.36882615, 2.61841202, 2.93986583, 2.77535796, 3.12938356,
                3.13088179, 2.50836635, 1.77246356, 1.64182091, 1.89082456, 2.31803346
            ],
            [
                2.29872847, 2.18253732, 2.12434483, 2.73205209, 3.27323794, 3.28113389, 2.92568445,
                2.58516979, 2.17540121, 1.88314676, 1.85852575, 2.20075154, 1.79739428
            ],
            [
                3.26777148, 2.71210003, 2.09670162, 2.08055186, 2.70450377, 3.31087351, 3.02423334,
                2.45988846, 2.16813993, 2.38192916, 2.0780952, 1.99686003, 1.99058163
            ],
            [
                3.6630199, 3.50937676, 2.67988777, 2.1721034, 2.79432678, 3.10331893, 2.768507,
                2.4281826, 2.34245849, 2.17567992, 2.08629179, 2.08470321, 2.18119764
            ],
            [
                3.33251524, 3.33970475, 2.80969739, 1.98550737, 2.46810842, 2.81035447, 3.00163174,
                3.10365558, 2.68967295, 2.53055167, 2.23864102, 2.31138468, 2.86363721
            ],
            [
                2.61013603, 3.29402232, 3.77542448, 3.07969189, 2.7421999, 2.60994935, 2.60821128,
                2.89815187, 2.32524562, 2.07300878, 2.01243138, 2.89942479, 3.07687521
            ],
            [
                2.3866713, 2.94583726, 3.401407, 2.98424268, 3.21778727, 2.82472587, 2.91425443,
                2.57644892, 2.43533421, 2.28958464, 2.26521087, 2.82637739, 3.03770971
            ],
            [
                2.0623095, 2.5573957, 2.87294269, 2.4598639, 2.6229465, 2.76878214, 2.98123527,
                2.40419507, 2.54305029, 2.20495629, 1.85130358, 1.73835075, 2.61167336
            ]
        ]
    ];
    let current_output9 = conv_layer9.convolve(&test_input9);

    assert!(
        arr_allclose(&current_output9, &target_output9),
        "{:?} was not equal to {:?}",
        current_output9,
        target_output9
    );

    let test_input10 = array![[
        [
            0.24336163, 0.01027582, 0.26715372, 0.83992415, 0.49819484, 0.78318667, 0.70054486,
            0.87018632, 0.49413828, 0.84670646, 0.80696486, 0.09345899, 0.93408288, 0.8206956,
            0.70209366
        ],
        [
            0.32817393, 0.74420299, 0.39091238, 0.43911496, 0.92919486, 0.29325069, 0.62813333,
            0.81314307, 0.19520658, 0.47931833, 0.42483748, 0.47526902, 0.28184402, 0.09741595,
            0.45691563
        ],
        [
            0.44086095, 0.96384089, 0.33859608, 0.26381833, 0.29839757, 0.68755939, 0.09156765,
            0.58584655, 0.04617033, 0.14705709, 0.81179596, 0.16751295, 0.06864621, 0.63087308,
            0.38993102
        ],
        [
            0.3644169, 0.68174503, 0.27240898, 0.23609332, 0.21866773, 0.80119156, 0.01742986,
            0.49270406, 0.37920174, 0.90869633, 0.81912677, 0.7636344, 0.78277877, 0.96949662,
            0.79533533
        ],
        [
            0.00732174, 0.83721131, 0.94490713, 0.76702527, 0.50964799, 0.78430691, 0.73653134,
            0.71123123, 0.89694641, 0.9544987, 0.16811895, 0.97018675, 0.25394835, 0.55851589,
            0.51973415
        ],
        [
            0.4357872, 0.29419306, 0.51803759, 0.80581654, 0.71900277, 0.52249017, 0.52525959,
            0.33191478, 0.33889579, 0.18619475, 0.6839338, 0.72234724, 0.25884648, 0.79801009,
            0.36219833
        ],
        [
            0.70463167, 0.92843939, 0.46896498, 0.23158234, 0.32747797, 0.9097073, 0.74404828,
            0.03255624, 0.30697422, 0.62468214, 0.19074459, 0.98433641, 0.40385719, 0.57477091,
            0.65160056
        ],
        [
            0.68225169, 0.98408772, 0.18341686, 0.52884058, 0.92906401, 0.87780553, 0.90901809,
            0.82569947, 0.20383635, 0.71666433, 0.17061437, 0.91526777, 0.08598402, 0.70100875,
            0.40537684
        ],
        [
            0.59719821, 0.92796125, 0.15859715, 0.78590811, 0.85644881, 0.35816406, 0.79062704,
            0.96448833, 0.13154315, 0.31929042, 0.80048305, 0.07180242, 0.52815667, 0.45786336,
            0.91537885
        ],
        [
            0.97833131, 0.25753945, 0.42799363, 0.07738555, 0.92942058, 0.07022415, 0.60058223,
            0.61962778, 0.90083461, 0.04155484, 0.82207746, 0.41282525, 0.99496077, 0.31092708,
            0.47614527
        ]
    ]];

    let kernel10: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.76158205, 0.35893061, 0.07713356, 0.61239278, 0.62511915, 0.88098775, 0.21521498,
            0.89468117, 0.1842307, 0.10784956, 0.83548332, 0.26307009, 0.71846745, 0.06132602,
            0.06056971, 0.71349824, 0.00944792, 0.07349233, 0.35231607, 0.85339613, 0.17608605,
            0.18067755, 0.51991456, 0.19053963, 0.50451729, 0.7456122, 0.27621789, 0.48649722,
            0.39297875, 0.54849164, 0.37469909, 0.81942836, 0.34880425, 0.79505838, 0.41293453,
            0.890512, 0.12076204, 0.20799449, 0.88948243, 0.24437675, 0.77314743, 0.65954227,
            0.49225648, 0.52115808, 0.97382413, 0.97795639, 0.17542631, 0.45519892, 0.81067127,
            0.70959754,
        ],
    )
    .unwrap();
    let conv_layer10 = ConvolutionLayer::new(kernel10, 1, Padding::Valid);
    let target_output10 = array![
        [
            [
                4.5183382, 5.91932011, 5.06808233, 5.52859402, 5.57009697, 6.79733086, 5.32144022,
                6.10917807, 4.83893776, 6.37568951, 5.66658258
            ],
            [
                4.78702736, 6.12976599, 4.95378685, 5.72386312, 4.7157383, 5.47827864, 4.01616764,
                5.55409575, 4.83323383, 5.25644207, 4.89578104
            ],
            [
                4.81190777, 5.92673016, 4.84571743, 5.05779457, 4.37296057, 4.87865639, 4.67695951,
                6.25295877, 4.40642738, 6.33744669, 5.77209997
            ],
            [
                4.8293047, 6.78923702, 6.2663579, 5.46064854, 5.28051662, 6.50218868, 5.48326635,
                5.98393106, 5.27300549, 7.05674744, 5.32240438
            ],
            [
                5.93377256, 7.02311277, 6.56132793, 6.76085663, 6.1838789, 6.32367325, 5.33711004,
                5.04387045, 4.88352776, 5.57546234, 4.82884407
            ],
            [
                6.16717768, 5.58830976, 5.33349895, 6.43479538, 6.28882265, 4.96065092, 5.82433891,
                5.09295034, 4.13094664, 5.59218645, 5.53448105
            ]
        ],
        [
            [
                6.17561293, 8.13566208, 7.07548475, 7.90782642, 7.4928813, 8.52336025, 7.7385993,
                8.41335392, 7.58964109, 8.13131905, 8.19030857
            ],
            [
                7.25173283, 8.1101532, 7.77452946, 7.06175566, 7.58552313, 7.13950396, 6.85790586,
                8.11259174, 6.5001626, 7.37377501, 7.55263996
            ],
            [
                6.59784698, 8.02078342, 7.70812178, 6.74772167, 6.2837491, 7.05006075, 7.24705315,
                6.89255762, 7.48143339, 8.21393013, 7.76777744
            ],
            [
                7.90662479, 9.37680149, 8.01535606, 7.88747311, 7.8372364, 8.73275566, 7.13878632,
                8.2341156, 7.74230909, 7.78301096, 8.32549286
            ],
            [
                8.4341898, 9.65992832, 8.94359589, 9.64533901, 8.18030357, 8.18099213, 7.71587992,
                7.67325211, 6.3538003, 7.42053413, 7.38172007
            ],
            [
                8.65341949, 7.99146461, 7.74310637, 8.39290142, 8.69377518, 6.68351555, 7.6964283,
                6.63981295, 7.40542364, 6.53897142, 8.07107735
            ]
        ]
    ];
    let current_output10 = conv_layer10.convolve(&test_input10);

    assert!(
        arr_allclose(&current_output10, &target_output10),
        "{:?} was not equal to {:?}",
        current_output10,
        target_output10
    );

    let test_input11 = array![[
        [
            0.5087082, 0.78796805, 0.03310984, 0.20805902, 0.45704819, 0.9133983, 0.5689028,
            0.04247752, 0.55938283, 0.9835293, 0.04525762, 0.7176199, 0.82096801, 0.55757172,
            0.57441078
        ],
        [
            0.97806886, 0.34563605, 0.33249309, 0.8797563, 0.14932355, 0.1134909, 0.56457033,
            0.30096473, 0.40968749, 0.57031528, 0.88738927, 0.62423742, 0.77620891, 0.68192901,
            0.24701218
        ],
        [
            0.74485577, 0.61556436, 0.63869127, 0.05875124, 0.32109321, 0.96946657, 0.09463911,
            0.62756373, 0.34162355, 0.74390863, 0.87367778, 0.95139082, 0.24045336, 0.70034751,
            0.87750343
        ],
        [
            0.16564245, 0.63149631, 0.21785555, 0.76549871, 0.13988015, 0.03287261, 0.82226164,
            0.60896695, 0.13331373, 0.62307175, 0.23316076, 0.96002043, 0.55291535, 0.29808274,
            0.87651269
        ],
        [
            0.98263546, 0.27148732, 0.11101003, 0.2754741, 0.4540411, 0.19701396, 0.08459944,
            0.98017716, 0.98008131, 0.62585703, 0.18621969, 0.58363214, 0.17965507, 0.81336418,
            0.94554825
        ],
        [
            0.28304926, 0.32718146, 0.46701642, 0.91682272, 0.61429792, 0.19277428, 0.28408902,
            0.25507235, 0.98004533, 0.36125832, 0.96792002, 0.33258556, 0.95086255, 0.84245811,
            0.8130291
        ],
        [
            0.77749758, 0.17691322, 0.9389267, 0.22419458, 0.33442206, 0.76145851, 0.37563835,
            0.70754575, 0.1499497, 0.98738371, 0.71669681, 0.40278858, 0.22288306, 0.3279577,
            0.07722609
        ],
        [
            0.59875502, 0.8143903, 0.87905453, 0.83061284, 0.9923988, 0.61964943, 0.53640598,
            0.06662867, 0.83588266, 0.28182984, 0.66218105, 0.99850966, 0.60448395, 0.12318801,
            0.91713258
        ],
        [
            0.85405983, 0.19103892, 0.59296137, 0.9118344, 0.93811131, 0.34217221, 0.8149188,
            0.95955951, 0.02717085, 0.89163091, 0.97555751, 0.27588442, 0.59208006, 0.00008138,
            0.95520374
        ],
        [
            0.12578068, 0.01249961, 0.05413999, 0.5153533, 0.40144865, 0.86988112, 0.6468678,
            0.8840439, 0.34315115, 0.52290096, 0.66408887, 0.98115785, 0.85046167, 0.79799048,
            0.94447943
        ]
    ]];

    let kernel11: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.69304133, 0.90735816, 0.911567, 0.45996496, 0.90457691, 0.17170428, 0.43418502,
            0.69308426, 0.42869946, 0.92443411, 0.41451566, 0.62247083, 0.00536506, 0.33826838,
            0.47926103, 0.0032256, 0.02230139, 0.35960107, 0.48593593, 0.86064773, 0.28908367,
            0.4153976, 0.34687061, 0.2242362, 0.93169004, 0.3198661, 0.5576108, 0.17364207,
            0.69407915, 0.88076497, 0.11111139, 0.19382912, 0.93070823, 0.91885547, 0.10532705,
            0.88550457, 0.20754221, 0.97926296, 0.34729281, 0.71126234, 0.03633394, 0.7482733,
            0.28782295, 0.73823089, 0.60003114, 0.32597429, 0.85578995, 0.14142897, 0.39191914,
            0.05517358,
        ],
    )
    .unwrap();
    let conv_layer11 = ConvolutionLayer::new(kernel11, 1, Padding::Valid);
    let target_output11 = array![
        [
            [
                5.0450716, 4.89488602, 4.57131004, 5.27848816, 6.35960245, 6.52062082, 5.76754427,
                7.57573843, 7.30534029, 7.54862356, 7.84426117
            ],
            [
                5.51445246, 4.85322905, 4.93643999, 5.65226889, 5.39196348, 6.10715055, 7.14785719,
                6.95241022, 7.50293493, 8.02214146, 8.46680737
            ],
            [
                5.90938139, 5.44834185, 4.47054815, 5.50852585, 5.80870962, 6.80979156, 6.72224188,
                7.68412352, 7.16069555, 7.5427866, 7.81062269
            ],
            [
                5.8624382, 5.42968893, 5.72065544, 6.0447793, 5.90759802, 6.52331591, 6.48952913,
                7.53678274, 6.04518557, 6.45142651, 7.40259075
            ],
            [
                6.91913939, 5.88349104, 5.97792673, 5.80909204, 6.13337135, 6.58202314, 8.22370338,
                7.39729548, 7.37177467, 6.60852766, 7.41409397
            ],
            [
                6.699543, 7.10321856, 6.9725709, 7.39016104, 6.18998957, 6.70754766, 7.32181215,
                7.62227964, 7.95883417, 6.70088243, 8.00499439
            ]
        ],
        [
            [
                6.01725483, 4.97594452, 4.70405245, 4.9501462, 4.76203966, 6.8082757, 5.9578948,
                7.4210763, 8.10631466, 7.10177946, 7.70713902
            ],
            [
                4.62432337, 4.2353344, 5.21785927, 5.65750074, 5.00469398, 5.77571201, 6.42678213,
                8.06907082, 6.86175203, 7.66446972, 7.14556551
            ],
            [
                5.6103673, 5.6882062, 4.25429344, 4.7691431, 6.44433832, 6.2357378, 6.75023842,
                7.67996216, 6.91743183, 8.16490746, 7.0305872
            ],
            [
                5.3885169, 5.99903202, 5.91633797, 5.92778397, 5.86924458, 6.43901205, 7.29020786,
                6.13880014, 7.63872766, 5.91069651, 7.49567986
            ],
            [
                7.50078773, 6.59505892, 6.22843838, 6.5409565, 5.99164724, 7.19754648, 6.65748835,
                7.90758657, 6.66396236, 7.18424463, 7.1126132
            ],
            [
                7.18578196, 6.36014938, 7.47640753, 7.03898954, 7.32570934, 6.11549234, 7.94051218,
                6.99954796, 7.83644676, 7.17400503, 7.24305058
            ]
        ]
    ];
    let current_output11 = conv_layer11.convolve(&test_input11);

    assert!(
        arr_allclose(&current_output11, &target_output11),
        "{:?} was not equal to {:?}",
        current_output11,
        target_output11
    );

    let test_input12 = array![[
        [
            0.60509269, 0.96882702, 0.47373445, 0.76571182, 0.50472077, 0.53850234, 0.05837096,
            0.56728834, 0.3979838, 0.2393961, 0.36507484, 0.01646563, 0.27730469, 0.62646277,
            0.94121945
        ],
        [
            0.66457145, 0.84257754, 0.4301739, 0.68211767, 0.60596876, 0.76295831, 0.56038121,
            0.48163054, 0.43719102, 0.43973155, 0.29997744, 0.21913478, 0.66115144, 0.20978799,
            0.176356
        ],
        [
            0.88925514, 0.14793598, 0.36509595, 0.56160287, 0.66173851, 0.30053072, 0.36820947,
            0.62227125, 0.49574589, 0.69923053, 0.32276483, 0.97024119, 0.56792343, 0.13432134,
            0.74309131
        ],
        [
            0.19231907, 0.26170298, 0.10480803, 0.00958306, 0.20726651, 0.20851518, 0.17973869,
            0.23704102, 0.11638671, 0.27359049, 0.85379089, 0.40302999, 0.75797636, 0.34342997,
            0.74670873
        ],
        [
            0.82946825, 0.91931369, 0.96549747, 0.18782941, 0.10021565, 0.05109123, 0.30693651,
            0.10895161, 0.98912135, 0.62504833, 0.50799401, 0.47125, 0.84314244, 0.60549933,
            0.92367508
        ],
        [
            0.69538954, 0.37023903, 0.67128026, 0.43450755, 0.28869845, 0.27641537, 0.83697122,
            0.68564831, 0.26890948, 0.65425914, 0.84581688, 0.51146319, 0.48995436, 0.52071318,
            0.80564772
        ],
        [
            0.67052099, 0.38358571, 0.47078377, 0.51005312, 0.82525114, 0.02126783, 0.95831531,
            0.23316967, 0.94875039, 0.96095887, 0.95734006, 0.00943314, 0.75214318, 0.46106156,
            0.84370508
        ],
        [
            0.16933449, 0.71423986, 0.53166463, 0.64001515, 0.96389141, 0.69432027, 0.85816409,
            0.70813744, 0.28369829, 0.33953485, 0.89505429, 0.20262088, 0.81930759, 0.0955688,
            0.22266188
        ],
        [
            0.63842744, 0.83041857, 0.12425002, 0.75820649, 0.09737789, 0.84872884, 0.17490041,
            0.37569722, 0.66691882, 0.89706689, 0.22398192, 0.29424526, 0.56277038, 0.41113177,
            0.78824639
        ],
        [
            0.24159204, 0.54609149, 0.2969013, 0.31420748, 0.76481112, 0.04421633, 0.96366841,
            0.98529966, 0.26998707, 0.13811645, 0.97249976, 0.41856613, 0.13321315, 0.0937838,
            0.47424142
        ]
    ]];

    let kernel12: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.79873264, 0.16213139, 0.5493846, 0.6481355, 0.05176858, 0.17029644, 0.95553601,
            0.089831, 0.05664136, 0.92318648, 0.98567013, 0.01680514, 0.54690884, 0.85939877,
            0.64969627, 0.8382851, 0.24000139, 0.36792266, 0.01756373, 0.65967179, 0.5680892,
            0.19350345, 0.48540582, 0.78698719, 0.12335967, 0.14544042, 0.25711667, 0.05608724,
            0.18204255, 0.9562488, 0.44598027, 0.32297582, 0.89306789, 0.24216229, 0.21437034,
            0.38366762, 0.64894369, 0.86506391, 0.77900323, 0.35299378, 0.37360683, 0.26240813,
            0.55443299, 0.90017566, 0.68178569, 0.95833224, 0.28551314, 0.85106284, 0.70093376,
            0.4791875,
        ],
    )
    .unwrap();
    let conv_layer12 = ConvolutionLayer::new(kernel12, 1, Padding::Valid);
    let target_output12 = array![
        [
            [
                6.6467185, 5.47852802, 4.70080662, 4.44625235, 4.73423004, 5.16853237, 4.9317584,
                5.17981815, 5.99513435, 5.12732267, 5.60864258
            ],
            [
                5.25041533, 4.78708982, 4.85963631, 4.6937995, 4.82178688, 4.54987574, 5.4918189,
                6.20658398, 6.43088627, 5.47636318, 7.34889936
            ],
            [
                5.70853424, 4.45199966, 4.6682682, 4.23353386, 4.62824106, 5.1551528, 7.38004112,
                5.79551554, 6.95714998, 7.45413923, 7.1806407
            ],
            [
                5.59568214, 4.88104868, 5.59020472, 4.73789787, 6.35166979, 4.83160353, 6.30908012,
                6.66491127, 6.81612396, 6.50370264, 7.69994545
            ],
            [
                6.54036903, 5.94658566, 6.30061388, 5.50836134, 5.3813858, 6.56718826, 8.61213017,
                5.42370224, 6.87425518, 6.64755535, 7.26226902
            ],
            [
                5.82693434, 6.50855017, 5.93813038, 6.94494009, 7.06929588, 6.78750467, 6.43444014,
                6.90929937, 6.71557379, 5.84079456, 5.83508921
            ]
        ],
        [
            [
                6.06490803, 5.61833572, 4.86111736, 4.67248917, 4.8003726, 4.87353897, 6.0395031,
                5.72284746, 6.84851027, 6.77220774, 7.45148754
            ],
            [
                5.61441231, 4.51026964, 4.81390429, 4.48244333, 5.06634474, 5.51567221, 6.17246151,
                6.58404446, 7.07166338, 7.33923674, 7.35649204
            ],
            [
                6.3880825, 4.57505703, 4.81013727, 4.87959003, 5.63087797, 5.69504547, 7.62962103,
                7.49828339, 7.94274902, 6.82992458, 8.54982948
            ],
            [
                6.78844404, 6.19979572, 6.04838562, 5.93325949, 6.65181828, 6.4206748, 8.47837162,
                7.12398148, 7.47958755, 6.73413944, 7.84753799
            ],
            [
                6.65111732, 6.95679569, 6.22963142, 6.58968496, 6.7921524, 7.43602324, 7.48674631,
                7.50829124, 7.62334347, 7.02151394, 6.71883059
            ],
            [
                6.06123638, 6.5817256, 7.39597988, 7.04386854, 7.78177786, 6.90288877, 8.13494682,
                7.10544395, 6.85925484, 5.76249886, 6.71638155
            ]
        ]
    ];
    let current_output12 = conv_layer12.convolve(&test_input12);

    assert!(
        arr_allclose(&current_output12, &target_output12),
        "{:?} was not equal to {:?}",
        current_output12,
        target_output12
    );

    let test_input13 = array![[
        [
            0.58050109, 0.98031991, 0.97033705, 0.48236644, 0.66855665, 0.35855146, 0.25242765,
            0.67179667, 0.26290379, 0.53677227
        ],
        [
            0.18097793, 0.07985484, 0.79416143, 0.72152353, 0.42313013, 0.6529702, 0.00384528,
            0.08442256, 0.78389844, 0.98068301
        ],
        [
            0.36212954, 0.61172485, 0.52636618, 0.8496614, 0.13177402, 0.91755979, 0.04323238,
            0.03087392, 0.03482862, 0.36226456
        ],
        [
            0.60595438, 0.29194582, 0.34645593, 0.94099127, 0.60953088, 0.86102549, 0.16275521,
            0.89393591, 0.66327933, 0.48094536
        ],
        [
            0.06551107, 0.86129209, 0.65446064, 0.95927759, 0.80004129, 0.21450381, 0.64425328,
            0.46971877, 0.84573214, 0.34651903
        ],
        [
            0.18830031, 0.57119009, 0.27269889, 0.79159571, 0.21737069, 0.04463017, 0.393406,
            0.84414825, 0.77705368, 0.63151758
        ],
        [
            0.85228959, 0.16809768, 0.2230516, 0.77322296, 0.96781482, 0.2237789, 0.89826148,
            0.27191299, 0.34780892, 0.49277796
        ],
        [
            0.14560463, 0.33638618, 0.1585067, 0.18610527, 0.69630838, 0.94298206, 0.40789625,
            0.20056698, 0.37306354, 0.93670611
        ],
        [
            0.71033061, 0.06833509, 0.48335183, 0.45182208, 0.96346166, 0.00378525, 0.33689301,
            0.28288215, 0.75004079, 0.1607512
        ],
        [
            0.51417499, 0.35879079, 0.36688787, 0.00774159, 0.15532039, 0.01133456, 0.94680933,
            0.052598, 0.73530349, 0.80965635
        ],
        [
            0.70976442, 0.37942106, 0.38656326, 0.13763146, 0.99930646, 0.67476802, 0.06055128,
            0.8463604, 0.44607292, 0.33209084
        ],
        [
            0.94373863, 0.53976141, 0.05766413, 0.64256255, 0.73574592, 0.09256811, 0.88329454,
            0.03911254, 0.78255398, 0.40048119
        ],
        [
            0.80732702, 0.80103792, 0.28867772, 0.78029255, 0.94905287, 0.53957024, 0.13691019,
            0.45134852, 0.1162144, 0.9589836
        ],
        [
            0.24819063, 0.31490639, 0.22322156, 0.39812055, 0.45308355, 0.57115231, 0.97817532,
            0.06805564, 0.53866458, 0.66998012
        ],
        [
            0.18794561, 0.84073161, 0.64728754, 0.53731097, 0.63207714, 0.00916763, 0.46754488,
            0.86709823, 0.1932068, 0.43971534
        ]
    ]];

    let kernel13: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.10441232, 0.46486123, 0.22910197, 0.76790192, 0.23872072, 0.03931138, 0.85515021,
            0.19610136, 0.85550643, 0.08035297, 0.05671094, 0.90919751, 0.27582647, 0.33816597,
            0.42012834, 0.77450939, 0.14011143, 0.47505256, 0.98297565, 0.50859663, 0.22395916,
            0.01153891, 0.66960699, 0.12918297, 0.55476546, 0.52878305, 0.50677415,
        ],
    )
    .unwrap();
    let conv_layer13 = ConvolutionLayer::new(kernel13, 1, Padding::Valid);
    let target_output13 = array![
        [
            [
                1.80783105, 2.29643679, 2.00690627, 2.66144204, 1.10487199, 1.63388705, 0.52562362,
                0.94899762
            ],
            [
                1.55459356, 2.29423761, 2.12973738, 2.80244541, 1.4998579, 2.33842778, 1.14309859,
                1.95013011
            ],
            [
                1.77621377, 2.53264451, 2.42698145, 2.42285609, 2.40758681, 1.56977224, 1.75787616,
                1.83008862
            ],
            [
                1.06633103, 2.48159623, 1.95065463, 2.27265191, 1.72327161, 1.54482961, 2.39134431,
                2.50259233
            ],
            [
                1.80145299, 1.99775755, 2.27482152, 2.2251811, 2.16386604, 1.19100738, 2.13256478,
                2.10243535
            ],
            [
                1.37711561, 1.058447, 1.60790634, 2.12994051, 2.09481859, 1.8358649, 2.08717585,
                1.95127833
            ],
            [
                1.45092726, 1.14161229, 2.12416553, 1.50665569, 2.29957318, 1.64391327, 1.66087711,
                1.10938179
            ],
            [
                1.61259973, 0.72245628, 1.22762978, 1.18303514, 2.30354667, 0.66883624, 2.02604628,
                1.69340038
            ],
            [
                1.72364759, 1.21675622, 1.98339367, 1.43031693, 1.37741876, 1.77157605, 1.70640242,
                1.75812745
            ],
            [
                1.91754866, 1.6214385, 1.25122702, 1.21933711, 2.57222319, 1.30508673, 1.99034524,
                1.83178461
            ],
            [
                2.28930283, 2.11351871, 1.77168131, 2.62118554, 2.08820868, 1.45037985, 1.52535343,
                1.83358228
            ],
            [
                1.65014505, 1.59874308, 1.57511675, 2.1952045, 2.52147865, 1.63246334, 1.81780553,
                1.60865009
            ],
            [
                1.67668796, 2.01291418, 2.09420395, 1.67387319, 1.84631395, 1.73949587, 1.77444911,
                1.68360996
            ]
        ],
        [
            [
                2.01127434, 2.11725402, 1.94331169, 2.13152575, 0.89385772, 1.60217988, 0.71071553,
                1.45819557
            ],
            [
                1.94381821, 2.13283491, 1.66705096, 2.56330633, 1.10936797, 1.52446377, 1.32121146,
                2.12913418
            ],
            [
                1.43609989, 2.65902138, 1.90149629, 2.69436789, 1.58535147, 1.25189412, 1.62930465,
                1.65366769
            ],
            [
                1.31994736, 2.61720657, 1.90180194, 2.1830368, 1.1711607, 1.85625482, 2.15079951,
                2.17053986
            ],
            [
                1.79842639, 2.08960056, 2.00947285, 1.46885622, 2.11019087, 1.40918517, 2.46681714,
                1.65511644
            ],
            [
                0.91630232, 1.5988785, 1.47366834, 1.44075227, 1.96288168, 2.15589714, 1.79306543,
                1.73831558
            ],
            [
                1.29067373, 1.28903139, 2.23626256, 1.49018037, 2.49625015, 0.98296332, 1.39776421,
                1.46517134
            ],
            [
                1.21979189, 0.91031981, 1.70629025, 1.39696681, 1.46052217, 0.68149954, 1.97702706,
                1.81651592
            ],
            [
                1.70422697, 1.08339238, 1.9029125, 0.72096837, 1.72566986, 1.55517209, 1.69030213,
                1.69051719
            ],
            [
                1.71567631, 1.08125556, 1.2283498, 1.32385075, 2.40564132, 0.87863749, 2.29927206,
                1.63606703
            ],
            [
                1.77172875, 1.64742184, 2.27350092, 2.13979983, 1.65464544, 1.81932652, 1.26855266,
                1.66033995
            ],
            [
                1.1161083, 1.74155128, 1.8961364, 1.58352852, 2.26484323, 1.0895884, 2.0469439,
                1.42478704
            ],
            [
                1.21235108, 2.11688209, 2.19376183, 1.61915195, 1.67335558, 1.46292806, 1.23678005,
                2.30470467
            ]
        ],
        [
            [
                2.23578906, 3.23936081, 2.70391488, 2.27652836, 1.91888177, 1.19983864, 0.86448377,
                1.7859832
            ],
            [
                1.5442754, 1.93530536, 2.83308196, 2.56793976, 2.24631858, 1.72299445, 1.14707148,
                1.86216891
            ],
            [
                1.85565102, 2.72624612, 2.96764731, 2.70187354, 2.09424019, 1.8629508, 1.78653121,
                1.5291754
            ],
            [
                2.02843618, 2.108253, 2.38891935, 2.57901287, 1.65316784, 2.28447843, 2.25280976,
                3.13949752
            ],
            [
                1.74363697, 2.28882742, 2.89473796, 2.61246443, 2.23347402, 1.75363564, 2.55012941,
                2.16559768
            ],
            [
                1.02686048, 1.49337316, 1.90391028, 2.53387427, 1.69315934, 1.91266561, 1.74884057,
                2.44934535
            ],
            [
                1.89578295, 1.10837984, 2.04098153, 2.65465736, 2.66570616, 1.37124085, 2.00294065,
                1.56267381
            ],
            [
                1.12700284, 1.23273945, 1.12533152, 1.49127924, 1.88455486, 1.97507513, 1.80241334,
                1.95124662
            ],
            [
                1.92510581, 1.14964914, 1.74382818, 1.98727286, 2.09800076, 1.7146033, 1.49133396,
                2.16680336
            ],
            [
                1.92045259, 1.47758448, 1.36970067, 1.63947546, 1.74641562, 1.2003783, 2.65445375,
                1.59681857
            ],
            [
                2.37474155, 1.72070706, 2.25346994, 2.51484847, 2.40481997, 2.08167028, 1.10086644,
                2.50722098
            ],
            [
                2.21542358, 1.50164437, 1.76065254, 2.49064374, 2.40714431, 1.57378793, 2.23385429,
                1.39517295
            ],
            [
                2.38506269, 2.39448833, 2.18439126, 2.38925934, 2.34446311, 2.06321383, 1.33240163,
                1.97160995
            ]
        ]
    ];
    let current_output13 = conv_layer13.convolve(&test_input13);

    assert!(
        arr_allclose(&current_output13, &target_output13),
        "{:?} was not equal to {:?}",
        current_output13,
        target_output13
    );

    let test_input14 = array![[
        [
            0.14234911, 0.51528562, 0.64461424, 0.9118427, 0.81935076, 0.98913505, 0.78423016,
            0.59264964, 0.35247177, 0.48483033
        ],
        [
            0.22649785, 0.04158387, 0.58142059, 0.8653732, 0.45242769, 0.44947337, 0.55191289,
            0.79122763, 0.75131983, 0.93151158
        ],
        [
            0.03313805, 0.41213845, 0.45310237, 0.01799934, 0.43282272, 0.23842481, 0.20688592,
            0.57869384, 0.9324833, 0.43915926
        ],
        [
            0.53123089, 0.53241858, 0.41495372, 0.22217223, 0.0080786, 0.65063344, 0.76816233,
            0.84216271, 0.27179126, 0.68530317
        ],
        [
            0.99556169, 0.77906156, 0.18006649, 0.59751925, 0.65555307, 0.94982658, 0.96909938,
            0.51224708, 0.38403579, 0.87572036
        ],
        [
            0.72604293, 0.04691354, 0.40678895, 0.35535267, 0.19270385, 0.23519029, 0.66655291,
            0.2640271, 0.55168146, 0.08576613
        ],
        [
            0.95672032, 0.57141143, 0.20602622, 0.75538652, 0.96776002, 0.44755464, 0.82362134,
            0.29203538, 0.30861593, 0.39762704
        ],
        [
            0.26186081, 0.9658112, 0.27424003, 0.50570756, 0.81148425, 0.5536027, 0.59788685,
            0.05054026, 0.28394442, 0.6402348
        ],
        [
            0.02258505, 0.60606998, 0.68343238, 0.80049993, 0.33494932, 0.42950821, 0.37033585,
            0.0394791, 0.50698832, 0.29841292
        ],
        [
            0.93881605, 0.84357476, 0.29760668, 0.25654386, 0.71037216, 0.14646495, 0.99062756,
            0.9552909, 0.79662907, 0.60948931
        ],
        [
            0.72719878, 0.09518696, 0.39577461, 0.61575269, 0.31079138, 0.46793707, 0.85144907,
            0.86081384, 0.82082742, 0.2372746
        ],
        [
            0.69777578, 0.79387192, 0.94631988, 0.99063906, 0.29514915, 0.87954188, 0.74155299,
            0.03520088, 0.83411528, 0.47134156
        ],
        [
            0.26704507, 0.28724008, 0.04289522, 0.58365099, 0.94414074, 0.5729697, 0.72244124,
            0.7707775, 0.02079507, 0.22973805
        ],
        [
            0.18128673, 0.05054512, 0.65237513, 0.27093725, 0.32479269, 0.53774402, 0.08921466,
            0.18494033, 0.78120433, 0.15868788
        ],
        [
            0.81183357, 0.21792394, 0.66204943, 0.6886836, 0.39724786, 0.59319295, 0.02472531,
            0.21891201, 0.53421341, 0.40418788
        ]
    ]];

    let kernel14: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.53426074, 0.2046122, 0.29362341, 0.7835011, 0.47930118, 0.28956241, 0.73207744,
            0.55179525, 0.37774231, 0.04187773, 0.2388364, 0.63051956, 0.97746942, 0.64151327,
            0.41629992, 0.04763152, 0.75958186, 0.13098117, 0.62382413, 0.41020241, 0.57102816,
            0.59153586, 0.66274745, 0.64542708, 0.81208469, 0.22876394, 0.6206928,
        ],
    )
    .unwrap();
    let conv_layer14 = ConvolutionLayer::new(kernel14, 1, Padding::Valid);
    let target_output14 = array![
        [
            [
                1.15934074, 1.79530346, 2.27800441, 2.3123343, 2.12669945, 2.21604133, 2.49597073,
                2.88495159
            ],
            [
                1.49437344, 1.64323652, 1.53892541, 1.39035356, 1.66413546, 2.2572248, 2.51656413,
                2.90284562
            ],
            [
                2.25336766, 1.8939575, 1.51594889, 1.69247866, 2.25147653, 2.88503075, 2.72412181,
                2.53517199
            ],
            [
                2.43123245, 1.69735086, 1.45349741, 1.82411063, 2.13512468, 2.74878287, 2.62058425,
                2.07585907
            ],
            [
                2.54681921, 1.78048265, 1.88899803, 2.42720819, 2.5524025, 2.32878542, 2.424541,
                1.63979161
            ],
            [
                2.42828965, 2.02721953, 1.9366734, 2.51073694, 2.68342853, 1.92382932, 2.01961255,
                1.20651317
            ],
            [
                2.04516411, 2.72701669, 2.30958104, 2.61156654, 2.54681373, 1.76202881, 1.6496979,
                1.11838222
            ],
            [
                2.18930888, 2.63350391, 2.13216805, 2.14598942, 2.27297187, 1.97309816, 2.42228866,
                2.00258231
            ],
            [
                2.2972033, 2.09722066, 1.93601227, 2.00525093, 2.09655595, 2.32057476, 3.22788191,
                2.69197106
            ],
            [
                2.797894, 2.50704002, 2.46618748, 2.31264687, 2.39621472, 2.65180492, 3.15338612,
                2.65298915
            ],
            [
                2.09562826, 2.12947893, 2.44051456, 2.86696076, 2.65957808, 2.84096766, 2.6735003,
                1.92390013
            ],
            [
                1.57945347, 1.82257903, 2.13146091, 2.50432897, 2.34713912, 2.16310692, 2.05224586,
                1.63466775
            ],
            [
                1.53386605, 1.54934895, 2.16934729, 2.14434862, 1.99930668, 1.72848821, 1.27522826,
                1.65650666
            ]
        ],
        [
            [
                1.39956796, 1.89051843, 2.16515326, 2.54162645, 1.95418251, 1.96949804, 2.32802129,
                2.85125065
            ],
            [
                1.35549414, 1.75690925, 1.34050131, 0.92414886, 1.73164845, 1.98098779, 2.35934567,
                2.48291445
            ],
            [
                2.08183861, 1.26808405, 1.39597785, 1.39848328, 1.83021808, 2.75207424, 2.62464166,
                2.23749018
            ],
            [
                2.08241439, 1.74502623, 1.22230256, 2.0155921, 2.5687511, 3.05716395, 2.14498925,
                2.08676767
            ],
            [
                1.75701153, 1.18978214, 1.97974861, 2.17904949, 1.97599733, 2.04679966, 1.75712395,
                1.61343706
            ],
            [
                2.46760559, 1.64889956, 1.8157413, 2.4677012, 2.59792876, 1.91006267, 1.663764,
                1.14780974
            ],
            [
                1.84710276, 2.53276896, 2.41400385, 2.1391263, 2.45468187, 1.65223897, 1.14790595,
                1.26080155
            ],
            [
                1.83440387, 2.08873677, 2.2670145, 2.31117964, 1.57513344, 1.75625324, 1.69166923,
                1.69211066
            ],
            [
                2.31811619, 2.2014358, 1.70948064, 1.47847652, 2.03260136, 2.08946657, 3.05930781,
                2.70500779
            ],
            [
                2.12527466, 1.75781286, 2.26909733, 1.65539265, 2.42704725, 2.81680298, 2.66944551,
                2.77832484
            ],
            [
                2.12453866, 2.4049325, 2.61201429, 2.73887348, 2.39789081, 2.79281068, 2.47607064,
                1.23002231
            ],
            [
                1.41113091, 1.96856606, 1.55113637, 2.41129971, 2.71679521, 1.69813156, 2.02172303,
                1.98325586
            ],
            [
                0.87896019, 1.57444739, 2.28986859, 1.72050273, 1.80422139, 1.41809058, 0.99594843,
                1.39923453
            ]
        ],
        [
            [
                1.60750151, 2.52454305, 3.09422731, 2.83321977, 2.82087207, 3.01963782, 3.14856076,
                3.31419349
            ],
            [
                1.88631225, 1.97949421, 1.92815912, 2.01958895, 1.96153855, 2.83707809, 3.1908114,
                3.74891019
            ],
            [
                2.48185778, 2.23132658, 1.62492895, 2.10638785, 2.76888609, 3.31255865, 3.22941732,
                3.16228867
            ],
            [
                2.86102724, 1.94677496, 1.81148756, 2.39304519, 2.97735405, 3.2439816, 3.08459234,
                2.54477453
            ],
            [
                2.80211139, 2.40779376, 2.27308631, 2.78637052, 3.45153165, 2.76698017, 2.88652444,
                2.10887003
            ],
            [
                2.38588047, 2.52209425, 2.59876752, 2.7520411, 3.15471959, 2.18770814, 2.39241719,
                1.57729375
            ],
            [
                2.50204659, 3.09717035, 2.95816803, 3.3113265, 3.09055209, 1.99817228, 2.00470877,
                1.5003984
            ],
            [
                2.7123692, 3.24425387, 2.7341826, 2.39894819, 3.02180123, 2.0829587, 2.64577532,
                2.40188003
            ],
            [
                2.81744003, 2.52739, 2.40570688, 2.46070051, 2.6411891, 2.91122603, 3.66785145,
                2.92353559
            ],
            [
                3.18596339, 2.98690128, 2.71763992, 2.82523298, 3.01359057, 3.34566593, 4.19667244,
                2.98905492
            ],
            [
                2.57756305, 2.9148438, 2.83814478, 3.17369938, 3.45436454, 3.27617264, 3.12924004,
                2.66032982
            ],
            [
                2.24104047, 2.38260293, 2.98016024, 3.21018481, 2.81501985, 2.76006985, 2.50458932,
                1.67866337
            ],
            [
                1.99076688, 1.92308033, 2.52215648, 2.81950116, 2.31628895, 2.21375847, 1.86001909,
                1.90096867
            ]
        ]
    ];
    let current_output14 = conv_layer14.convolve(&test_input14);

    assert!(
        arr_allclose(&current_output14, &target_output14),
        "{:?} was not equal to {:?}",
        current_output14,
        target_output14
    );

    let test_input15 = array![[
        [
            0.19057496, 0.46227381, 0.97724451, 0.17967562, 0.27354005, 0.48198409, 0.09082693,
            0.62176847, 0.0965838, 0.89049918
        ],
        [
            0.53370575, 0.17222154, 0.62424076, 0.95776685, 0.99836098, 0.15088301, 0.28713444,
            0.35105018, 0.17659021, 0.96740326
        ],
        [
            0.65025777, 0.19593079, 0.31190461, 0.55247457, 0.38556734, 0.18145509, 0.94255226,
            0.70360031, 0.34025519, 0.16401337
        ],
        [
            0.28418577, 0.55049183, 0.61480714, 0.77402505, 0.37459208, 0.25677746, 0.80441073,
            0.17314304, 0.59462265, 0.30094626
        ],
        [
            0.06480476, 0.57987543, 0.62549654, 0.6065069, 0.9259787, 0.36779149, 0.69532606,
            0.83565686, 0.39276573, 0.18570695
        ],
        [
            0.61698795, 0.90647069, 0.01547038, 0.2551995, 0.11438051, 0.03861368, 0.65245317,
            0.36442749, 0.08230381, 0.79969247
        ],
        [
            0.27816204, 0.3741886, 0.44356521, 0.27386905, 0.41718068, 0.14990133, 0.4750283,
            0.63582629, 0.77572674, 0.7072159
        ],
        [
            0.34310366, 0.36999545, 0.82008522, 0.46510442, 0.92308568, 0.86201534, 0.04691705,
            0.12260284, 0.89921829, 0.47400049
        ],
        [
            0.74925438, 0.05440097, 0.28273951, 0.9184355, 0.90649879, 0.70278021, 0.19125042,
            0.86701486, 0.08634489, 0.72265401
        ],
        [
            0.7754086, 0.00211577, 0.64434053, 0.23444229, 0.98491788, 0.98933159, 0.87634913,
            0.48734385, 0.8760625, 0.53053114
        ],
        [
            0.01152504, 0.67888745, 0.7615684, 0.46805379, 0.07214947, 0.549209, 0.83832534,
            0.00365476, 0.97821559, 0.74190564
        ],
        [
            0.40790307, 0.00302504, 0.80174474, 0.76896708, 0.50054826, 0.16478458, 0.89107825,
            0.77630429, 0.73042728, 0.41667555
        ],
        [
            0.73489738, 0.71259014, 0.93557405, 0.37013117, 0.14954912, 0.33766477, 0.39673003,
            0.03940821, 0.2414454, 0.93733051
        ],
        [
            0.84819097, 0.92724316, 0.86047886, 0.92845491, 0.80238469, 0.06647867, 0.12827316,
            0.02774826, 0.89827949, 0.1193029
        ],
        [
            0.37523486, 0.28379654, 0.0638791, 0.08446726, 0.68760882, 0.26305929, 0.01052708,
            0.45302406, 0.10402057, 0.55390824
        ]
    ]];

    let kernel15: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.39986407, 0.53770445, 0.24856173, 0.12796782, 0.80071911, 0.38390577, 0.69089755,
            0.58509184, 0.71101062, 0.17578217, 0.55867786, 0.71616314, 0.32475841, 0.91969988,
            0.46712968, 0.08430128, 0.83232371, 0.49657015, 0.24024557, 0.60874841, 0.474187,
            0.97708859, 0.99522821, 0.77498844, 0.72536879, 0.26021663, 0.88695781,
        ],
    )
    .unwrap();
    let conv_layer15 = ConvolutionLayer::new(kernel15, 1, Padding::Valid);
    let target_output15 = array![
        [
            [
                1.79919064, 2.35522485, 2.59831548, 2.05493927, 1.79264557, 1.9572202, 2.08508658,
                1.88142598
            ],
            [
                1.77658188, 2.41989756, 2.78705692, 2.34290934, 2.08918357, 2.12120771, 2.24195099,
                1.58274686
            ],
            [
                1.98486757, 2.44110823, 2.80528212, 2.19323087, 2.39771891, 2.75279379, 2.55824876,
                2.05808306
            ],
            [
                2.24284101, 2.36777306, 1.9176482, 1.80570388, 1.73325384, 2.17042279, 2.19396687,
                1.82502198
            ],
            [
                2.03040695, 1.65809333, 1.81994855, 1.51079595, 1.75058186, 2.22951841, 2.48365545,
                2.40704465
            ],
            [
                2.28009319, 2.0085597, 2.10309839, 2.07411647, 1.7599293, 1.8106811, 2.08851957,
                2.3106091
            ],
            [
                1.8282057, 2.19479823, 2.6373055, 3.16528726, 2.36533093, 1.88225746, 1.87484872,
                2.92817736
            ],
            [
                1.78306925, 1.83561885, 3.20968628, 3.45144081, 3.47885513, 2.51909208, 2.57355142,
                2.33437061
            ],
            [
                1.69407451, 2.25570178, 2.33183742, 2.98390055, 3.00979567, 2.48730874, 2.67968631,
                2.64263225
            ],
            [
                2.16243577, 2.29987884, 2.48819137, 2.13906932, 2.99026871, 2.91806984, 2.90516543,
                3.12634373
            ],
            [
                2.51123381, 3.03776288, 2.45389724, 1.50823462, 1.65359521, 2.19734192, 2.06520224,
                2.39098167
            ],
            [
                3.12816072, 3.41009378, 3.04022837, 2.07253456, 1.63652897, 1.2547071, 1.87384987,
                1.99453211
            ],
            [
                2.56162977, 2.33760691, 2.3543334, 1.74687505, 1.18159604, 0.99002075, 0.96962374,
                1.91487956
            ]
        ],
        [
            [
                1.98772538, 2.38381219, 2.6956048, 2.28689742, 1.63110292, 2.20701122, 1.76514673,
                1.95327806
            ],
            [
                1.96160412, 2.61598992, 3.0313971, 1.95750868, 1.84256566, 2.46996856, 1.99240637,
                2.13018823
            ],
            [
                2.13162422, 2.58081532, 2.74348283, 2.1627841, 2.30720735, 2.99116373, 2.44988227,
                1.66449046
            ],
            [
                2.45852184, 2.25749731, 2.27277422, 1.88551748, 2.1149466, 2.49510789, 2.24101233,
                1.79385543
            ],
            [
                2.3797493, 1.85029364, 1.87760699, 1.5382005, 1.63947392, 2.55816388, 2.41033483,
                2.11736441
            ],
            [
                2.01174903, 1.95287359, 1.73264372, 1.91462684, 1.82277942, 1.58746696, 2.0311594,
                2.92718935
            ],
            [
                1.65925121, 2.29736066, 2.89344287, 2.97215152, 2.36809778, 1.77642214, 2.32295251,
                2.6436832
            ],
            [
                1.66685903, 2.21591902, 3.16357064, 4.00588083, 3.04917288, 2.12948585, 2.53509927,
                2.59563851
            ],
            [
                1.86354053, 2.45159864, 2.58656788, 2.98753262, 3.20754719, 2.95210409, 2.28135061,
                3.11290169
            ],
            [
                2.0178318, 2.71719241, 2.61727619, 2.33816767, 2.89543676, 3.10464311, 2.87025023,
                3.08277202
            ],
            [
                2.55612016, 3.00013399, 2.10964608, 1.62631559, 2.14090776, 2.18142915, 2.38066268,
                2.86673522
            ],
            [
                3.24919772, 3.51932859, 2.88687038, 1.72743034, 1.54931891, 1.70184124, 1.87128401,
                2.32489276
            ],
            [
                3.02707529, 2.55827713, 2.40364337, 2.17102742, 1.16284335, 0.7176432, 1.18106329,
                2.1038115
            ]
        ],
        [
            [
                2.76655388, 3.03625751, 3.52270913, 3.14660859, 2.91326904, 2.17212343, 2.38148475,
                2.64329934
            ],
            [
                2.49583912, 3.05138087, 3.33945012, 2.86024594, 2.80766034, 2.58728933, 3.407269,
                2.35103703
            ],
            [
                2.47809291, 3.36986637, 3.68828297, 2.7886939, 3.27911472, 3.32557178, 3.30541348,
                2.32120872
            ],
            [
                2.51724386, 3.42058849, 2.90799856, 2.58408022, 3.10913181, 2.85349298, 3.0371716,
                2.8926549
            ],
            [
                2.87471986, 2.53631377, 2.07934642, 1.7170825, 2.19484901, 2.67368746, 3.12403584,
                2.87599587
            ],
            [
                2.76786351, 2.26182556, 2.7772119, 2.29035139, 2.22082186, 2.43748093, 2.97924113,
                3.20156837
            ],
            [
                2.65239573, 2.9555707, 3.6987741, 3.957443, 3.22298121, 2.93920779, 2.17468786,
                3.63473296
            ],
            [
                2.83639693, 2.23212671, 4.21268034, 4.73047972, 4.25129223, 3.22065997, 3.16848803,
                3.34677792
            ],
            [
                2.46679449, 2.55148077, 3.42128134, 3.92714977, 4.30121803, 3.53267503, 4.11159372,
                3.27798581
            ],
            [
                2.77801108, 3.18078566, 3.25603056, 2.91397786, 3.71751714, 3.41598606, 3.99971318,
                3.57679176
            ],
            [
                3.34839153, 3.33409691, 3.34628963, 2.40090251, 2.64106727, 2.67658997, 3.38900304,
                3.67933178
            ],
            [
                4.25206804, 4.48764706, 3.87392449, 2.28099036, 2.1458385, 1.81166279, 2.54399061,
                2.19364285
            ],
            [
                3.87510848, 3.69554925, 3.58582163, 2.57085466, 1.95573759, 1.15080678, 1.30068123,
                2.46145177
            ]
        ]
    ];
    let current_output15 = conv_layer15.convolve(&test_input15);

    assert!(
        arr_allclose(&current_output15, &target_output15),
        "{:?} was not equal to {:?}",
        current_output15,
        target_output15
    );

    let test_input16 = array![[
        [
            0.51814858, 0.58713257, 0.76900614, 0.57457772, 0.81429287, 0.78002182, 0.70697715,
            0.33134555, 0.74070271, 0.58577558
        ],
        [
            0.40479861, 0.75061174, 0.11343616, 0.87953979, 0.83064, 0.88583721, 0.3898591,
            0.93507648, 0.96733689, 0.64465624
        ],
        [
            0.0283905, 0.22112075, 0.13918551, 0.34128339, 0.65248053, 0.29187398, 0.70765273,
            0.32796223, 0.22921298, 0.59572685
        ],
        [
            0.57266627, 0.72872377, 0.8248998, 0.29288607, 0.92347337, 0.25887515, 0.91578676,
            0.80078502, 0.76703621, 0.89904613
        ],
        [
            0.84243075, 0.70455592, 0.43518324, 0.48451255, 0.31151697, 0.10086012, 0.52423534,
            0.19001916, 0.01069371, 0.01020448
        ],
        [
            0.12606936, 0.04778918, 0.8456499, 0.57045124, 0.46361541, 0.75325534, 0.62787766,
            0.3127784, 0.9686197, 0.96754895
        ],
        [
            0.57661321, 0.64639047, 0.63473378, 0.52757851, 0.55145215, 0.08155768, 0.13378454,
            0.22621571, 0.73179848, 0.54283262
        ],
        [
            0.90943681, 0.2528448, 0.24383227, 0.74464061, 0.5544842, 0.01949351, 0.13375893,
            0.04438102, 0.84890004, 0.6848837
        ],
        [
            0.92208021, 0.00185038, 0.44556107, 0.00844186, 0.8082305, 0.33159012, 0.51384732,
            0.65069796, 0.93000012, 0.58097034
        ],
        [
            0.54131552, 0.57145609, 0.21683556, 0.85481279, 0.02262598, 0.62476623, 0.33444465,
            0.98826235, 0.03221937, 0.12669063
        ],
        [
            0.50246466, 0.42635268, 0.91064157, 0.77929238, 0.07601635, 0.6067355, 0.3940292,
            0.30074375, 0.1328066, 0.72018455
        ],
        [
            0.34319455, 0.62951615, 0.03357495, 0.03066352, 0.51702978, 0.92831143, 0.36689134,
            0.63273019, 0.37459056, 0.93406816
        ],
        [
            0.33968035, 0.59511477, 0.43509081, 0.70945081, 0.29612544, 0.80898664, 0.7905302,
            0.47484182, 0.69897064, 0.85952836
        ],
        [
            0.70326394, 0.38940283, 0.37933361, 0.22292, 0.3949557, 0.27719193, 0.86197712,
            0.9255003, 0.30563156, 0.58444322
        ],
        [
            0.36121983, 0.09087573, 0.23811614, 0.17829578, 0.93985691, 0.04807154, 0.75882014,
            0.05337733, 0.19222781, 0.98696714
        ]
    ]];

    let kernel16: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.32119673, 0.38722879, 0.74463385, 0.62609767, 0.0084233, 0.31085488, 0.10247752,
            0.60939456, 0.00353958, 0.22236562, 0.31823837, 0.96274444, 0.86644696, 0.82056452,
            0.77927851, 0.61566939, 0.59327534, 0.33567884, 0.96525836, 0.47292595, 0.26693419,
            0.70544795, 0.28257244, 0.02662205, 0.05098573, 0.82932135, 0.94160771, 0.91014123,
            0.07020015, 0.84250683, 0.97081367, 0.3117258, 0.11623824, 0.19467542, 0.09732427,
            0.43287596, 0.20617688, 0.88570485, 0.96018511, 0.09430943, 0.28105716, 0.69428951,
            0.07089514, 0.71485813, 0.00085336, 0.23516754, 0.04615124, 0.59699445, 0.53420082,
            0.75324224,
        ],
    )
    .unwrap();
    let conv_layer16 = ConvolutionLayer::new(kernel16, 1, Padding::Valid);
    let target_output16 = array![
        [
            [5.57864285, 6.36999798, 6.27074432, 6.93872976, 6.13153791, 6.57061434],
            [5.92683649, 6.08926916, 6.27485752, 6.36177158, 6.30760479, 6.48669958],
            [5.33428097, 5.05220366, 6.01648569, 4.87101364, 4.90554857, 4.90465975],
            [5.8497262, 6.21355915, 5.84021521, 5.06889296, 5.68581295, 5.72729921],
            [6.24393559, 4.81009579, 3.98037291, 4.14938354, 4.09654856, 4.40443182],
            [5.33532429, 4.88714933, 5.14196014, 4.45212936, 5.04998779, 5.62567425],
            [5.44203472, 5.20844793, 5.17355347, 4.83528519, 5.22170925, 4.86218023],
            [5.63845444, 4.52826262, 5.26570415, 4.79465151, 4.68679571, 4.73543072],
            [4.60345984, 5.84209728, 5.16050673, 5.12682676, 5.47292185, 6.51455545],
            [5.16772032, 5.15658331, 5.21071291, 6.11855268, 5.96234179, 7.08150625],
            [5.14458418, 4.96705627, 5.47398615, 6.46297121, 6.04480648, 6.43751144]
        ],
        [
            [5.7908988, 6.8193264, 5.76298332, 6.92470598, 6.98824167, 5.82912254],
            [5.94104624, 6.40681744, 6.01291466, 7.28338718, 7.50266218, 7.09244061],
            [5.12630558, 5.07819557, 5.34957075, 4.65693903, 5.60137749, 5.24612713],
            [7.54805756, 5.97368908, 6.12337494, 5.37881231, 5.53989601, 6.31953716],
            [6.02745628, 4.89401627, 5.56347561, 4.17966032, 4.19764137, 5.15624666],
            [4.82590866, 6.40368843, 5.0129528, 5.68398333, 5.42579269, 5.70761633],
            [6.56405926, 4.64028788, 5.4902873, 4.70430183, 5.23748159, 4.43430662],
            [5.72317219, 4.6390028, 5.41406107, 4.86321735, 5.55923939, 4.94966793],
            [6.14577627, 4.66848612, 5.51575184, 6.16170549, 6.16635275, 5.91587973],
            [4.40869427, 5.13079786, 6.37544584, 6.8873229, 5.15706921, 6.74120522],
            [5.40864611, 5.93758869, 5.41050148, 5.40455627, 5.51257563, 6.58818865]
        ]
    ];
    let current_output16 = conv_layer16.convolve(&test_input16);

    assert!(
        arr_allclose(&current_output16, &target_output16),
        "{:?} was not equal to {:?}",
        current_output16,
        target_output16
    );

    let test_input17 = array![[
        [
            0.38793717, 0.2669936, 0.29911963, 0.73809717, 0.17850904, 0.65695777, 0.81192583,
            0.26960827, 0.12972822, 0.65970521
        ],
        [
            0.73459294, 0.64856812, 0.22981846, 0.24392553, 0.26706977, 0.32711208, 0.95813235,
            0.31259445, 0.91530424, 0.17250775
        ],
        [
            0.715259, 0.5014661, 0.72737892, 0.23862323, 0.40936508, 0.04974006, 0.86882771,
            0.46409306, 0.20740514, 0.19872624
        ],
        [
            0.27135859, 0.02647329, 0.90772042, 0.97377277, 0.47016056, 0.06899374, 0.47393377,
            0.49847801, 0.02369655, 0.10663922
        ],
        [
            0.02373338, 0.21085606, 0.56809617, 0.70259373, 0.4123619, 0.01858313, 0.25862442,
            0.4823392, 0.47215321, 0.59388602
        ],
        [
            0.82653426, 0.06712108, 0.32281389, 0.11140465, 0.59627574, 0.49184018, 0.83955359,
            0.13370071, 0.25792847, 0.54400548
        ],
        [
            0.87923629, 0.58678147, 0.03434712, 0.81235951, 0.67917911, 0.02545591, 0.2468276,
            0.91919081, 0.02958322, 0.20474248
        ],
        [
            0.76555797, 0.82307639, 0.24628638, 0.17773866, 0.17740512, 0.4937253, 0.94664534,
            0.13741272, 0.72861299, 0.53385909
        ],
        [
            0.7898385, 0.47936276, 0.23633895, 0.85722158, 0.06004518, 0.33472239, 0.50485811,
            0.09635731, 0.18004768, 0.24514199
        ],
        [
            0.22804099, 0.05106571, 0.30884217, 0.38737775, 0.7948706, 0.50525172, 0.23866583,
            0.50680708, 0.15044465, 0.09537497
        ],
        [
            0.13518302, 0.72579789, 0.8645809, 0.71760467, 0.09527912, 0.72005635, 0.73822259,
            0.41232715, 0.54910611, 0.71836695
        ],
        [
            0.0796247, 0.04476061, 0.19437055, 0.79608139, 0.6295519, 0.98046998, 0.56819233,
            0.10505454, 0.94805061, 0.10080673
        ],
        [
            0.95383711, 0.23554011, 0.94827145, 0.46488547, 0.6026009, 0.76637876, 0.3219317,
            0.4168223, 0.25562466, 0.89971455
        ],
        [
            0.59076215, 0.22263806, 0.68407231, 0.24348243, 0.94946456, 0.34627815, 0.97489059,
            0.74076656, 0.96770884, 0.13005458
        ],
        [
            0.69001644, 0.14445187, 0.92162489, 0.03732051, 0.44508552, 0.66653196, 0.9382296,
            0.80578686, 0.97614501, 0.60987449
        ]
    ]];

    let kernel17: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.04455515, 0.5690737, 0.64281972, 0.21377263, 0.66924338, 0.86947585, 0.12576633,
            0.81548239, 0.36465631, 0.32867206, 0.00950876, 0.02384425, 0.68798538, 0.62435431,
            0.061506, 0.4878141, 0.24558065, 0.15653012, 0.40195073, 0.52372195, 0.62839465,
            0.67610437, 0.63705762, 0.74306165, 0.82828889, 0.39436254, 0.45260344, 0.66066552,
            0.73097629, 0.40489907, 0.95513747, 0.44314739, 0.66317318, 0.18731794, 0.43634079,
            0.4686375, 0.76206472, 0.57885796, 0.26523941, 0.13030814, 0.79954732, 0.95100098,
            0.58605653, 0.82163815, 0.21192186, 0.12197075, 0.06249312, 0.39688331, 0.23130116,
            0.67013899,
        ],
    )
    .unwrap();
    let conv_layer17 = ConvolutionLayer::new(kernel17, 1, Padding::Valid);
    let target_output17 = array![
        [
            [4.71813297, 4.47533131, 4.84735775, 4.86926699, 5.1422267, 4.29636621],
            [5.54247093, 4.17952108, 5.13542795, 4.27507114, 5.68872547, 4.37307453],
            [6.42360973, 4.65533781, 4.97526264, 4.9069562, 4.38972425, 4.02723122],
            [5.10750103, 4.80800581, 5.01476812, 5.11808348, 4.59960365, 4.14766359],
            [5.17048073, 4.59339285, 4.94055653, 3.73859763, 4.36455297, 4.55833387],
            [4.64619637, 4.547369, 4.6691308, 5.51765728, 4.8004961, 3.99084973],
            [5.31964397, 5.4171772, 5.18138885, 5.32659578, 4.73462057, 4.89851522],
            [4.63121939, 5.77933407, 6.05422878, 5.57119274, 5.60017204, 5.24956846],
            [5.54697895, 5.55236626, 5.9711237, 5.30517721, 5.4584446, 5.19875813],
            [5.82962799, 6.35160303, 6.95071602, 7.0666995, 5.97357607, 6.03240728],
            [5.47681808, 6.01850939, 6.76807976, 6.86767435, 7.59027004, 6.99889946]
        ],
        [
            [5.99620533, 5.5470624, 5.78804874, 5.39927769, 5.24589348, 4.94978571],
            [5.500525, 5.31152391, 6.37811232, 4.92228651, 4.97045279, 4.72320652],
            [5.26331949, 4.83612251, 5.75381994, 5.89866972, 4.64126682, 4.42124844],
            [5.65297318, 5.10443068, 5.54802322, 5.59483004, 5.40467644, 4.08002043],
            [5.83947563, 4.57413912, 4.80976248, 4.70061779, 4.90074921, 5.41533804],
            [6.38122797, 4.85401535, 4.91021681, 5.68712234, 4.58293533, 4.58489084],
            [5.51471138, 5.7664237, 5.23527479, 5.28956366, 5.6276474, 4.84007025],
            [5.49061537, 6.12183571, 6.14106083, 6.14494514, 5.67306328, 5.58154058],
            [5.54625559, 5.72484207, 6.44120836, 6.4440856, 5.72853279, 6.15448284],
            [5.70143843, 6.64874649, 7.80873585, 7.02926493, 7.01037979, 5.98527288],
            [5.79410458, 6.54163599, 7.23453808, 7.92312193, 8.19989681, 7.64807749]
        ]
    ];
    let current_output17 = conv_layer17.convolve(&test_input17);

    assert!(
        arr_allclose(&current_output17, &target_output17),
        "{:?} was not equal to {:?}",
        current_output17,
        target_output17
    );

    let test_input18 = array![[
        [
            0.89535372, 0.96970482, 0.71544569, 0.82037819, 0.21395261, 0.74579813, 0.71471521,
            0.05275503, 0.93545915, 0.89868745
        ],
        [
            0.86908559, 0.63580819, 0.15263816, 0.74669492, 0.62358908, 0.62486134, 0.73523241,
            0.23342585, 0.98271262, 0.93357895
        ],
        [
            0.96423954, 0.02081718, 0.47192466, 0.50718916, 0.9034243, 0.67857299, 0.48106776,
            0.27722874, 0.0061415, 0.2891619
        ],
        [
            0.99375291, 0.02278532, 0.76614291, 0.23943478, 0.75684809, 0.1846646, 0.05945846,
            0.75223735, 0.72325596, 0.56901877
        ],
        [
            0.80126183, 0.13196982, 0.25499959, 0.96842652, 0.09975351, 0.65753681, 0.01221572,
            0.56905168, 0.86330318, 0.5916843
        ],
        [
            0.73279841, 0.38392547, 0.45234742, 0.88714563, 0.48625888, 0.49746638, 0.280569,
            0.32727791, 0.73086985, 0.16297499
        ],
        [
            0.86902393, 0.58347085, 0.33016786, 0.24064531, 0.59915099, 0.8538999, 0.30761604,
            0.3641591, 0.11430371, 0.45364544
        ],
        [
            0.69845229, 0.70536543, 0.40033871, 0.38632824, 0.91106906, 0.51805139, 0.18372489,
            0.38816592, 0.16589011, 0.91154296
        ],
        [
            0.93466867, 0.90793376, 0.62180165, 0.71993128, 0.5790186, 0.58128011, 0.58975808,
            0.00632351, 0.51240735, 0.36974571
        ],
        [
            0.13892106, 0.99003674, 0.47229374, 0.56468744, 0.59834724, 0.6383385, 0.03793695,
            0.94503431, 0.96132329, 0.60619489
        ],
        [
            0.63035447, 0.51113712, 0.03746503, 0.55833499, 0.30164845, 0.68653253, 0.99669343,
            0.51277812, 0.25915265, 0.34361983
        ],
        [
            0.66471276, 0.42920146, 0.22015804, 0.22396304, 0.55329103, 0.21043802, 0.03016802,
            0.13123624, 0.4177692, 0.15363416
        ],
        [
            0.26550946, 0.97993737, 0.64686607, 0.22700246, 0.28266105, 0.75680146, 0.49555436,
            0.75771218, 0.20788052, 0.91674454
        ],
        [
            0.56273526, 0.45675125, 0.48490577, 0.82385765, 0.4200622, 0.82511256, 0.35886786,
            0.09741933, 0.50827706, 0.09494946
        ],
        [
            0.93389189, 0.41674573, 0.12654001, 0.47637335, 0.72644437, 0.22123201, 0.29542014,
            0.46568521, 0.68506433, 0.68084162
        ]
    ]];

    let kernel18: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.37799812, 0.80578898, 0.2891591, 0.69930453, 0.33186396, 0.97341993, 0.96441959,
            0.09362596, 0.04142809, 0.27610768, 0.43870836, 0.34610719, 0.38488158, 0.24301769,
            0.23232727, 0.32100558, 0.22719597, 0.85453414, 0.76819397, 0.85450962, 0.65347099,
            0.64399242, 0.61992766, 0.5419032, 0.42076096, 0.7094996, 0.88026641, 0.30416232,
            0.00992903, 0.07512626, 0.21167818, 0.95756755, 0.33277866, 0.58041593, 0.14874539,
            0.84465177, 0.33960778, 0.03217437, 0.23459853, 0.86872336, 0.05481404, 0.40751188,
            0.13763187, 0.38947831, 0.19455469, 0.22310271, 0.710135, 0.38075932, 0.36192991,
            0.57883709,
        ],
    )
    .unwrap();
    let conv_layer18 = ConvolutionLayer::new(kernel18, 1, Padding::Valid);
    let target_output18 = array![
        [
            [7.73594856, 5.66337156, 6.2683754, 6.12064934, 6.37990141, 7.3672533],
            [6.88632154, 5.69583941, 5.94233847, 6.59138489, 6.46653843, 6.86498117],
            [6.54284334, 6.16327286, 5.92069149, 6.29031992, 5.75182772, 4.61662388],
            [6.13199568, 6.16448545, 5.97583532, 6.11000347, 5.30493927, 4.89244175],
            [7.4147501, 6.46921921, 6.88851595, 5.88847399, 5.58652687, 5.4810853],
            [7.78844595, 7.26269674, 6.23944044, 5.88625669, 6.40879917, 5.89724731],
            [7.01151657, 6.78395414, 5.81049585, 6.8993535, 7.12539911, 6.52575779],
            [6.65424156, 6.77172565, 6.02046156, 6.29930592, 5.89622736, 5.07154369],
            [6.54820156, 6.66155863, 5.55079269, 5.6448679, 5.66321516, 5.53831577],
            [6.36688042, 6.08604193, 5.82912111, 6.07826519, 6.07023001, 6.58433723],
            [6.43212461, 5.66586161, 5.35778666, 5.80997372, 5.55332804, 5.05324125]
        ],
        [
            [6.02845764, 5.27828598, 5.31471157, 4.93116426, 5.19067478, 5.42972851],
            [5.41255808, 4.3610487, 5.15541601, 5.26830578, 5.73864985, 4.21331978],
            [4.5680933, 4.53417969, 4.23202372, 5.35522747, 5.07308292, 4.51077366],
            [5.38709354, 4.40507317, 5.04371786, 4.62818956, 4.65817499, 3.5670495],
            [5.95391846, 5.49886847, 5.32064152, 4.49206114, 4.22103119, 4.2420764],
            [6.21107435, 5.48327875, 4.83215094, 5.35143185, 5.33985519, 4.56512642],
            [6.09095383, 5.2984972, 5.12228775, 5.06553507, 5.55781221, 4.82388973],
            [5.67209911, 5.20838165, 4.3964839, 5.38460541, 5.16748381, 4.13500309],
            [6.03747368, 5.58679056, 5.01614761, 5.00800896, 4.88428783, 5.0442338],
            [5.23823452, 4.70348883, 4.48600149, 4.54284573, 5.27560043, 4.04638767],
            [4.48240519, 4.54248524, 4.20943069, 4.26126051, 4.02534437, 5.10813236]
        ]
    ];
    let current_output18 = conv_layer18.convolve(&test_input18);

    assert!(
        arr_allclose(&current_output18, &target_output18),
        "{:?} was not equal to {:?}",
        current_output18,
        target_output18
    );

    let test_input19 = array![
        [
            [0.45671246, 0.02821647, 0.65663048, 0.68215294, 0.13092386, 0.04243296],
            [0.40237482, 0.96531998, 0.08922234, 0.65666055, 0.07955469, 0.30693734],
            [0.61528814, 0.83010793, 0.90806135, 0.10633651, 0.95870479, 0.24841434],
            [0.49642795, 0.02807361, 0.67816274, 0.14359485, 0.96717686, 0.97005397],
            [0.53526694, 0.78941801, 0.44380167, 0.16963241, 0.22258878, 0.54548246],
            [0.33204897, 0.6242531, 0.39491079, 0.95525232, 0.17685722, 0.43900622]
        ],
        [
            [0.25685028, 0.96196441, 0.70541543, 0.25693817, 0.06693319, 0.71142706],
            [0.30001205, 0.24983038, 0.04385824, 0.83179815, 0.9035203, 0.99454165],
            [0.4820838, 0.22076631, 0.6613494, 0.65310255, 0.94143701, 0.02962555],
            [0.00604056, 0.67496017, 0.09254023, 0.16296797, 0.76942613, 0.49170364],
            [0.04446485, 0.81149441, 0.29030006, 0.19190631, 0.18254054, 0.13724733],
            [0.00911832, 0.20514874, 0.59104546, 0.81518296, 0.26495344, 0.62743607]
        ]
    ];

    let kernel19: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.94401775, 0.54503895, 0.64316468, 0.52856827, 0.51207055, 0.03335644, 0.28076501,
            0.07791043, 0.86478264, 0.98050101, 0.54355016, 0.03467919, 0.88657197, 0.36146563,
            0.13580919, 0.88198291, 0.48148783, 0.09721046, 0.7819647, 0.49357224, 0.6708243,
            0.72222506, 0.36648302, 0.37231641, 0.11044633, 0.88196934, 0.78123719, 0.25462821,
            0.82228467, 0.328725, 0.78940447, 0.46583236, 0.30093508, 0.90517751, 0.70023278,
            0.750793, 0.75040493, 0.53337294, 0.51972126, 0.72387765, 0.98317071, 0.20632542,
            0.16955712, 0.76152087, 0.05444199, 0.28148171, 0.15761588, 0.95890854, 0.90069482,
            0.01261302, 0.21181778, 0.78206101, 0.92161582, 0.74544141,
        ],
    )
    .unwrap();
    let conv_layer19 = ConvolutionLayer::new(kernel19, 1, Padding::Valid);
    let target_output19 = array![
        [
            [4.35871792, 4.05935287, 4.8394289, 4.00433922],
            [3.83979177, 3.95127749, 3.80929899, 5.19716549],
            [3.84796643, 4.2434926, 3.97407413, 3.83588505],
            [3.01790524, 4.28374004, 3.50470829, 3.92744064]
        ],
        [
            [5.54083967, 5.28446341, 5.08543253, 5.29933214],
            [4.07326698, 4.77481127, 5.33345604, 6.20618153],
            [4.91855001, 4.62364197, 4.61033297, 4.17329836],
            [4.27697325, 4.7591753, 4.82856846, 4.76016283]
        ],
        [
            [5.0001812, 4.78507662, 4.3039031, 5.11910439],
            [3.89327288, 5.11288548, 4.30451059, 5.71891737],
            [4.45665073, 4.84177208, 4.26477718, 3.24510169],
            [3.49368882, 4.40766144, 4.92927074, 4.09480429]
        ]
    ];
    let current_output19 = conv_layer19.convolve(&test_input19);

    assert!(
        arr_allclose(&current_output19, &target_output19),
        "{:?} was not equal to {:?}",
        current_output19,
        target_output19
    );

    let test_input20 = array![
        [
            [0.88165923, 0.99766619, 0.2966056, 0.2162454, 0.06208929, 0.50320556],
            [0.65657977, 0.53518538, 0.10227188, 0.28489799, 0.20003574, 0.18222419],
            [0.05310873, 0.13790857, 0.78958033, 0.5917116, 0.38009273, 0.27422508],
            [0.90411151, 0.99974847, 0.90908507, 0.4171188, 0.48332874, 0.169661],
            [0.15740211, 0.04401799, 0.33348853, 0.42292984, 0.47983043, 0.90991353],
            [0.54084136, 0.48263519, 0.56740319, 0.62469666, 0.70394503, 0.12639284]
        ],
        [
            [0.16602973, 0.46498439, 0.36747121, 0.75747912, 0.91581801, 0.02039539],
            [0.51063865, 0.6296097, 0.55201156, 0.25472447, 0.48130554, 0.324559],
            [0.66492974, 0.01730853, 0.77949586, 0.13672463, 0.73892077, 0.02376527],
            [0.87988772, 0.63560668, 0.22369854, 0.58457098, 0.96449508, 0.79775544],
            [0.32541804, 0.10196066, 0.82326738, 0.85434138, 0.97105842, 0.50513296],
            [0.04858193, 0.16233305, 0.65101499, 0.62667716, 0.04012987, 0.8986551]
        ]
    ];

    let kernel20: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.59885723, 0.75486132, 0.92305233, 0.80947357, 0.41193416, 0.11411006, 0.29621909,
            0.86571361, 0.30998129, 0.78179376, 0.55146949, 0.93096709, 0.35345063, 0.04673942,
            0.2836077, 0.4491099, 0.16020048, 0.0033604, 0.70367989, 0.09309967, 0.8027366,
            0.66168623, 0.75922126, 0.98626302, 0.41794769, 0.85175452, 0.69523071, 0.89098162,
            0.77955643, 0.25186004, 0.69679788, 0.44887285, 0.44314901, 0.75464064, 0.81323265,
            0.85127236, 0.15431848, 0.56885447, 0.29611066, 0.87579246, 0.95318211, 0.5536974,
            0.53754665, 0.23263316, 0.52779298, 0.67977367, 0.74194602, 0.01885639, 0.08134871,
            0.67013964, 0.42471457, 0.93320845, 0.69664936, 0.5644708,
        ],
    )
    .unwrap();
    let conv_layer20 = ConvolutionLayer::new(kernel20, 1, Padding::Valid);
    let target_output20 = array![
        [
            [4.09717751, 4.16168594, 3.76069856, 3.06466031],
            [4.71157074, 3.81590366, 3.87636161, 3.02728271],
            [4.12472391, 4.04112387, 5.10937929, 3.82863879],
            [4.72270012, 4.37965965, 5.12582684, 4.76182365]
        ],
        [
            [5.24706125, 5.2118125, 5.04748344, 4.49935102],
            [6.6466217, 6.00847101, 5.88574314, 5.04589605],
            [6.10214663, 5.93872929, 7.11950064, 6.46228361],
            [5.65313244, 5.83424664, 6.66064167, 6.96404696]
        ],
        [
            [4.64583826, 3.44947863, 3.91063476, 3.6416738],
            [4.86118984, 4.89836979, 4.74646711, 4.39079618],
            [4.75092411, 5.13667345, 5.9397006, 5.56114292],
            [4.08864594, 4.59735203, 5.02608538, 5.47025156]
        ]
    ];
    let current_output20 = conv_layer20.convolve(&test_input20);

    assert!(
        arr_allclose(&current_output20, &target_output20),
        "{:?} was not equal to {:?}",
        current_output20,
        target_output20
    );

    let test_input21 = array![
        [
            [0.03809474, 0.09368633, 0.52132452, 0.78672022, 0.51032958, 0.05583452],
            [0.78634884, 0.56742164, 0.06023929, 0.39982171, 0.32429225, 0.11995548],
            [0.89870727, 0.16025589, 0.33672986, 0.74226097, 0.14132027, 0.06929818],
            [0.4782574, 0.5697997, 0.11632108, 0.49556066, 0.47647961, 0.74170323],
            [0.34966558, 0.47131558, 0.98382828, 0.67772886, 0.90295657, 0.67075131],
            [0.0573609, 0.8237337, 0.36602103, 0.15022675, 0.66375136, 0.17951131]
        ],
        [
            [0.71209091, 0.48833874, 0.85454535, 0.18296849, 0.10698621, 0.61914566],
            [0.5212063, 0.92237302, 0.65213787, 0.45965454, 0.3666493, 0.99957266],
            [0.63527644, 0.17045998, 0.32906871, 0.39238517, 0.83307838, 0.24240606],
            [0.16471672, 0.39931871, 0.18019378, 0.04206449, 0.49676638, 0.8137173],
            [0.2356948, 0.4160782, 0.96484394, 0.08041501, 0.65951823, 0.8111227],
            [0.50445548, 0.5347742, 0.65936247, 0.2873256, 0.93752427, 0.77539968]
        ]
    ];

    let kernel21: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.72337473, 0.58495981, 0.73156758, 0.51474295, 0.92627021, 0.29888561, 0.62928632,
            0.33485918, 0.68505601, 0.09462127, 0.39446757, 0.73533658, 0.06431016, 0.30438656,
            0.65234167, 0.58759433, 0.62632952, 0.4344534, 0.21980144, 0.00100083, 0.69211635,
            0.84722637, 0.35980777, 0.88600021, 0.35318831, 0.25727804, 0.25435161, 0.75035382,
            0.4171089, 0.7314984, 0.4653744, 0.71255461, 0.95627283, 0.98759052, 0.22617352,
            0.74177312, 0.37862287, 0.50947449, 0.18060002, 0.96206714, 0.49016727, 0.45882289,
            0.75507285, 0.45673514, 0.96909469, 0.10567724, 0.27288928, 0.70271284, 0.84723967,
            0.55496893, 0.91851916, 0.96721133, 0.64802116, 0.21997769,
        ],
    )
    .unwrap();
    let conv_layer21 = ConvolutionLayer::new(kernel21, 1, Padding::Valid);
    let target_output21 = array![
        [
            [4.51308632, 3.68998528, 3.7199862, 4.17807484],
            [3.85323715, 3.50683546, 3.52809238, 4.1293416],
            [4.28805304, 3.92156482, 4.957901, 4.81822538],
            [4.23229074, 4.30779839, 4.75240755, 5.63154221]
        ],
        [
            [5.53389406, 4.47832298, 4.10575342, 3.91152215],
            [4.04890299, 4.12900782, 3.9400394, 4.39314604],
            [4.00359297, 3.70035815, 4.69222212, 4.90314722],
            [4.70801687, 4.49941969, 5.63471794, 5.57359552]
        ],
        [
            [5.45549011, 4.63954592, 3.93893003, 4.8261199],
            [4.58731651, 3.7392931, 3.83821034, 4.87409878],
            [4.28963232, 4.56674051, 5.52203703, 5.17182636],
            [4.83479643, 4.63636875, 5.94143867, 5.50427008]
        ]
    ];
    let current_output21 = conv_layer21.convolve(&test_input21);

    assert!(
        arr_allclose(&current_output21, &target_output21),
        "{:?} was not equal to {:?}",
        current_output21,
        target_output21
    );

    let test_input22 = array![
        [
            [0.38427271, 0.94689554, 0.74909703, 0.32829218, 0.2643334, 0.34910949],
            [0.30524121, 0.50387048, 0.37622158, 0.04119791, 0.71312951, 0.14328648],
            [0.13365868, 0.36297328, 0.68727153, 0.93408337, 0.21441842, 0.91439056],
            [0.40976977, 0.99539249, 0.3781238, 0.28116078, 0.97598533, 0.36442432],
            [0.14792817, 0.83921394, 0.62525704, 0.09807893, 0.3419448, 0.94809758],
            [0.12152596, 0.29696486, 0.41873358, 0.95614773, 0.47523478, 0.25687808]
        ],
        [
            [0.76020871, 0.78506594, 0.43647116, 0.97631707, 0.26839126, 0.08090039],
            [0.48662945, 0.70590996, 0.99664134, 0.77797665, 0.2436962, 0.6407154],
            [0.34835713, 0.87617954, 0.19121104, 0.5305259, 0.65651311, 0.52872786],
            [0.29444506, 0.77558901, 0.24550702, 0.95322045, 0.87540913, 0.34133301],
            [0.63829989, 0.51254486, 0.50059186, 0.93735199, 0.62244836, 0.14624618],
            [0.84175252, 0.94145869, 0.44898897, 0.69933211, 0.36183158, 0.24969168]
        ]
    ];

    let kernel22: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.96716423, 0.20102102, 0.79905301, 0.29777643, 0.05473179, 0.82243273, 0.49220118,
            0.959262, 0.60974809, 0.82510736, 0.77621485, 0.31383016, 0.20135997, 0.40562742,
            0.25492424, 0.58743709, 0.69954113, 0.11803117, 0.95850575, 0.90317617, 0.82405072,
            0.77356562, 0.58680465, 0.50450674, 0.31319898, 0.23300357, 0.80954467, 0.34135282,
            0.24274388, 0.67290714, 0.57593448, 0.80855957, 0.70183952, 0.76145006, 0.58241341,
            0.3309161, 0.67546682, 0.32411023, 0.39496991, 0.41204399, 0.84085379, 0.76511307,
            0.8994237, 0.83643666, 0.38108206, 0.69459298, 0.84416068, 0.40802578, 0.95296427,
            0.72987187, 0.07076581, 0.8826578, 0.44925806, 0.8213124, 0.61120748, 0.96117721,
            0.3876701, 0.88056745, 0.94836312, 0.8974017, 0.4120727, 0.27696644, 0.69025475,
            0.42224764, 0.96611448, 0.04551166, 0.40275672, 0.19091434, 0.44375269, 0.31289253,
            0.23962151, 0.63893185, 0.85605003, 0.27247687, 0.19161025, 0.50402257, 0.58524975,
            0.97299683, 0.59472298, 0.38096266, 0.29591832, 0.28942941, 0.4529504, 0.19683413,
            0.1757779, 0.88774994, 0.52295888, 0.71379829, 0.82603577, 0.8461087, 0.90917349,
            0.80568945, 0.79286723, 0.34100041, 0.32917508, 0.17503857, 0.78460036, 0.72724448,
            0.48829707, 0.9584728, 0.74692632, 0.66009417, 0.59341494, 0.42636783, 0.9874962,
            0.8519623, 0.43363969, 0.02657376, 0.11542477, 0.13354255, 0.5618466, 0.07023699,
            0.35689689, 0.27853092, 0.81448411, 0.99201185, 0.66855964, 0.56708078, 0.68718494,
            0.73198697, 0.84016348, 0.55920875, 0.27009217, 0.10123584, 0.26360001, 0.96576889,
            0.005051, 0.55768741, 0.90251369, 0.55897934, 0.35369453, 0.94294266, 0.51621787,
            0.59068772, 0.05157892, 0.76241788, 0.07249359, 0.45541913, 0.01278013, 0.4782056,
            0.76319753, 0.55419777, 0.04795831, 0.58152421, 0.27330734, 0.88154588, 0.29006036,
            0.23429064, 0.18781202, 0.94584272,
        ],
    )
    .unwrap();
    let conv_layer22 = ConvolutionLayer::new(kernel22, 1, Padding::Valid);
    let target_output22 = array![
        [[16.49689674, 16.26865959], [15.40870094, 17.10994339]],
        [[14.95859623, 15.21980762], [15.40103817, 15.77346325]],
        [[13.8106823, 14.63492393], [12.4140501, 12.86047459]]
    ];
    let current_output22 = conv_layer22.convolve(&test_input22);

    assert!(
        arr_allclose(&current_output22, &target_output22),
        "{:?} was not equal to {:?}",
        current_output22,
        target_output22
    );

    let test_input23 = array![
        [
            [0.45230761, 0.29750833, 0.17197817, 0.06818328, 0.69870181, 0.60906574],
            [0.24505253, 0.81694578, 0.03939038, 0.5665328, 0.80118929, 0.75747067],
            [0.15554731, 0.18986696, 0.13435428, 0.38600448, 0.19166702, 0.46490033],
            [0.18260308, 0.82895695, 0.03558233, 0.14173116, 0.88772247, 0.12655612],
            [0.47548521, 0.78434719, 0.89129077, 0.15408872, 0.45979473, 0.18853948],
            [0.826404, 0.84971782, 0.36331992, 0.98673576, 0.43612493, 0.03541405]
        ],
        [
            [0.783278, 0.24658875, 0.74658082, 0.34663446, 0.03917093, 0.39318948],
            [0.30789323, 0.68702212, 0.44194368, 0.33855646, 0.91193131, 0.31810584],
            [0.16017109, 0.00698695, 0.29351898, 0.14280626, 0.48469457, 0.1767692],
            [0.42322085, 0.46112145, 0.92553811, 0.55322419, 0.9853486, 0.24325794],
            [0.63504065, 0.15406865, 0.11709648, 0.1119092, 0.21574858, 0.62331999],
            [0.8729103, 0.52609012, 0.06899712, 0.61684947, 0.3181057, 0.1008886]
        ]
    ];

    let kernel23: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.28579374, 0.08647749, 0.84640182, 0.5181164, 0.47873197, 0.83375128, 0.9057766,
            0.00922728, 0.36432304, 0.53910845, 0.47707381, 0.23459193, 0.61045031, 0.99977492,
            0.2879088, 0.92371205, 0.24345837, 0.00414109, 0.03638968, 0.30595167, 0.16491043,
            0.70878765, 0.79154644, 0.60650112, 0.46475388, 0.65852329, 0.93920061, 0.09687402,
            0.55449048, 0.56360938, 0.10987341, 0.79093268, 0.68275111, 0.93982805, 0.14053225,
            0.49555323, 0.4556152, 0.66896225, 0.46089745, 0.33559954, 0.30389078, 0.73881618,
            0.56410859, 0.07862057, 0.46463864, 0.07132971, 0.56969289, 0.89171883, 0.97521319,
            0.86021405, 0.61829454, 0.40998869, 0.3409378, 0.49427043, 0.10122171, 0.23691536,
            0.70967704, 0.46413839, 0.83261815, 0.38735757, 0.94895509, 0.07998311, 0.51110605,
            0.02956773, 0.17711017, 0.11328587, 0.74999444, 0.85890063, 0.07875008, 0.73433581,
            0.4188041, 0.48477762, 0.00624699, 0.62862881, 0.21567077, 0.81573006, 0.70090976,
            0.8734742, 0.64821486, 0.5717835, 0.16271726, 0.53025379, 0.0984337, 0.82271061,
            0.12299971, 0.06295575, 0.79538949, 0.59333579, 0.27819812, 0.70772565, 0.88466563,
            0.33805057, 0.66772457, 0.9335431, 0.0900248, 0.08626243, 0.0064692, 0.97915132,
            0.52760126, 0.61633665, 0.97595711, 0.54319958, 0.11189566, 0.66231298, 0.47249613,
            0.88115114, 0.93577167, 0.61019061, 0.4513792, 0.21412608, 0.21063799, 0.59758916,
            0.26163143, 0.57292384, 0.3575447, 0.41482433, 0.56862119, 0.43116545, 0.88888712,
            0.59890786, 0.96428143, 0.67385224, 0.18009396, 0.65008404, 0.1288117, 0.60346005,
            0.23165825, 0.01380609, 0.45430455, 0.35102451, 0.37587899, 0.79313242, 0.20369535,
            0.9617992, 0.17212614, 0.86613916, 0.818001, 0.04731771, 0.63314852, 0.83272296,
            0.58803685, 0.67738035, 0.96657098, 0.59957683, 0.85136724, 0.03105091, 0.388052,
            0.55736135, 0.02805966, 0.80824123,
        ],
    )
    .unwrap();
    let conv_layer23 = ConvolutionLayer::new(kernel23, 1, Padding::Valid);
    let target_output23 = array![
        [[10.08123875, 10.4766798], [10.12959766, 11.46770382]],
        [[9.64470196, 9.78072166], [10.51479912, 10.09907341]],
        [[10.97304916, 11.91554165], [11.08279228, 11.45559883]]
    ];
    let current_output23 = conv_layer23.convolve(&test_input23);

    assert!(
        arr_allclose(&current_output23, &target_output23),
        "{:?} was not equal to {:?}",
        current_output23,
        target_output23
    );

    let test_input24 = array![
        [
            [0.57193865, 0.9242484, 0.43400673, 0.95459734, 0.19825369, 0.31652351],
            [0.34878273, 0.04700416, 0.89200941, 0.8226108, 0.49845084, 0.02590412],
            [0.33210731, 0.9764468, 0.53812272, 0.92109437, 0.77103208, 0.86606787],
            [0.38955377, 0.85489501, 0.07690383, 0.03470363, 0.623576, 0.74470608],
            [0.23551573, 0.09116794, 0.13018293, 0.29478395, 0.69404102, 0.0967541],
            [0.82667353, 0.00767931, 0.24422543, 0.47754805, 0.05508777, 0.30187264]
        ],
        [
            [0.58673539, 0.38990366, 0.61692172, 0.5919785, 0.35687553, 0.9651153],
            [0.31502705, 0.15851367, 0.90410785, 0.24201743, 0.99100995, 0.46153439],
            [0.52309412, 0.05274187, 0.85842835, 0.85845118, 0.30464407, 0.00721753],
            [0.18392334, 0.85564119, 0.1809689, 0.5768042, 0.3628767, 0.69780507],
            [0.11757887, 0.08762363, 0.36607083, 0.24363868, 0.7472844, 0.08178072],
            [0.88107829, 0.35692051, 0.45131599, 0.0383365, 0.84656218, 0.98832129]
        ]
    ];

    let kernel24: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.56150498, 0.52739673, 0.47732064, 0.43933925, 0.21088907, 0.55242992, 0.80053111,
            0.17473145, 0.40513717, 0.82864842, 0.4856008, 0.41349154, 0.8595507, 0.77320267,
            0.98907978, 0.24298015, 0.27266596, 0.48466381, 0.87975011, 0.44695868, 0.10110632,
            0.55942819, 0.93042542, 0.09035328, 0.76902574, 0.28521551, 0.07585676, 0.24124638,
            0.06790887, 0.14329627, 0.63817888, 0.95433893, 0.65819252, 0.1983508, 0.44280004,
            0.1576808, 0.77427592, 0.90144795, 0.86143706, 0.28797777, 0.37103124, 0.0877872,
            0.45872805, 0.76575244, 0.68296631, 0.23040929, 0.52331047, 0.69741451, 0.89214319,
            0.22412037, 0.0491925, 0.53688148, 0.19189753, 0.45287938, 0.60241874, 0.37045264,
            0.23233427, 0.42484194, 0.98901116, 0.36564677, 0.86301588, 0.81168432, 0.3987277,
            0.68792058, 0.79984951, 0.59457896, 0.75415336, 0.80124225, 0.59222097, 0.05390601,
            0.82877622, 0.29753333, 0.82358677, 0.29054286, 0.26042403, 0.883912, 0.81435255,
            0.57902404, 0.05703124, 0.61399594, 0.10031959, 0.78280452, 0.24171719, 0.4721017,
            0.53194064, 0.6437402, 0.09277638, 0.86937538, 0.60042985, 0.88752862, 0.86002532,
            0.69702212, 0.12023476, 0.94646693, 0.9782188, 0.38164645, 0.71724524, 0.91050068,
            0.41190185, 0.29969905, 0.43725936, 0.70224348, 0.75668944, 0.55514523, 0.8824068,
            0.10910437, 0.51675713, 0.33856305, 0.4310923, 0.43717159, 0.22416041, 0.70742674,
            0.04574656, 0.62335471, 0.60569308, 0.19430637, 0.94640953, 0.43765875, 0.47719213,
            0.45312902, 0.41785501, 0.81793892, 0.03511541, 0.55490179, 0.67156732, 0.61512813,
            0.655004, 0.09111205, 0.49298652, 0.3268639, 0.77552781, 0.77209026, 0.47542889,
            0.31814524, 0.52555005, 0.81072357, 0.00102462, 0.51096868, 0.48937834, 0.122188,
            0.22519494, 0.40227203, 0.84508294, 0.43985214, 0.05504967, 0.02137936, 0.26612981,
            0.12310848, 0.00158825, 0.75761557,
        ],
    )
    .unwrap();
    let conv_layer24 = ConvolutionLayer::new(kernel24, 1, Padding::Valid);
    let target_output24 = array![
        [[11.76706123, 13.14411354], [10.58534336, 11.86591911]],
        [[13.58465481, 13.43109322], [11.6938448, 12.63009071]],
        [[11.97021961, 10.39121342], [9.62578392, 10.5656662]]
    ];
    let current_output24 = conv_layer24.convolve(&test_input24);

    assert!(
        arr_allclose(&current_output24, &target_output24),
        "{:?} was not equal to {:?}",
        current_output24,
        target_output24
    );

    let test_input25 = array![
        [
            [
                0.88188004, 0.12094666, 0.13906257, 0.91576679, 0.91879824, 0.8513396, 0.28533912,
                0.30878847, 0.12668495, 0.24235714, 0.45707442, 0.77128291, 0.69032428, 0.09853197,
                0.43307764
            ],
            [
                0.05488254, 0.70532216, 0.34688667, 0.9355463, 0.38260134, 0.48385892, 0.17318112,
                0.21472166, 0.77769447, 0.35695698, 0.22671694, 0.18250433, 0.41477198, 0.18007399,
                0.98278629
            ],
            [
                0.58704964, 0.29501828, 0.46143154, 0.19057809, 0.36531091, 0.93977063, 0.26191842,
                0.36934672, 0.14449089, 0.93639778, 0.42698747, 0.12815461, 0.30951204, 0.1389484,
                0.70723682
            ],
            [
                0.44510987, 0.68366704, 0.60059835, 0.09438256, 0.365831, 0.60821446, 0.0316166,
                0.87382413, 0.29876905, 0.33316014, 0.56221596, 0.33539039, 0.10716959, 0.93341087,
                0.86064022
            ],
            [
                0.42792627, 0.48052303, 0.69580782, 0.45255642, 0.99052713, 0.04395659, 0.71055362,
                0.91177765, 0.93380784, 0.90260815, 0.01515595, 0.88177705, 0.43487665, 0.56912596,
                0.05581366
            ],
            [
                0.02638636, 0.50119188, 0.31323937, 0.05636088, 0.31307654, 0.33269022, 0.37347791,
                0.42102939, 0.08686391, 0.38085341, 0.36317898, 0.19031978, 0.46563995, 0.41320488,
                0.94399139
            ],
            [
                0.28572704, 0.61427557, 0.81580518, 0.26794038, 0.12281225, 0.32823457, 0.14740173,
                0.70965311, 0.19252698, 0.79887708, 0.02814319, 0.39099366, 0.75513868, 0.50380181,
                0.15413615
            ],
            [
                0.82638884, 0.2631662, 0.70537729, 0.6478343, 0.32534242, 0.66350844, 0.88396533,
                0.59479696, 0.68739475, 0.90379299, 0.9826564, 0.56865098, 0.33996935, 0.63317855,
                0.70651505
            ],
            [
                0.82775309, 0.22001709, 0.37304191, 0.20307005, 0.59174454, 0.37599511, 0.67352904,
                0.42676451, 0.64539509, 0.93520574, 0.59322684, 0.58852909, 0.23145947, 0.15739693,
                0.88258469
            ],
            [
                0.17851174, 0.56031989, 0.14435844, 0.10347797, 0.37213183, 0.14642915, 0.21561022,
                0.38304217, 0.90021487, 0.32565015, 0.82000728, 0.72865624, 0.48349918, 0.41356983,
                0.03333719
            ]
        ],
        [
            [
                0.08149401, 0.85722615, 0.04374503, 0.88704216, 0.09240988, 0.8528545, 0.79466526,
                0.54765996, 0.74729833, 0.72924789, 0.21080039, 0.12833529, 0.06738389, 0.91630975,
                0.2233036
            ],
            [
                0.09597177, 0.4226413, 0.73019655, 0.80654461, 0.13412596, 0.92962374, 0.88961373,
                0.80970791, 0.92300738, 0.84075748, 0.54675693, 0.90232325, 0.40697717, 0.70493781,
                0.17525118
            ],
            [
                0.60480596, 0.01006908, 0.09306769, 0.04155758, 0.00396548, 0.29594677, 0.24183853,
                0.23543635, 0.10814751, 0.36654201, 0.58264211, 0.1795904, 0.47117368, 0.78273382,
                0.22905577
            ],
            [
                0.34449509, 0.83183692, 0.12226541, 0.89712569, 0.27640049, 0.37137195, 0.27103843,
                0.27672654, 0.33046692, 0.42443379, 0.85259345, 0.79606476, 0.24516418, 0.51166811,
                0.32966594
            ],
            [
                0.36674044, 0.40403319, 0.31310066, 0.72581839, 0.01080465, 0.05479572, 0.52210696,
                0.60234382, 0.20002392, 0.61509339, 0.23236814, 0.28950064, 0.33898463, 0.57016682,
                0.51984867
            ],
            [
                0.45874897, 0.78067496, 0.81381022, 0.95512077, 0.58818042, 0.47504796, 0.19136074,
                0.8406687, 0.04588939, 0.30594055, 0.85119778, 0.87731921, 0.82416615, 0.44152675,
                0.38872027
            ],
            [
                0.07202522, 0.96407434, 0.51950771, 0.19128811, 0.25130446, 0.39854062, 0.8797602,
                0.72297111, 0.62001851, 0.69522934, 0.91174836, 0.65982073, 0.10557688, 0.23464549,
                0.5982146
            ],
            [
                0.28930025, 0.45670657, 0.47519285, 0.96985732, 0.13737751, 0.33859881, 0.85392951,
                0.74257757, 0.94443824, 0.24404159, 0.74318246, 0.0306461, 0.32723788, 0.84988172,
                0.78041795
            ],
            [
                0.77440342, 0.47136632, 0.2987932, 0.90784409, 0.68410864, 0.38890766, 0.05255083,
                0.16184398, 0.90099065, 0.49884502, 0.29081446, 0.96019645, 0.79299562, 0.47393437,
                0.72834367
            ],
            [
                0.61580642, 0.67942558, 0.47645757, 0.33350429, 0.75634698, 0.11874896, 0.36077333,
                0.3897357, 0.37567438, 0.98458625, 0.55171785, 0.29212236, 0.96003669, 0.66156867,
                0.06723779
            ]
        ]
    ];

    let kernel25: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.20257861, 0.02713268, 0.80878778, 0.73324105, 0.04588867, 0.02181397, 0.76707071,
            0.45551614, 0.6842329, 0.68315824, 0.66648014, 0.31319311, 0.29468353, 0.85157117,
            0.83927354, 0.14075517, 0.85626128, 0.52595836, 0.98014617, 0.27240537, 0.44448685,
            0.82414292, 0.91900748, 0.22366077, 0.85325579, 0.70143698, 0.40568367, 0.37661107,
            0.67640065, 0.56091104, 0.04301855, 0.12136482, 0.67375731, 0.27527441, 0.0267396,
            0.94759497, 0.63039673, 0.12444576, 0.72837056, 0.72811018, 0.26266539, 0.09959163,
            0.21715049, 0.30699564, 0.74566257, 0.72915741, 0.75221894, 0.98712695, 0.14437846,
            0.29435056, 0.91064911, 0.34656417, 0.99010131, 0.67545681,
        ],
    )
    .unwrap();
    let conv_layer25 = ConvolutionLayer::new(kernel25, 1, Padding::Valid);
    let target_output25 = array![
        [
            [
                3.05942392, 4.30814981, 3.50784707, 4.80039406, 4.47342253, 5.25769329, 3.95124888,
                4.60213041, 4.96795273, 4.75637197, 3.45852065, 3.2098949, 4.06225109
            ],
            [
                3.49458122, 3.85191083, 3.58945608, 3.17726302, 3.07213831, 4.46661425, 3.7566843,
                4.13141632, 4.32797098, 4.86096191, 4.12245369, 4.06045771, 4.67520046
            ],
            [
                3.81799865, 3.64335299, 4.06016684, 2.81165648, 3.09810877, 3.72511363, 3.49238873,
                4.88661242, 4.1365447, 4.53695679, 3.74021602, 3.86738062, 3.91897345
            ],
            [
                4.11236429, 4.42562675, 4.18201447, 3.38310122, 3.1067028, 3.78912139, 3.47134423,
                3.53362203, 4.00889158, 4.58652782, 4.0484271, 4.9269371, 4.61262131
            ],
            [
                4.97860813, 5.00931597, 4.64225054, 2.8560822, 3.15932703, 4.61258316, 4.48761702,
                4.71909237, 3.61577177, 5.5323081, 4.27662373, 4.04916859, 3.69377398
            ],
            [
                4.81270313, 4.85891962, 4.86337185, 3.82775712, 4.3280406, 5.35773611, 5.07496214,
                5.39686251, 4.88602161, 5.63947439, 4.40227795, 4.24173212, 5.37812519
            ],
            [
                4.75538301, 4.29805565, 4.43099785, 3.53815484, 3.74259615, 4.79181337, 5.62146664,
                5.9531498, 4.96660566, 5.43333435, 5.15822554, 4.27713919, 4.22971869
            ],
            [
                4.31143332, 4.11240387, 4.33163834, 4.00373268, 3.32610726, 3.28681493, 5.10015965,
                5.50094366, 6.04867649, 5.15415001, 5.28050423, 5.21660233, 4.45566511
            ]
        ],
        [
            [
                4.06257963, 3.87034035, 3.61944389, 5.40149212, 5.14872503, 4.96122026, 3.49792576,
                4.4619031, 4.36112261, 3.88506269, 3.2149632, 3.91729474, 3.63080573
            ],
            [
                3.41571975, 5.18195486, 3.3561821, 4.24695778, 4.2788763, 4.58874941, 3.83008361,
                4.47618341, 5.32701492, 4.7942853, 3.65077949, 3.84640241, 3.92024946
            ],
            [
                3.86817718, 4.27023458, 3.12466741, 3.11151242, 3.83834743, 4.03042459, 3.87041354,
                5.14540386, 4.24802923, 4.83668661, 3.49099207, 4.00682068, 4.31840706
            ],
            [
                4.29557228, 5.26789141, 4.14535284, 3.68965864, 3.42812157, 4.48542738, 3.50703168,
                5.02509546, 4.68156433, 4.61181974, 4.55179358, 4.55542421, 4.37027264
            ],
            [
                4.20535088, 4.78775263, 4.10777426, 2.77040553, 3.80015564, 4.16488695, 4.48215914,
                4.95531082, 4.69431543, 4.93074799, 3.17185354, 4.48076391, 4.39901257
            ],
            [
                4.62952232, 5.57074594, 4.38010168, 3.66841888, 4.25909472, 4.81776237, 5.14604092,
                4.45735121, 5.26633167, 4.90393257, 4.62364435, 4.76383734, 5.24467087
            ],
            [
                4.77020502, 5.03576469, 4.32893991, 3.55297327, 4.12134075, 5.16695309, 5.79197931,
                5.5573616, 5.8061285, 6.61737442, 4.8533473, 4.26373291, 4.7301383
            ],
            [
                4.38234758, 4.15037823, 4.33836889, 3.47928476, 3.80913353, 4.276824, 5.69176292,
                5.97445393, 6.09536552, 5.88057089, 5.97454023, 4.69245386, 4.1325922
            ]
        ],
        [
            [
                3.32724166, 4.47395706, 3.16978931, 5.77477551, 4.9332571, 5.17087507, 4.1748867,
                4.87771702, 4.73688936, 4.2852788, 3.23401356, 4.12836123, 4.32495785
            ],
            [
                3.98960781, 4.66303492, 3.88649225, 4.62318277, 3.88591337, 5.12476778, 4.46506929,
                4.64621544, 5.2897892, 5.51987362, 4.44255638, 4.68959856, 4.60484743
            ],
            [
                3.75063229, 3.7342751, 3.5787394, 2.6843729, 2.99663997, 4.29807997, 3.5232842,
                4.79931164, 4.08489275, 4.5773778, 3.81879616, 4.06734705, 4.12503576
            ],
            [
                4.63962317, 5.5162015, 4.63024902, 4.11928844, 3.62649941, 4.21400023, 3.56776524,
                4.35056639, 4.68155384, 5.30824661, 4.85495186, 5.55900383, 4.77872372
            ],
            [
                5.12528563, 5.20190716, 4.09985209, 2.85700989, 3.77674961, 5.22346115, 4.8137722,
                5.46898556, 4.44833469, 5.67052841, 4.38012409, 4.31089067, 3.82592916
            ],
            [
                4.90976715, 5.71536398, 5.17413187, 4.08533096, 4.52410316, 5.52967644, 4.94185972,
                5.44135237, 5.17816162, 5.51397085, 4.45673466, 4.65628815, 5.95294905
            ],
            [
                4.95367575, 4.88303852, 4.65227032, 4.01801157, 4.37722206, 5.06195784, 5.73460674,
                6.31738091, 5.70926809, 5.82412577, 5.26399803, 4.69491291, 4.98003387
            ],
            [
                4.83769655, 4.81013966, 4.63794184, 4.29480076, 3.89703989, 4.34116125, 6.38827419,
                5.70225191, 6.56837034, 5.75142813, 5.37334919, 5.39171505, 4.96098757
            ]
        ]
    ];
    let current_output25 = conv_layer25.convolve(&test_input25);

    assert!(
        arr_allclose(&current_output25, &target_output25),
        "{:?} was not equal to {:?}",
        current_output25,
        target_output25
    );

    let test_input26 = array![
        [
            [
                0.95416683, 0.84239454, 0.34342708, 0.74494992, 0.99503728, 0.16594417, 0.31254604,
                0.43238706, 0.5073427, 0.14618636, 0.09028576, 0.88932032, 0.91551373, 0.49814488,
                0.70523752
            ],
            [
                0.65795491, 0.83047029, 0.17178877, 0.10943547, 0.95655823, 0.92225051, 0.71428937,
                0.55764362, 0.4350043, 0.43690362, 0.04750107, 0.64436133, 0.03292517, 0.58849011,
                0.27200706
            ],
            [
                0.90262579, 0.82636202, 0.0902301, 0.29801483, 0.74622725, 0.51269132, 0.22947553,
                0.68985719, 0.89290729, 0.1143901, 0.25533149, 0.52610627, 0.96802237, 0.32070743,
                0.16912474
            ],
            [
                0.42875673, 0.69673245, 0.5962988, 0.65832772, 0.95566137, 0.30900881, 0.04040552,
                0.36515299, 0.74841679, 0.38902925, 0.57477368, 0.02147576, 0.12675387, 0.89580769,
                0.57611838
            ],
            [
                0.80507149, 0.18574312, 0.91033079, 0.49352487, 0.04084097, 0.32406485, 0.9127804,
                0.32315839, 0.52741554, 0.35417321, 0.43012724, 0.52614151, 0.85194333, 0.34473135,
                0.22837398
            ],
            [
                0.16551488, 0.25193901, 0.95738793, 0.33331639, 0.45628268, 0.6485293, 0.03959658,
                0.77746038, 0.72181728, 0.25632858, 0.40238795, 0.29511455, 0.18771167, 0.47788582,
                0.88639263
            ],
            [
                0.03075815, 0.38190666, 0.51886615, 0.43225556, 0.44312598, 0.78464971, 0.69072249,
                0.70348736, 0.48298273, 0.55687041, 0.68944603, 0.03431003, 0.38795923, 0.6902452,
                0.85404577
            ],
            [
                0.52294715, 0.14189826, 0.48577387, 0.0789768, 0.29317726, 0.34614396, 0.42246844,
                0.71652184, 0.03888219, 0.95906553, 0.15285545, 0.94362165, 0.15887408, 0.13075078,
                0.15117891
            ],
            [
                0.03306201, 0.16711909, 0.58508997, 0.26331436, 0.15727987, 0.39590273, 0.23047461,
                0.84281718, 0.32108445, 0.6584057, 0.22742086, 0.03719785, 0.40959628, 0.67157058,
                0.91032362
            ],
            [
                0.37286272, 0.27958221, 0.23605917, 0.16103324, 0.48898629, 0.77691663, 0.63719284,
                0.53397748, 0.50137311, 0.23002648, 0.72638501, 0.64956137, 0.10749895, 0.7930301,
                0.25076696
            ]
        ],
        [
            [
                0.01513924, 0.25819991, 0.03015263, 0.50236378, 0.84156044, 0.43133247, 0.55331617,
                0.56238402, 0.63845594, 0.52681636, 0.13921388, 0.09313619, 0.75766638, 0.78449276,
                0.86921382
            ],
            [
                0.79183038, 0.72191998, 0.91970453, 0.26611278, 0.45631655, 0.83163739, 0.60754435,
                0.86304334, 0.81931032, 0.47772342, 0.73805947, 0.01831975, 0.71567196, 0.27518227,
                0.09057815
            ],
            [
                0.59426831, 0.98282616, 0.68770772, 0.01671847, 0.59191654, 0.11799596, 0.3565012,
                0.52713779, 0.42855334, 0.71597424, 0.33997728, 0.13702092, 0.30294093, 0.60102209,
                0.31660683
            ],
            [
                0.47319988, 0.81581173, 0.32806375, 0.2910204, 0.70403956, 0.76467193, 0.16295868,
                0.51999521, 0.10952926, 0.25027467, 0.01479205, 0.20828883, 0.6572299, 0.16784889,
                0.49984224
            ],
            [
                0.73934629, 0.7692465, 0.45089913, 0.42323233, 0.30926329, 0.94342924, 0.5813263,
                0.17081867, 0.45052945, 0.5468596, 0.32220426, 0.97337824, 0.15655027, 0.0631674,
                0.92763947
            ],
            [
                0.73374209, 0.62821566, 0.44235065, 0.70144872, 0.25818462, 0.37731635, 0.74292476,
                0.7893134, 0.96826619, 0.07253607, 0.61240185, 0.57127407, 0.71019414, 0.42240704,
                0.3144015
            ],
            [
                0.23257384, 0.35578601, 0.774386, 0.75755355, 0.44447816, 0.76916295, 0.43969591,
                0.09476027, 0.89676638, 0.25122383, 0.38787512, 0.52713352, 0.21266471, 0.64234613,
                0.23638117
            ],
            [
                0.12251099, 0.11175825, 0.69299388, 0.06464646, 0.15909616, 0.64519557, 0.32502402,
                0.95026743, 0.57768894, 0.55681904, 0.29656869, 0.68271434, 0.17499127, 0.28795035,
                0.62235627
            ],
            [
                0.28275677, 0.62251085, 0.05298517, 0.95863772, 0.83056019, 0.53959038, 0.77689142,
                0.36629458, 0.53110782, 0.87225235, 0.14521246, 0.74900091, 0.55172805, 0.96212075,
                0.28965781
            ],
            [
                0.23772796, 0.38020674, 0.41068245, 0.15089213, 0.3510485, 0.28178046, 0.0740529,
                0.28524187, 0.20798713, 0.73283645, 0.24482582, 0.13728051, 0.99868368, 0.66772568,
                0.30110442
            ]
        ]
    ];

    let kernel26: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.59491573, 0.33922874, 0.78129903, 0.45983208, 0.39850447, 0.29452821, 0.3990066,
            0.71123667, 0.92457685, 0.80979041, 0.12899092, 0.03675647, 0.98098062, 0.12195553,
            0.59541752, 0.99234332, 0.46600241, 0.42390977, 0.41920665, 0.63552478, 0.6557143,
            0.47023433, 0.57522745, 0.81064758, 0.49675161, 0.79606961, 0.35081707, 0.5810784,
            0.47564269, 0.59502881, 0.23334436, 0.35525572, 0.65956025, 0.98428432, 0.9814129,
            0.84742008, 0.81249008, 0.46888288, 0.65711221, 0.44344075, 0.72268394, 0.50578436,
            0.89210488, 0.29161336, 0.30685804, 0.70156509, 0.76217692, 0.53040796, 0.23608344,
            0.33704031, 0.51532269, 0.12298316, 0.38562469, 0.39561589,
        ],
    )
    .unwrap();
    let conv_layer26 = ConvolutionLayer::new(kernel26, 1, Padding::Valid);
    let target_output26 = array![
        [
            [
                5.6354785, 4.86479139, 4.84435225, 4.42273474, 5.24652815, 4.77294445, 5.3298173,
                4.93253851, 4.27835894, 3.88025928, 4.5647049, 3.90952659, 4.61628103
            ],
            [
                5.66550827, 5.30912733, 5.44104242, 4.32844257, 5.12399626, 4.5585084, 4.31825829,
                5.05604982, 3.77618384, 3.32434249, 2.79383898, 3.73400164, 4.39451838
            ],
            [
                5.50886059, 5.73651981, 4.44091606, 4.01606941, 4.84390688, 4.78491688, 4.04276562,
                4.00716162, 3.73515916, 4.01913738, 4.30545378, 3.97296643, 4.07335997
            ],
            [
                5.59650278, 5.71644831, 4.87541437, 4.69862223, 3.98791075, 4.90920544, 5.25055742,
                4.55652046, 4.45526981, 3.56083965, 3.41663003, 4.47984362, 4.98085737
            ],
            [
                4.97447491, 5.14109802, 4.78672361, 4.9463625, 4.82184696, 5.53697205, 5.59941006,
                4.27815151, 5.49071836, 3.53678441, 4.32232761, 4.75418901, 4.49038076
            ],
            [
                3.90132618, 3.66723871, 4.46168566, 4.30861521, 3.66905332, 5.44052458, 5.03170156,
                5.35479212, 5.23250914, 4.17083979, 3.66388869, 3.97304487, 3.6080029
            ],
            [
                3.06861305, 3.44660044, 4.08383703, 4.59171391, 4.33264256, 5.8646431, 4.85316753,
                5.33486414, 4.84577656, 4.34316921, 3.30924511, 4.90277243, 4.74439192
            ],
            [
                2.66990423, 3.12963676, 3.49142241, 3.73994064, 4.33491087, 4.56462622, 3.98338342,
                5.17912817, 3.89621663, 5.70609522, 3.253654, 5.00999737, 4.28245306
            ]
        ],
        [
            [
                6.55443525, 5.01526356, 5.29511881, 5.74367142, 5.97277737, 5.26799345, 5.91325998,
                5.85745096, 4.44804192, 3.86958218, 4.46089506, 5.48755741, 5.34424973
            ],
            [
                6.7025795, 5.13443232, 5.43759489, 6.22366047, 6.0411377, 5.59315872, 5.30865335,
                5.39545441, 4.15397072, 3.37648916, 3.97268796, 4.21003437, 4.65002203
            ],
            [
                6.61904526, 5.75890923, 5.53506231, 5.13991499, 4.92604208, 5.05362129, 4.9810729,
                4.88908768, 4.52020216, 4.32874632, 4.75191402, 5.05512428, 4.73533869
            ],
            [
                6.17056513, 6.18699026, 5.49118662, 5.41394377, 5.24040174, 5.10045719, 5.90131712,
                5.52942467, 4.68867397, 4.25112104, 4.82216072, 4.63273001, 5.37887621
            ],
            [
                5.53691339, 6.10564518, 5.54355383, 5.52535152, 5.75198936, 6.1400876, 6.12265015,
                5.02200222, 5.29355574, 4.93170023, 4.7273159, 4.80398369, 5.08568144
            ],
            [
                4.55251074, 4.94148302, 4.53890991, 4.70666552, 4.92221308, 6.10280609, 6.75197697,
                6.17902231, 5.55437231, 4.80721569, 4.59903908, 4.62735653, 4.68810844
            ],
            [
                3.89654565, 4.64246893, 4.9109354, 5.68099594, 5.66282177, 6.10084534, 5.79661322,
                6.05527163, 5.3672061, 5.48460007, 3.97032619, 5.22988415, 5.34735012
            ],
            [
                3.51843858, 3.56642413, 3.69579697, 3.82707, 4.36881447, 5.29609919, 4.60432434,
                5.92741919, 4.56509924, 5.20682383, 4.63103056, 5.40396833, 5.50238943
            ]
        ],
        [
            [
                5.30039072, 4.2185173, 4.03521681, 5.17275429, 5.60231495, 4.73770475, 4.83835745,
                4.77880287, 4.10238981, 2.80685925, 3.60781741, 4.75409842, 5.32047987
            ],
            [
                5.77069855, 4.57005358, 4.46366882, 4.88465452, 5.5369277, 4.87880659, 4.81694412,
                4.94295311, 4.11865568, 3.20378733, 3.43938518, 3.84568238, 3.31950307
            ],
            [
                5.87954903, 4.67662144, 4.58403206, 4.38946581, 3.91007924, 3.5281167, 4.29233456,
                4.28062201, 4.09468699, 3.3420651, 3.61624837, 3.67795539, 4.69209385
            ],
            [
                4.83490419, 4.92813826, 4.95434475, 4.39950466, 4.59510803, 4.39375925, 3.85897779,
                4.14373302, 3.83921218, 3.27800632, 3.64397669, 3.71597362, 3.98786712
            ],
            [
                4.80635643, 4.90767908, 4.45905209, 4.24322653, 4.65261793, 4.97376919, 5.31655216,
                4.43815756, 4.22391891, 4.14972687, 4.47593927, 3.74583197, 4.17970896
            ],
            [
                4.2251668, 4.11993694, 4.36913681, 4.02046347, 4.15634346, 5.1200161, 5.39697933,
                5.37028837, 4.25643826, 4.27839899, 3.56523848, 4.17340803, 4.04237556
            ],
            [
                2.94749737, 3.70320702, 4.31179523, 4.23003864, 4.27351809, 5.11131716, 4.48113823,
                5.22657871, 4.40481043, 4.27068233, 3.70263171, 3.54810572, 4.0587492
            ],
            [
                2.90948915, 2.95728326, 3.19228983, 2.94296598, 3.74404597, 4.71977663, 4.49712038,
                5.38505745, 3.93842483, 4.42094517, 3.74677134, 4.72326183, 3.59680176
            ]
        ]
    ];
    let current_output26 = conv_layer26.convolve(&test_input26);

    assert!(
        arr_allclose(&current_output26, &target_output26),
        "{:?} was not equal to {:?}",
        current_output26,
        target_output26
    );

    let test_input27 = array![
        [
            [
                0.21013618, 0.00794073, 0.21312988, 0.09544598, 0.16640656, 0.39524125, 0.70305292,
                0.69517192, 0.76970626, 0.01947077, 0.72122117, 0.43079307, 0.65442199, 0.33095865,
                0.37373172
            ],
            [
                0.58761565, 0.49653716, 0.60941027, 0.37502282, 0.79907188, 0.94719638, 0.90727982,
                0.43818597, 0.15018035, 0.26554953, 0.27605641, 0.15040922, 0.26055169, 0.59765531,
                0.65847851
            ],
            [
                0.23161498, 0.69215128, 0.64733315, 0.85464101, 0.03501532, 0.91917506, 0.90648018,
                0.96888335, 0.30725588, 0.23253885, 0.44027686, 0.44643323, 0.46258069, 0.5722288,
                0.78549144
            ],
            [
                0.13830437, 0.68609085, 0.0680802, 0.99768383, 0.35439101, 0.21689764, 0.20947075,
                0.30304361, 0.67836779, 0.34793916, 0.91172965, 0.36088541, 0.42308012, 0.8522385,
                0.80487376
            ],
            [
                0.80669978, 0.20780123, 0.65686723, 0.99092943, 0.68510162, 0.89588594, 0.53854842,
                0.81079438, 0.46694139, 0.68608955, 0.65788951, 0.45783393, 0.41847236, 0.20630272,
                0.49531621
            ],
            [
                0.01959337, 0.83712485, 0.57163461, 0.18082423, 0.03656635, 0.75915191, 0.77819147,
                0.18088074, 0.97228984, 0.45446303, 0.15876008, 0.15172001, 0.21870645, 0.67578595,
                0.17699588
            ],
            [
                0.16891658, 0.85145479, 0.8860516, 0.82196737, 0.29569439, 0.67956754, 0.56761092,
                0.51335655, 0.48570012, 0.05080688, 0.14092551, 0.35189822, 0.27169822, 0.43087652,
                0.82195238
            ],
            [
                0.58699362, 0.18927561, 0.15438258, 0.48444233, 0.3548947, 0.13443873, 0.05775462,
                0.01398679, 0.35539069, 0.48720175, 0.39191842, 0.73532807, 0.98678988, 0.39567923,
                0.66819311
            ],
            [
                0.8741793, 0.41219148, 0.43805563, 0.24787005, 0.46575391, 0.85423167, 0.0098169,
                0.03120668, 0.20878879, 0.54290943, 0.551671, 0.4212191, 0.76660496, 0.52033461,
                0.55199233
            ],
            [
                0.24225756, 0.92673199, 0.29546981, 0.90794485, 0.11640227, 0.30306699, 0.60486086,
                0.67949794, 0.26091522, 0.60724494, 0.81439899, 0.1684874, 0.39451824, 0.42586837,
                0.31500932
            ]
        ],
        [
            [
                0.7739118, 0.26620805, 0.49127059, 0.55821842, 0.14920756, 0.26436529, 0.33135026,
                0.44614497, 0.70298518, 0.4382807, 0.88296111, 0.02333054, 0.85274149, 0.90572881,
                0.22357329
            ],
            [
                0.41870592, 0.45508061, 0.93899915, 0.20756939, 0.20021324, 0.47618694, 0.51307929,
                0.58882958, 0.59889995, 0.71293402, 0.85163711, 0.85897657, 0.02912598, 0.49246777,
                0.93976609
            ],
            [
                0.63142023, 0.55997157, 0.44621915, 0.24492879, 0.19181061, 0.10366015, 0.23688388,
                0.49670486, 0.67701245, 0.45396151, 0.42133403, 0.6850384, 0.85629206, 0.76669573,
                0.85341533
            ],
            [
                0.09939361, 0.82822982, 0.0080629, 0.60769776, 0.66775389, 0.97007126, 0.69535719,
                0.23404987, 0.7702405, 0.48136758, 0.67087533, 0.98482032, 0.11385565, 0.87580873,
                0.70942527
            ],
            [
                0.97172351, 0.75492733, 0.52383514, 0.39455087, 0.31395627, 0.94462168, 0.89547809,
                0.2690143, 0.72545925, 0.50680615, 0.67623517, 0.03957006, 0.55472256, 0.69215521,
                0.50038502
            ],
            [
                0.52786834, 0.31035744, 0.81599204, 0.65543225, 0.03603773, 0.53902263, 0.13498626,
                0.98521266, 0.16336593, 0.99620887, 0.19921382, 0.10756692, 0.44649956, 0.94982781,
                0.71394465
            ],
            [
                0.35815724, 0.02897831, 0.97218841, 0.05049731, 0.86107605, 0.0762892, 0.74125362,
                0.00293741, 0.58428118, 0.80308986, 0.35674443, 0.5351153, 0.73715035, 0.41913971,
                0.79290221
            ],
            [
                0.5041107, 0.55641157, 0.04526648, 0.78619929, 0.63351091, 0.24217102, 0.90911298,
                0.80903275, 0.83993904, 0.81976046, 0.72148051, 0.40070922, 0.57626017, 0.95258536,
                0.49337667
            ],
            [
                0.10905766, 0.94602234, 0.39644081, 0.50362575, 0.07761287, 0.93221566, 0.31622591,
                0.17759776, 0.64270771, 0.12794439, 0.15542967, 0.97430723, 0.63002571, 0.08167998,
                0.75798354
            ],
            [
                0.09109605, 0.76193048, 0.75383404, 0.99397696, 0.34140688, 0.57779241, 0.450994,
                0.34813985, 0.49516844, 0.39270081, 0.56429656, 0.26018233, 0.88573346, 0.69079582,
                0.55985487
            ]
        ]
    ];

    let kernel27: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.84918074, 0.65128704, 0.31415002, 0.78383876, 0.24776831, 0.09454908, 0.72278243,
            0.92367393, 0.36427069, 0.08929764, 0.09322322, 0.8198366, 0.61886697, 0.84666561,
            0.10928579, 0.07829133, 0.38427125, 0.92097811, 0.05534032, 0.33815342, 0.21587123,
            0.12900938, 0.838805, 0.70533996, 0.33450192, 0.38096664, 0.80549439, 0.53035963,
            0.28034256, 0.09335517, 0.90288111, 0.78340421, 0.99226144, 0.01493673, 0.46203192,
            0.7521283, 0.60524951, 0.06838121, 0.63061823, 0.68300222, 0.1979319, 0.98125646,
            0.35303902, 0.01351135, 0.13854096, 0.81033376, 0.02116127, 0.74512017, 0.52984567,
            0.99872666, 0.55599707, 0.15128083, 0.71545672, 0.55498168,
        ],
    )
    .unwrap();
    let conv_layer27 = ConvolutionLayer::new(kernel27, 1, Padding::Valid);
    let target_output27 = array![
        [
            [
                3.85364914, 4.22815084, 3.51430011, 2.69884109, 3.93671703, 5.64548826, 6.14951515,
                4.70354509, 4.21006727, 3.87479401, 5.39845943, 4.61635399, 4.48147392
            ],
            [
                4.28331184, 4.31937695, 4.45604706, 4.9798851, 4.2348938, 4.48102999, 4.84767056,
                4.76400948, 4.40176201, 4.77349234, 3.71028042, 4.60924292, 5.87229967
            ],
            [
                4.23660994, 4.54670143, 4.38520384, 5.79673958, 5.52719975, 5.68522072, 5.2857666,
                4.89750767, 4.7457881, 4.37850428, 5.34883499, 4.54588652, 4.81195402
            ],
            [
                4.62979412, 5.02688885, 3.88391495, 4.70498276, 4.47537327, 5.37845135, 4.45547056,
                5.1997509, 5.06234789, 4.33414268, 3.37124515, 4.33077669, 5.15480375
            ],
            [
                4.73463964, 5.28037453, 5.7154603, 4.6455493, 4.79603577, 4.61110497, 5.17276716,
                4.80042791, 4.70474625, 3.49037504, 3.39136457, 3.50769687, 4.52656031
            ],
            [
                3.21635604, 4.83323288, 4.02027655, 3.72504354, 3.44804907, 4.74272919, 3.80476761,
                4.61828756, 4.82433081, 3.3907156, 3.73707533, 5.41570091, 4.87802553
            ],
            [
                5.026999, 3.87703061, 4.22687864, 4.62948751, 4.36190128, 3.31128335, 3.73304057,
                3.71974564, 3.7343502, 4.52210569, 4.58559847, 4.36523485, 5.69085979
            ],
            [
                4.67769003, 5.08138418, 4.13386536, 3.49758863, 3.92957997, 4.02928543, 3.25147843,
                3.54711914, 4.11405611, 4.02800655, 5.14303684, 5.61475706, 4.81790352
            ]
        ],
        [
            [
                4.6460557, 4.18164873, 3.51127601, 3.92279863, 4.40025425, 5.21070623, 4.57796669,
                4.14572239, 4.24689579, 4.67702055, 4.35440207, 4.36810923, 5.31417704
            ],
            [
                4.04057693, 4.70399523, 3.98955011, 3.65899491, 4.10337496, 4.14778852, 4.57482815,
                4.01662159, 4.51727009, 4.78372765, 4.67579651, 5.3288765, 5.96862936
            ],
            [
                3.94348741, 4.7610693, 4.4724946, 5.23976469, 5.20850277, 4.59270287, 4.65582275,
                4.57135391, 5.17812014, 4.88122463, 4.15675449, 5.08578825, 5.28940105
            ],
            [
                4.82117605, 5.05289412, 3.77904606, 4.81360483, 5.24032784, 5.34759188, 5.27732658,
                4.63702726, 5.01971006, 3.45320964, 3.5379765, 4.29640198, 4.42916632
            ],
            [
                5.51447535, 5.08851624, 4.00745678, 4.00064468, 4.17182016, 4.83503819, 4.24510384,
                5.18140411, 3.67749023, 3.2158339, 2.91932893, 3.75367975, 5.02850819
            ],
            [
                4.21387672, 4.13682318, 4.86711073, 3.11567831, 4.21238422, 3.44866395, 4.10493374,
                4.4141798, 3.89574051, 4.16589832, 4.09797144, 4.48219395, 5.44433832
            ],
            [
                3.59591985, 3.71088314, 3.87606096, 4.16188002, 3.93788147, 3.00641251, 4.06979609,
                4.21251297, 4.39687777, 4.85313225, 5.38283539, 4.91323376, 5.12380981
            ],
            [
                4.15031338, 5.06951761, 3.24074554, 4.45804691, 3.71688914, 3.25289297, 3.32048655,
                3.66527104, 4.30572224, 4.13798046, 4.97532368, 4.92386007, 4.56246233
            ]
        ],
        [
            [
                4.48159409, 3.75510859, 3.44636917, 3.5506742, 3.81996989, 4.55976629, 4.94951153,
                4.27461004, 4.92137861, 3.71367741, 5.28398275, 4.10971308, 4.93490314
            ],
            [
                4.57440662, 4.28970098, 3.93942237, 4.77288437, 4.44541979, 4.96828365, 4.53082132,
                4.62444687, 4.35612011, 4.52098322, 4.55279493, 5.11948395, 5.55190277
            ],
            [
                3.98956656, 4.82115173, 3.43217158, 5.16349888, 4.7384944, 4.88275051, 4.41104889,
                4.58132744, 5.15328169, 4.48142719, 4.82919455, 5.07902336, 5.81332779
            ],
            [
                3.92656374, 5.88284588, 3.8347578, 5.3271594, 4.81952572, 5.39887428, 5.07847357,
                4.44089651, 5.72976398, 4.18910646, 3.59273982, 4.8086071, 4.79160118
            ],
            [
                4.70210409, 5.07296658, 4.15918303, 4.8547883, 4.11693716, 4.75563908, 5.32854795,
                4.6262989, 5.0015831, 3.2230401, 3.40791869, 3.86498523, 4.52276278
            ],
            [
                4.11515284, 4.68370056, 4.21681595, 4.64114666, 3.45273089, 4.84934235, 4.28722477,
                4.79040384, 4.11196566, 3.90220642, 3.30726147, 4.6363287, 5.0203414
            ],
            [
                4.46053123, 3.48033452, 4.6063118, 3.6404295, 4.27527809, 3.22848344, 4.43307257,
                3.91714311, 3.96372604, 4.75768566, 4.99165869, 4.54273367, 5.77680683
            ],
            [
                4.36735296, 4.92010975, 3.58456659, 4.27495861, 3.94540238, 3.24953961, 3.41069531,
                3.97910905, 3.95945263, 4.27783489, 5.65792513, 5.12988806, 5.03310442
            ]
        ]
    ];
    let current_output27 = conv_layer27.convolve(&test_input27);

    assert!(
        arr_allclose(&current_output27, &target_output27),
        "{:?} was not equal to {:?}",
        current_output27,
        target_output27
    );

    let test_input28 = array![
        [
            [
                0.43051603, 0.23737086, 0.65620621, 0.28059771, 0.39736098, 0.46733312, 0.00891489,
                0.33884784, 0.61938839, 0.18607458, 0.44318847, 0.01808522, 0.11024449, 0.59574281,
                0.25734401
            ],
            [
                0.57106302, 0.99650699, 0.02719511, 0.34088473, 0.31276717, 0.19508527, 0.51521796,
                0.55529255, 0.53429699, 0.45517372, 0.03822044, 0.68448043, 0.53839099, 0.19699455,
                0.41928287
            ],
            [
                0.12089491, 0.15296015, 0.34004239, 0.08433874, 0.59906756, 0.32895056, 0.40649991,
                0.14991561, 0.20179559, 0.29841897, 0.99814245, 0.42835028, 0.58305656, 0.88311238,
                0.58563498
            ],
            [
                0.10433916, 0.49506863, 0.40216792, 0.66390544, 0.44003267, 0.67188006, 0.73143498,
                0.22884977, 0.45354383, 0.29792643, 0.52720408, 0.74854459, 0.28624305, 0.92822552,
                0.22695023
            ],
            [
                0.43092482, 0.95730779, 0.99238892, 0.1289603, 0.71256122, 0.9421077, 0.22165332,
                0.89570084, 0.01525365, 0.46406323, 0.38429326, 0.29330773, 0.68809765, 0.82745573,
                0.32582921
            ],
            [
                0.95369233, 0.92134258, 0.80696934, 0.17606957, 0.53414556, 0.85412689, 0.55071186,
                0.25444789, 0.65922911, 0.53072676, 0.77232088, 0.41289272, 0.10455144, 0.65975383,
                0.91647806
            ],
            [
                0.95716312, 0.56454967, 0.86060405, 0.55495818, 0.99726841, 0.39086932, 0.13288062,
                0.43203549, 0.02057635, 0.44437656, 0.00600106, 0.86474378, 0.96837336, 0.52825713,
                0.57560819
            ],
            [
                0.50635281, 0.616231, 0.03237248, 0.70649229, 0.24617034, 0.19121489, 0.89378952,
                0.52211759, 0.920404, 0.45497387, 0.84028613, 0.69197805, 0.92198043, 0.00114695,
                0.68662337
            ],
            [
                0.74263727, 0.16886179, 0.28282913, 0.71575083, 0.92159183, 0.61868011, 0.02047214,
                0.46281454, 0.68875934, 0.01173675, 0.59077987, 0.37879743, 0.13223802, 0.20979706,
                0.2962676
            ],
            [
                0.82381723, 0.62355626, 0.19442007, 0.15597425, 0.44047667, 0.02631165, 0.79910343,
                0.68305829, 0.13235328, 0.36176982, 0.98954595, 0.1066653, 0.85609133, 0.24844926,
                0.94089868
            ]
        ],
        [
            [
                0.61132301, 0.26047221, 0.62072504, 0.52674733, 0.04456268, 0.127301, 0.58310641,
                0.76188127, 0.99088574, 0.34984971, 0.98932128, 0.92298387, 0.968473, 0.34732912,
                0.54743405
            ],
            [
                0.01200672, 0.04459461, 0.11107332, 0.79086026, 0.427044, 0.28423597, 0.5638385,
                0.55078714, 0.52096257, 0.96902648, 0.40990628, 0.76069827, 0.19991862, 0.05412404,
                0.96710502
            ],
            [
                0.95133634, 0.08358769, 0.18445559, 0.15507828, 0.5525091, 0.75220759, 0.41979294,
                0.90154667, 0.06932272, 0.98834363, 0.93267442, 0.95973786, 0.01301026, 0.94750314,
                0.19795855
            ],
            [
                0.28899274, 0.23282553, 0.28506086, 0.86825993, 0.82200572, 0.13914691, 0.97130792,
                0.03333058, 0.80871649, 0.80247869, 0.35903281, 0.37787569, 0.29034188, 0.13700394,
                0.39205238
            ],
            [
                0.24718882, 0.48470175, 0.79027306, 0.53663422, 0.15042725, 0.83978633, 0.46929242,
                0.90220388, 0.14340297, 0.15322222, 0.34881375, 0.62322848, 0.83594127, 0.16714396,
                0.4264953
            ],
            [
                0.04108659, 0.89079211, 0.67103004, 0.6196703, 0.67488447, 0.62487622, 0.07340665,
                0.29599694, 0.90834848, 0.06401163, 0.25583468, 0.43448447, 0.12822088, 0.16394943,
                0.70240457
            ],
            [
                0.7238483, 0.54914701, 0.33882854, 0.30244494, 0.7881106, 0.18323863, 0.9491711,
                0.49022143, 0.52859295, 0.44141732, 0.6618432, 0.13727196, 0.67812914, 0.71892771,
                0.41655356
            ],
            [
                0.22713543, 0.18293882, 0.1918006, 0.53551254, 0.17122073, 0.22345521, 0.44359769,
                0.71808742, 0.22415205, 0.39959106, 0.26373631, 0.97481106, 0.66883225, 0.26237649,
                0.82986438
            ],
            [
                0.47769547, 0.64253337, 0.4279932, 0.05377042, 0.86013267, 0.49268875, 0.61688896,
                0.58930393, 0.61891296, 0.22768961, 0.64132371, 0.64964072, 0.28283465, 0.42210526,
                0.99953726
            ],
            [
                0.39900371, 0.31809522, 0.26837258, 0.91963109, 0.73235176, 0.66651365, 0.32611709,
                0.19029295, 0.34861882, 0.68538037, 0.73598146, 0.53857045, 0.808091, 0.54846342,
                0.17353091
            ]
        ]
    ];

    let kernel28: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.08409429, 0.1967719, 0.31993369, 0.35334955, 0.93418276, 0.70826129, 0.54894203,
            0.89446758, 0.90379118, 0.09672975, 0.75848629, 0.50249979, 0.67288129, 0.91592125,
            0.34614602, 0.38041668, 0.17313572, 0.04152303, 0.90533513, 0.13061609, 0.94569021,
            0.08379908, 0.92477977, 0.48921642, 0.9617579, 0.37667144, 0.71979427, 0.53935902,
            0.9792834, 0.86110633, 0.8655558, 0.29825524, 0.10902968, 0.83468548, 0.72598021,
            0.21941453, 0.98457923, 0.46687176, 0.35792755, 0.86291792, 0.53019644, 0.71784253,
            0.50557288, 0.14295319, 0.49131493, 0.69113374, 0.59211245, 0.4342134, 0.96155456,
            0.34359774, 0.80391459, 0.11799753, 0.26661384, 0.15955769, 0.24098069, 0.04284242,
            0.72233696, 0.52010914, 0.86709221, 0.22291588, 0.01988209, 0.19314825, 0.63777114,
            0.93071466, 0.23294576, 0.33839073, 0.21783542, 0.54138702, 0.78856931, 0.6345836,
            0.98471538, 0.70376681, 0.59978965, 0.48499247, 0.52487602, 0.38216811, 0.09907741,
            0.30532844, 0.08845946, 0.50062149, 0.23987759, 0.66961862, 0.55782833, 0.9853742,
            0.30976852, 0.1141604, 0.94015058, 0.86896496, 0.12097415, 0.70025292, 0.16485341,
            0.46633621, 0.67187447, 0.22297227, 0.20250201, 0.82183464, 0.61939572, 0.53496595,
            0.92597117, 0.78727603, 0.70335182, 0.12606672, 0.06126022, 0.68214495, 0.6032527,
            0.65629948, 0.49284569, 0.34271527, 0.92165942, 0.69404828, 0.47624903, 0.24574541,
            0.55520983, 0.32579103, 0.48232094, 0.60592108, 0.67228469, 0.67671171, 0.37876701,
            0.36134558, 0.7042522, 0.22381731, 0.74746864, 0.36677413, 0.2613474, 0.28857794,
            0.48979158, 0.67423476, 0.89990904, 0.27360516, 0.39544468, 0.26890319, 0.58694217,
            0.40545489, 0.72367474, 0.27611767, 0.67966813, 0.59654923, 0.26442292, 0.72399602,
            0.43040072, 0.20080982, 0.28246298, 0.6599278, 0.91767023, 0.76456982, 0.59367387,
            0.36463643, 0.96831555, 0.21878308,
        ],
    )
    .unwrap();
    let conv_layer28 = ConvolutionLayer::new(kernel28, 1, Padding::Valid);
    let target_output28 = array![
        [
            [
                11.2971344,
                11.52756596,
                12.4976759,
                13.71894455,
                13.22821808,
                14.24045563,
                13.92714882,
                14.59649944,
                14.2674017,
                15.18422794,
                14.44898033
            ],
            [
                12.32592487,
                13.75321198,
                15.18718433,
                13.0996685,
                13.95294189,
                14.31335163,
                13.2181778,
                14.39093113,
                13.23062992,
                12.18255424,
                14.9462471
            ],
            [
                14.68578053,
                15.34121132,
                14.99315739,
                14.91150665,
                14.04946995,
                13.11409283,
                13.56057262,
                13.50749683,
                12.9875946,
                14.18077946,
                14.81833553
            ],
            [
                14.42866325,
                14.74627399,
                15.23845768,
                13.82487202,
                14.87632561,
                12.71415901,
                13.79414845,
                13.78736115,
                13.98080349,
                12.74177265,
                13.50751495
            ],
            [
                15.30035496,
                15.31787777,
                14.03116989,
                14.77064228,
                13.96942806,
                13.21167374,
                11.44141483,
                12.35004997,
                13.92169857,
                12.44638062,
                13.01192188
            ],
            [
                15.08232117,
                14.12331295,
                13.54623508,
                13.08535862,
                14.01396847,
                12.15837574,
                13.483284,
                13.43369484,
                13.46128273,
                13.45479965,
                16.51872635
            ]
        ],
        [
            [
                10.10021114,
                11.05395222,
                12.15349865,
                12.19300079,
                11.46653366,
                11.90283108,
                11.6663866,
                12.62601089,
                12.83163738,
                12.2430172,
                11.5266571
            ],
            [
                11.38568401,
                13.32750225,
                12.69463158,
                11.73048973,
                12.43608665,
                11.57387257,
                10.44064331,
                12.40487289,
                12.07439995,
                11.38919353,
                12.4106245
            ],
            [
                13.52632523,
                13.28195381,
                13.25622177,
                13.14169502,
                11.81012821,
                11.41972065,
                11.22223568,
                10.77828789,
                10.29144859,
                11.73900604,
                13.03271675
            ],
            [
                12.31009674,
                11.69923592,
                12.09152508,
                12.2044611,
                12.44853497,
                9.91347027,
                11.85351753,
                11.23267651,
                11.96026421,
                11.70732021,
                12.62643242
            ],
            [
                12.56779194,
                12.82493114,
                12.64561176,
                12.06274509,
                12.4736948,
                12.05826569,
                10.56355858,
                11.96883869,
                11.6210022,
                10.68966675,
                11.95249367
            ],
            [
                12.44791985,
                12.42913914,
                11.12511063,
                11.61788177,
                11.40682316,
                11.3417778,
                11.73809052,
                10.95604706,
                12.06746769,
                12.54919243,
                13.58627796
            ]
        ],
        [
            [
                11.06996346,
                10.58328342,
                11.83124447,
                11.70124817,
                12.63146591,
                13.70250893,
                12.04089165,
                12.9139967,
                12.34146976,
                13.27704334,
                12.39505577
            ],
            [
                11.70886421,
                13.21235085,
                13.11021137,
                12.61616135,
                12.17962074,
                12.57736778,
                11.64354515,
                13.06669807,
                12.70899105,
                11.91681767,
                11.12449169
            ],
            [
                13.22402763,
                13.96673489,
                13.39453125,
                12.64526272,
                13.27978802,
                11.95833015,
                11.7181778,
                12.3722496,
                11.6231451,
                12.40301228,
                13.68858719
            ],
            [
                13.41754341,
                14.26502991,
                13.14337444,
                13.46509361,
                12.5829916,
                11.05151081,
                12.29271507,
                11.55375195,
                12.02814484,
                12.22034931,
                13.02498341
            ],
            [
                13.02418995,
                13.63472748,
                13.32536411,
                12.38788128,
                13.36983871,
                12.29943657,
                11.24637413,
                12.23145485,
                12.46751595,
                11.8818512,
                13.22077084
            ],
            [
                13.29803848,
                13.2160902,
                13.16368771,
                11.88984966,
                12.59470654,
                11.11098385,
                11.87460136,
                11.88543797,
                12.71513939,
                11.75240707,
                14.48825264
            ]
        ]
    ];
    let current_output28 = conv_layer28.convolve(&test_input28);

    assert!(
        arr_allclose(&current_output28, &target_output28),
        "{:?} was not equal to {:?}",
        current_output28,
        target_output28
    );

    let test_input29 = array![
        [
            [
                0.11189529, 0.53951961, 0.29627025, 0.11818971, 0.10945794, 0.65944481, 0.13544263,
                0.499514, 0.45294528, 0.71311121, 0.07966256, 0.29142585, 0.68724893, 0.04232476,
                0.13420771
            ],
            [
                0.33155695, 0.18794546, 0.46529655, 0.69078078, 0.02903101, 0.87343268, 0.80222555,
                0.87264, 0.45615639, 0.53332592, 0.24646281, 0.38038794, 0.32190927, 0.2162571,
                0.58034507
            ],
            [
                0.77878347, 0.5063043, 0.76173629, 0.08551037, 0.49260572, 0.83634587, 0.85251175,
                0.26562026, 0.11365525, 0.29192793, 0.5136638, 0.52510725, 0.96994559, 0.38765426,
                0.00939824
            ],
            [
                0.45361685, 0.99569704, 0.92569699, 0.11329727, 0.26731392, 0.50352102, 0.84638329,
                0.90850284, 0.3704941, 0.92850368, 0.12043774, 0.67069003, 0.87018521, 0.46525767,
                0.6889376
            ],
            [
                0.46818327, 0.54725892, 0.67212213, 0.90702208, 0.09271611, 0.28051262, 0.18856684,
                0.9389607, 0.90126435, 0.45777323, 0.82003327, 0.74227343, 0.35982915, 0.26917773,
                0.20851454
            ],
            [
                0.02530834, 0.20598832, 0.98278118, 0.91337963, 0.15525481, 0.54164971, 0.97376152,
                0.05620801, 0.55001611, 0.07101188, 0.06457912, 0.01951568, 0.77520384, 0.58928205,
                0.4893268
            ],
            [
                0.37889206, 0.08488933, 0.69844682, 0.13838367, 0.45322238, 0.28546089, 0.91733085,
                0.76731629, 0.47535939, 0.430336, 0.4033134, 0.22314279, 0.91983052, 0.15463824,
                0.52706518
            ],
            [
                0.53806253, 0.67769824, 0.29269646, 0.5224842, 0.91617042, 0.83632485, 0.96556284,
                0.62659725, 0.62550989, 0.10147168, 0.37210663, 0.38499138, 0.57677184, 0.04776173,
                0.13979574
            ],
            [
                0.34796357, 0.92938047, 0.02366208, 0.6165888, 0.4602623, 0.80627349, 0.68917644,
                0.03279204, 0.61764415, 0.84899486, 0.07298613, 0.51074279, 0.15994577, 0.23598829,
                0.42557175
            ],
            [
                0.54054205, 0.99730229, 0.77872316, 0.34836138, 0.25666964, 0.21393713, 0.13617612,
                0.29510999, 0.47935697, 0.60274207, 0.26824013, 0.09325973, 0.99996946, 0.66342248,
                0.30268312
            ]
        ],
        [
            [
                0.4703405, 0.5264845, 0.41914598, 0.93084307, 0.38605881, 0.3112818, 0.5403318,
                0.75441289, 0.23385784, 0.45327122, 0.01928642, 0.31058536, 0.92313242, 0.51113379,
                0.85251105
            ],
            [
                0.22631838, 0.60791954, 0.84655061, 0.15559341, 0.47655348, 0.93172921, 0.73171296,
                0.42527972, 0.8793211, 0.80859519, 0.82055656, 0.88263529, 0.87073562, 0.99079618,
                0.24373481
            ],
            [
                0.04408429, 0.9780975, 0.83518287, 0.44241802, 0.96070865, 0.09084356, 0.68804724,
                0.78929911, 0.7980087, 0.09648527, 0.31804043, 0.96192238, 0.99013286, 0.8503088,
                0.78152828
            ],
            [
                0.39002458, 0.42641846, 0.69086572, 0.89109583, 0.29640056, 0.17727828, 0.2089261,
                0.49979008, 0.56423787, 0.7030672, 0.27845028, 0.94389766, 0.20636925, 0.66672019,
                0.76393695
            ],
            [
                0.48988731, 0.73562812, 0.54680753, 0.68185259, 0.69871773, 0.40215193, 0.33184996,
                0.23738323, 0.42945445, 0.64908034, 0.58335521, 0.97156673, 0.30805972, 0.87517558,
                0.29061685
            ],
            [
                0.32266703, 0.74558375, 0.39886904, 0.45468414, 0.77469293, 0.79654879, 0.76469586,
                0.27917181, 0.26557566, 0.51671653, 0.14463307, 0.49024066, 0.56441789, 0.11350685,
                0.04281154
            ],
            [
                0.57114466, 0.39833463, 0.2126663, 0.1499708, 0.73064126, 0.45918139, 0.0285126,
                0.92805762, 0.72670998, 0.34472197, 0.18288209, 0.83077593, 0.43013144, 0.35543967,
                0.75937792
            ],
            [
                0.45248675, 0.78150373, 0.98412323, 0.86351109, 0.66671311, 0.53401237, 0.13950848,
                0.57531868, 0.22581473, 0.31055019, 0.35594859, 0.94544616, 0.87944521, 0.26997161,
                0.45676421
            ],
            [
                0.20421512, 0.99164583, 0.83325416, 0.89352186, 0.35738186, 0.94435399, 0.84149825,
                0.31955966, 0.0488622, 0.17070445, 0.6034462, 0.36290236, 0.8472129, 0.49671843,
                0.19694914
            ],
            [
                0.80763392, 0.21147081, 0.22211873, 0.43805567, 0.43717725, 0.89430046, 0.92837189,
                0.8128758, 0.73731279, 0.42566534, 0.44624192, 0.23623947, 0.80635439, 0.26903113,
                0.20805733
            ]
        ]
    ];

    let kernel29: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.03382581, 0.48451242, 0.56668677, 0.22873266, 0.299916, 0.9879018, 0.10301294,
            0.24334253, 0.44374003, 0.64236861, 0.81102607, 0.78476408, 0.66955779, 0.93565844,
            0.371802, 0.93261364, 0.89604715, 0.2305824, 0.10865665, 0.74001564, 0.52640328,
            0.59626133, 0.49422848, 0.86068394, 0.99988186, 0.56603131, 0.48357182, 0.35112807,
            0.57117814, 0.8400437, 0.13524966, 0.94668282, 0.39311503, 0.90124023, 0.75557139,
            0.5037727, 0.42197251, 0.47999806, 0.22245023, 0.7799652, 0.29572074, 0.78845742,
            0.87387354, 0.88842474, 0.46210247, 0.91006059, 0.6943571, 0.28570879, 0.49740205,
            0.76284432, 0.69361483, 0.16655016, 0.26878476, 0.58333513, 0.98748305, 0.64336683,
            0.26489744, 0.33358737, 0.00685212, 0.658877, 0.97735418, 0.72935826, 0.96536913,
            0.4197044, 0.03449651, 0.80373667, 0.88689565, 0.19757592, 0.33775257, 0.9949134,
            0.35532915, 0.98935051, 0.08079711, 0.9904894, 0.34009922, 0.97684611, 0.44599372,
            0.09269939, 0.15401786, 0.99797895, 0.4328108, 0.7613341, 0.94856582, 0.74674775,
            0.33150923, 0.81601158, 0.57959552, 0.62684278, 0.08034612, 0.86004763, 0.23814382,
            0.23848392, 0.10764247, 0.15689475, 0.70573328, 0.01841728, 0.17239508, 0.53495741,
            0.27755456, 0.5322748, 0.07772017, 0.11139348, 0.81536444, 0.89346812, 0.08395886,
            0.40988755, 0.96835217, 0.71043001, 0.24133632, 0.6608676, 0.45239363, 0.7648658,
            0.78390221, 0.11525997, 0.11204641, 0.93657471, 0.28355595, 0.94687663, 0.0319368,
            0.95543646, 0.31404087, 0.45478264, 0.46826618, 0.14600264, 0.11851354, 0.68696929,
            0.8751561, 0.24598802, 0.51128345, 0.21171107, 0.07832937, 0.54206832, 0.16797651,
            0.97511008, 0.46346098, 0.92516051, 0.83557275, 0.93996977, 0.63095193, 0.01171468,
            0.31194555, 0.89293909, 0.85650479, 0.45759721, 0.12795849, 0.10912379, 0.02952798,
            0.10989774, 0.4077279, 0.05740095,
        ],
    )
    .unwrap();
    let conv_layer29 = ConvolutionLayer::new(kernel29, 1, Padding::Valid);
    let target_output29 = array![
        [
            [
                15.2131834,
                15.37096691,
                14.91935444,
                14.99691105,
                14.53761578,
                15.68066025,
                15.33180714,
                16.73197174,
                16.38857079,
                16.07448387,
                15.8261261
            ],
            [
                15.28540897,
                16.81689262,
                16.76981163,
                15.09699821,
                14.66360664,
                15.48886681,
                15.00865746,
                15.21420002,
                15.63133717,
                16.30587196,
                15.48512459
            ],
            [
                14.23254776,
                14.87660599,
                15.83353138,
                14.71412373,
                15.15385246,
                14.3073616,
                13.67522717,
                15.49166393,
                15.72652245,
                14.24182224,
                14.18630028
            ],
            [
                15.39909267,
                15.35785294,
                15.95921135,
                16.01446533,
                14.45388889,
                14.72682571,
                13.39932632,
                14.42392159,
                14.30051994,
                12.19777775,
                13.68169403
            ],
            [
                15.85704803,
                16.62340736,
                16.74821281,
                15.8009119,
                14.6592741,
                14.90671158,
                14.11310482,
                12.58862019,
                13.48406696,
                12.76634026,
                12.31225681
            ],
            [
                15.79034615,
                16.1935997,
                15.64705467,
                15.73245049,
                16.52296257,
                15.12231159,
                12.72669029,
                12.16659737,
                13.69541359,
                12.3492384,
                12.07887077
            ]
        ],
        [
            [
                12.70715904,
                12.95092773,
                13.69340801,
                13.26182556,
                13.19940472,
                14.44374657,
                13.35947418,
                15.08129025,
                14.4931078,
                14.14244843,
                14.00157642
            ],
            [
                13.2325983,
                14.68938065,
                15.22945881,
                12.99221897,
                12.8691721,
                14.81138897,
                13.28109074,
                14.55150604,
                12.5587759,
                14.46283627,
                13.20874596
            ],
            [
                12.58256435,
                14.67493916,
                14.98650932,
                12.31233978,
                11.34316254,
                12.59823799,
                12.50206089,
                13.84726238,
                13.9671526,
                13.50283909,
                11.65243721
            ],
            [
                12.8446064,
                14.00089645,
                14.32813644,
                15.26861,
                12.81319904,
                13.15237999,
                11.94849396,
                13.14340878,
                12.48419952,
                11.67894459,
                11.64029789
            ],
            [
                13.77333927,
                12.89832115,
                13.69015312,
                14.52365398,
                14.35409451,
                12.95184898,
                12.1794548,
                12.73228073,
                12.50710869,
                10.09886742,
                10.79210472
            ],
            [
                12.81113529,
                14.20214748,
                14.78157234,
                13.20330429,
                13.42690372,
                13.79183578,
                11.75831413,
                10.01303196,
                12.05961609,
                10.46253586,
                10.47566223
            ]
        ],
        [
            [
                11.59145737,
                13.12375832,
                12.81531811,
                11.48460007,
                11.94578362,
                13.78692436,
                13.03659725,
                12.79440975,
                11.73720169,
                12.58949852,
                13.15502167
            ],
            [
                13.10862732,
                13.99645424,
                11.749506,
                12.75307178,
                12.09719944,
                12.72875023,
                11.83455658,
                12.33274364,
                13.39259243,
                13.14698982,
                13.09197044
            ],
            [
                12.42990589,
                13.36929703,
                12.88120651,
                12.16960907,
                12.08774662,
                11.30040264,
                11.65379524,
                10.87795162,
                12.86670017,
                11.31418419,
                13.40355968
            ],
            [
                11.73160744,
                11.37815094,
                12.67348003,
                12.01240444,
                12.68598461,
                11.87540531,
                13.01559067,
                11.45260715,
                11.47019672,
                10.45804405,
                12.01686382
            ],
            [
                12.86293411,
                13.49360943,
                13.28098488,
                11.72453022,
                12.79854393,
                12.0196085,
                11.06881905,
                10.08696365,
                11.33331394,
                9.76148605,
                10.57749367
            ],
            [
                13.15585232,
                14.26967239,
                12.7475996,
                13.46042824,
                13.88105583,
                12.36287308,
                10.09464741,
                8.60920238,
                9.22459316,
                10.21414375,
                10.91766167
            ]
        ]
    ];
    let current_output29 = conv_layer29.convolve(&test_input29);

    assert!(
        arr_allclose(&current_output29, &target_output29),
        "{:?} was not equal to {:?}",
        current_output29,
        target_output29
    );

    let test_input30 = array![
        [
            [
                0.90538735, 0.35906726, 0.55836499, 0.30030969, 0.26236705, 0.63975834, 0.64865221,
                0.65862478, 0.79906203, 0.69226535, 0.11245027, 0.44999343, 0.19131283, 0.56852181,
                0.58138868
            ],
            [
                0.8676397, 0.69495834, 0.98907141, 0.91694082, 0.67337078, 0.11409238, 0.93137124,
                0.8991999, 0.47506758, 0.14831748, 0.60308778, 0.1869184, 0.89142022, 0.73000857,
                0.87604839
            ],
            [
                0.10900346, 0.48400246, 0.08230179, 0.06097801, 0.19118872, 0.33851793, 0.82975563,
                0.25460039, 0.68964777, 0.46926925, 0.91846106, 0.61307685, 0.65601351, 0.28075829,
                0.12817005
            ],
            [
                0.35788413, 0.73211796, 0.766394, 0.84590471, 0.66833038, 0.87622137, 0.68722954,
                0.33361896, 0.32000798, 0.79336314, 0.51849384, 0.38584011, 0.69625898, 0.67916823,
                0.20234333
            ],
            [
                0.60328611, 0.48042778, 0.29644713, 0.21245298, 0.6937536, 0.08710818, 0.77838677,
                0.9167911, 0.59548962, 0.33385372, 0.68012579, 0.89744274, 0.18934485, 0.0564688,
                0.82598113
            ],
            [
                0.98988925, 0.78486877, 0.3775057, 0.83544203, 0.34188869, 0.80864925, 0.82852668,
                0.91241813, 0.28085634, 0.48125054, 0.07043128, 0.47305905, 0.21471797, 0.37207894,
                0.10534422
            ],
            [
                0.61738714, 0.49574846, 0.87061427, 0.62692716, 0.12505584, 0.32882456, 0.13899311,
                0.31035821, 0.88731766, 0.09477642, 0.60963128, 0.97063475, 0.33909173, 0.24199934,
                0.32436552
            ],
            [
                0.50521873, 0.40645204, 0.72868264, 0.18457449, 0.67775714, 0.80771195, 0.20815027,
                0.76091386, 0.42811718, 0.04814293, 0.2477421, 0.73635357, 0.82568176, 0.23572316,
                0.89212479
            ],
            [
                0.00548277, 0.49046425, 0.63641548, 0.95209122, 0.56703387, 0.6343222, 0.43334082,
                0.30917186, 0.22897069, 0.41616559, 0.06782987, 0.68388858, 0.13053188, 0.19831855,
                0.27927719
            ],
            [
                0.82981785, 0.38844033, 0.6897695, 0.43391317, 0.2388109, 0.47514349, 0.15262189,
                0.78329371, 0.69722742, 0.76765394, 0.48872955, 0.97543495, 0.84143919, 0.5716796,
                0.57465926
            ]
        ],
        [
            [
                0.22662647, 0.72878735, 0.81788557, 0.75768616, 0.44170135, 0.74363214, 0.03670884,
                0.54763687, 0.20077299, 0.56937202, 0.13181127, 0.13081091, 0.40169111, 0.02235833,
                0.55760674
            ],
            [
                0.83430796, 0.360836, 0.56738032, 0.91996184, 0.79167342, 0.33047372, 0.55233093,
                0.77685972, 0.49729655, 0.60879943, 0.85824954, 0.18380235, 0.84842744, 0.96455652,
                0.12606913
            ],
            [
                0.62333464, 0.40896285, 0.60540571, 0.72344356, 0.64341777, 0.35723292, 0.93422615,
                0.2303441, 0.89859826, 0.4833327, 0.88401787, 0.70710741, 0.38079957, 0.89847402,
                0.76911915
            ],
            [
                0.69664333, 0.9301381, 0.52791016, 0.63759292, 0.41758482, 0.05990019, 0.05685853,
                0.27304211, 0.86264995, 0.86841039, 0.48180396, 0.60107542, 0.88915733, 0.63210746,
                0.07892385
            ],
            [
                0.76392257, 0.62059747, 0.30022189, 0.89278922, 0.90595636, 0.22659946, 0.14760193,
                0.00599372, 0.30542407, 0.72884977, 0.87160847, 0.50342597, 0.41313492, 0.88581848,
                0.6434107
            ],
            [
                0.45720101, 0.53698071, 0.17925061, 0.61535142, 0.64973148, 0.41555945, 0.61887466,
                0.17343595, 0.54446397, 0.19735775, 0.69336061, 0.58806963, 0.80442407, 0.22769123,
                0.53898123
            ],
            [
                0.87782377, 0.33365021, 0.02226985, 0.09958417, 0.27681004, 0.18543235, 0.21413611,
                0.26165754, 0.027802, 0.9319044, 0.92774295, 0.18005316, 0.81092879, 0.62190108,
                0.77950682
            ],
            [
                0.72729406, 0.5608989, 0.52275812, 0.16359355, 0.11108088, 0.88981735, 0.20012106,
                0.70492943, 0.54065808, 0.43730916, 0.60061648, 0.73953919, 0.74704049, 0.68801787,
                0.95084522
            ],
            [
                0.81441252, 0.09777608, 0.89484024, 0.82783867, 0.06093569, 0.91676912, 0.46885745,
                0.43228299, 0.4377543, 0.16224979, 0.06134897, 0.20221839, 0.07522171, 0.75219087,
                0.03596852
            ],
            [
                0.28626589, 0.75235978, 0.64913375, 0.92554733, 0.65209919, 0.83952223, 0.42260578,
                0.20702457, 0.30891683, 0.26645028, 0.96312688, 0.31632706, 0.41035688, 0.83820977,
                0.8525341
            ]
        ]
    ];

    let kernel30: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.94491211, 0.31281238, 0.94421537, 0.29261506, 0.43404636, 0.16094153, 0.66423817,
            0.06268399, 0.95791441, 0.75028186, 0.09143816, 0.58713917, 0.09202226, 0.05626365,
            0.94994553, 0.29447657, 0.79507724, 0.75073629, 0.89040359, 0.25231564, 0.70364728,
            0.93381677, 0.16046775, 0.06850107, 0.14086206, 0.18575046, 0.94590174, 0.778617,
            0.01911113, 0.3645535, 0.18393158, 0.71138199, 0.29766195, 0.94091393, 0.66175576,
            0.06250098, 0.8391969, 0.18263739, 0.27238532, 0.66940516, 0.02453929, 0.21670068,
            0.78546018, 0.2715362, 0.31696306, 0.45880696, 0.12966863, 0.94143581, 0.5301901,
            0.67305826, 0.19911294, 0.61133267, 0.99582208, 0.8324337, 0.81940349, 0.52347236,
            0.3039722, 0.23559987, 0.71697519, 0.83921854, 0.00453156, 0.07645657, 0.64613331,
            0.31977178, 0.44444508, 0.51352833, 0.82848715, 0.12873596, 0.19493582, 0.12292414,
            0.52158403, 0.06434183, 0.20470969, 0.32419515, 0.11837589, 0.95561638, 0.8962471,
            0.72749725, 0.86255626, 0.16951791, 0.89949921, 0.30796449, 0.48415481, 0.50550426,
            0.24823008, 0.42320151, 0.24034185, 0.50311692, 0.2196024, 0.43426839, 0.98074588,
            0.94563128, 0.44097563, 0.03213529, 0.49693356, 0.60258669, 0.2574467, 0.45553603,
            0.44379727, 0.97324241, 0.3627867, 0.2487736, 0.21001962, 0.9101744, 0.39797535,
            0.26517462, 0.41195874, 0.38203195, 0.0038282, 0.68331535, 0.45850393, 0.08282983,
            0.74266544, 0.72705849, 0.79932619, 0.18561169, 0.73794276, 0.13075382, 0.92822394,
            0.64137435, 0.43831323, 0.28829069, 0.49762248, 0.26103418, 0.17956546, 0.97447652,
            0.56784427, 0.12135573, 0.63540921, 0.03319374, 0.29163483, 0.86157887, 0.13130436,
            0.4782706, 0.47632742, 0.84865194, 0.28834381, 0.99329984, 0.23911465, 0.05297824,
            0.39004716, 0.4614755, 0.71394046, 0.36967712, 0.72813417, 0.32832127, 0.7320835,
            0.84974216, 0.46872958, 0.53924271,
        ],
    )
    .unwrap();
    let conv_layer30 = ConvolutionLayer::new(kernel30, 1, Padding::Valid);
    let target_output30 = array![
        [
            [
                14.81635952,
                13.25780201,
                13.04773521,
                12.51949024,
                11.53667545,
                12.11466599,
                13.82532692,
                13.67186737,
                12.04107952,
                13.90333652,
                12.69564342
            ],
            [
                13.47574615,
                12.83177662,
                13.66309929,
                12.16329288,
                12.07153702,
                13.40914631,
                13.87270069,
                13.69533443,
                14.67876911,
                12.64565086,
                12.12251663
            ],
            [
                12.36494923,
                10.80505657,
                11.99135971,
                10.38235283,
                10.63479137,
                11.12812805,
                13.03280354,
                12.71485329,
                13.50058365,
                13.35554504,
                13.92010403
            ],
            [
                12.82080555,
                12.0486021,
                11.34108448,
                11.6081171,
                9.89380169,
                11.12234116,
                11.28044128,
                13.95875263,
                12.96029091,
                12.03309822,
                13.60287189
            ],
            [
                11.49787331,
                11.05534077,
                12.45762348,
                12.33260059,
                11.51018906,
                10.17503738,
                10.33218956,
                10.47509289,
                11.16501427,
                11.62384129,
                11.11781979
            ],
            [
                12.24643421,
                13.44842529,
                10.83141327,
                11.73508167,
                11.08106232,
                9.61971378,
                10.80725098,
                11.86674404,
                11.31471634,
                11.17101574,
                12.60087013
            ]
        ],
        [
            [
                14.58460712,
                13.18916988,
                13.46203709,
                13.05741596,
                13.43784428,
                11.09930706,
                12.61179256,
                12.54162884,
                12.82730865,
                12.9920435,
                12.32993221
            ],
            [
                14.69361973,
                13.0223484,
                13.03387833,
                13.6774931,
                12.75236511,
                11.48867607,
                13.58406258,
                12.67438602,
                13.90305042,
                13.93600655,
                14.53009129
            ],
            [
                12.3941431,
                11.04926586,
                11.71028233,
                11.34906864,
                11.10985851,
                12.26190472,
                13.33062267,
                12.32807827,
                14.67350006,
                13.79151535,
                13.54241562
            ],
            [
                13.44638729,
                13.11953735,
                11.35526657,
                11.29660225,
                10.56927395,
                10.19328499,
                10.48200607,
                12.57123566,
                13.61933613,
                13.53359032,
                14.33049488
            ],
            [
                12.4489603,
                12.34693623,
                11.05017948,
                12.39269352,
                11.37538052,
                10.74424458,
                10.69637489,
                11.20000267,
                11.19253445,
                11.56839752,
                11.72760201
            ],
            [
                12.19209576,
                12.57876015,
                12.33625603,
                12.41315651,
                11.20371056,
                11.439291,
                9.95817184,
                10.72066689,
                10.8334837,
                11.38999271,
                12.15208912
            ]
        ],
        [
            [
                12.88627529,
                12.3491993,
                13.91176987,
                11.83025646,
                11.92845917,
                11.26004505,
                13.84520149,
                11.86112022,
                14.14645672,
                13.56377888,
                11.50539398
            ],
            [
                14.05140495,
                13.18700218,
                12.73519325,
                13.39408684,
                11.89244652,
                11.22226715,
                12.7299242,
                13.6271944,
                12.56425571,
                13.91560841,
                13.92572594
            ],
            [
                11.90434456,
                10.90201092,
                11.67102432,
                11.54583168,
                10.88935566,
                10.55256367,
                11.50238991,
                12.20049286,
                14.67648602,
                12.25995445,
                12.49367237
            ],
            [
                12.49108982,
                11.46739578,
                11.01879787,
                11.48110867,
                10.31728649,
                10.60366249,
                10.85547543,
                11.87917233,
                12.55472469,
                13.154706,
                13.62695217
            ],
            [
                11.70235634,
                12.24397087,
                10.12118244,
                11.89455414,
                11.42440319,
                9.81862545,
                9.04012012,
                11.33012199,
                11.08680248,
                11.04977798,
                11.63203621
            ],
            [
                13.05738449,
                12.35397625,
                11.73360062,
                12.0608263,
                10.34731865,
                10.42867184,
                9.51713657,
                9.98875523,
                11.16123009,
                11.54313564,
                11.59380245
            ]
        ]
    ];
    let current_output30 = conv_layer30.convolve(&test_input30);

    assert!(
        arr_allclose(&current_output30, &target_output30),
        "{:?} was not equal to {:?}",
        current_output30,
        target_output30
    );

    let test_input31 = array![
        [
            [0.0656543, 0.10209152, 0.19136641, 0.26282084, 0.36334252],
            [0.24959058, 0.68387176, 0.02750501, 0.24431834, 0.15333543],
            [0.79784446, 0.98453825, 0.31919928, 0.70732907, 0.64511192],
            [0.67005818, 0.64926277, 0.63156655, 0.00915827, 0.52349092],
            [0.88483645, 0.78874909, 0.08833914, 0.51414193, 0.07875763]
        ],
        [
            [0.22806701, 0.78832331, 0.30477429, 0.25333271, 0.6694263],
            [0.43796757, 0.97122886, 0.64503408, 0.54534572, 0.68606072],
            [0.99498231, 0.46345224, 0.65992148, 0.91093289, 0.5078866],
            [0.35286993, 0.81354124, 0.47349572, 0.69897416, 0.53855813],
            [0.93777999, 0.29683718, 0.08466158, 0.00917824, 0.36412131]
        ]
    ];

    let kernel31: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.31364415, 0.89281444, 0.29423689, 0.58694244, 0.14618948, 0.68540368, 0.95513807,
            0.21801536, 0.02948874, 0.7533694, 0.61790164, 0.0048431, 0.83636741, 0.74369047,
            0.43101178, 0.47684281, 0.83831029, 0.19812581, 0.05256698, 0.0566386, 0.72115872,
            0.50159207, 0.30938643, 0.0141753, 0.52415643, 0.96125232, 0.78953046, 0.92893124,
            0.80651444, 0.80715594, 0.25863178, 0.70371311, 0.19224384, 0.68629023, 0.58040164,
            0.43242832, 0.34644595, 0.54378764, 0.4958622, 0.69513009, 0.64524393, 0.73673742,
            0.73902685, 0.38423092, 0.29721686, 0.41607439, 0.64454817, 0.69389512, 0.55612449,
            0.62221509, 0.75789962, 0.8944672, 0.92868456, 0.96990104,
        ],
    )
    .unwrap();
    let conv_layer31 = ConvolutionLayer::new(kernel31, 1, Padding::Valid);
    let target_output31 = array![
        [
            [4.440207, 5.14909506, 3.8457365],
            [5.66665983, 5.50564194, 4.81843758],
            [6.02012968, 4.37885809, 4.18172789]
        ],
        [
            [5.35260439, 5.02960587, 4.64657497],
            [5.59520817, 5.52835131, 4.73276663],
            [5.6035285, 4.63822269, 4.14822149]
        ],
        [
            [5.98264313, 5.96929455, 5.27998877],
            [6.95746803, 6.91206837, 6.00749731],
            [6.73182869, 5.38075781, 4.68991327]
        ]
    ];
    let current_output31 = conv_layer31.convolve(&test_input31);

    assert!(
        arr_allclose(&current_output31, &target_output31),
        "{:?} was not equal to {:?}",
        current_output31,
        target_output31
    );

    let test_input32 = array![
        [
            [0.12573825, 0.04893699, 0.98348894, 0.1309708, 0.10405056],
            [0.89075837, 0.19249535, 0.7266609, 0.97847943, 0.88732066],
            [0.04145219, 0.40886414, 0.94225923, 0.48782048, 0.32128148],
            [0.33589965, 0.548731, 0.39472355, 0.20935446, 0.45881257],
            [0.87849302, 0.11820385, 0.33547177, 0.78958012, 0.61463959]
        ],
        [
            [0.54037099, 0.75543073, 0.93286069, 0.79101775, 0.23345572],
            [0.08010993, 0.78839544, 0.54354429, 0.81300774, 0.84049743],
            [0.16837756, 0.35681822, 0.9842876, 0.7681288, 0.3387178],
            [0.3631438, 0.85423149, 0.69573399, 0.04040196, 0.51030129],
            [0.87327089, 0.37753971, 0.59577572, 0.19604515, 0.4733552]
        ]
    ];

    let kernel32: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.82332438, 0.93222111, 0.95901178, 0.85556581, 0.89882571, 0.69483556, 0.25473274,
            0.58026378, 0.46147575, 0.87210913, 0.29316397, 0.52445789, 0.30302691, 0.43613002,
            0.26899648, 0.55013153, 0.37700799, 0.41173777, 0.36448048, 0.67584548, 0.53783194,
            0.58787241, 0.99191519, 0.95134267, 0.49309427, 0.87526672, 0.60490572, 0.96107544,
            0.25857434, 0.15807905, 0.81055479, 0.56145431, 0.52334199, 0.00024235, 0.24716882,
            0.62018557, 0.20580723, 0.59646319, 0.45906409, 0.42482692, 0.45910731, 0.28503575,
            0.02397736, 0.70268539, 0.38717397, 0.72264349, 0.05888641, 0.1981337, 0.28624369,
            0.86936975, 0.98584665, 0.33910661, 0.04178984, 0.83887973,
        ],
    )
    .unwrap();
    let conv_layer32 = ConvolutionLayer::new(kernel32, 1, Padding::Valid);
    let target_output32 = array![
        [
            [5.54371595, 6.38192701, 6.70450258],
            [5.11927509, 6.54159689, 6.74866819],
            [5.12643433, 5.33049631, 5.43411684]
        ],
        [
            [5.31488752, 7.02093458, 6.70584011],
            [4.91802835, 5.93716764, 6.00071764],
            [4.66583061, 4.88299608, 5.34441233]
        ],
        [
            [4.595294, 5.27567434, 4.93688917],
            [3.93534255, 4.86971569, 4.74691772],
            [4.10798693, 3.56297731, 3.99610305]
        ]
    ];
    let current_output32 = conv_layer32.convolve(&test_input32);

    assert!(
        arr_allclose(&current_output32, &target_output32),
        "{:?} was not equal to {:?}",
        current_output32,
        target_output32
    );

    let test_input33 = array![
        [
            [0.87520554, 0.19628692, 0.32806987, 0.19625323, 0.48324485],
            [0.26547596, 0.29169067, 0.34818614, 0.54155626, 0.55841755],
            [0.43203036, 0.90635383, 0.62216193, 0.13312029, 0.58438163],
            [0.24158851, 0.59230624, 0.80972454, 0.78276191, 0.18394486],
            [0.59019595, 0.94054116, 0.44074105, 0.67807877, 0.58551256]
        ],
        [
            [0.83411977, 0.0958912, 0.42005201, 0.54269039, 0.47856296],
            [0.68272057, 0.02972909, 0.85674535, 0.71152625, 0.78101332],
            [0.70287635, 0.61693936, 0.99540682, 0.53743317, 0.65756059],
            [0.96492665, 0.31929256, 0.02934249, 0.56245795, 0.09922413],
            [0.86692382, 0.39934039, 0.07765451, 0.73534189, 0.00198996]
        ]
    ];

    let kernel33: Array4<f32> = Array::from_shape_vec(
        (3, 2, 3, 3),
        vec![
            0.446601, 0.49630404, 0.79839312, 0.58093805, 0.21345795, 0.72308261, 0.48493851,
            0.82055302, 0.62823937, 0.20790926, 0.17480347, 0.10601443, 0.81503462, 0.127237,
            0.27046125, 0.28842457, 0.7203788, 0.69916581, 0.26068439, 0.52442361, 0.32585684,
            0.71527441, 0.68926451, 0.38133959, 0.86428924, 0.5063956, 0.52138848, 0.59597006,
            0.85057951, 0.77488746, 0.32738407, 0.52149975, 0.34216304, 0.22714304, 0.76833694,
            0.36691627, 0.14223122, 0.67387353, 0.09267096, 0.49853118, 0.58446873, 0.76446555,
            0.28446306, 0.3201185, 0.26963411, 0.85784458, 0.09514732, 0.59979402, 0.50938488,
            0.71366805, 0.88974968, 0.56399824, 0.48656831, 0.57541674,
        ],
    )
    .unwrap();
    let conv_layer33 = ConvolutionLayer::new(kernel33, 1, Padding::Valid);
    let target_output33 = array![
        [
            [4.93232298, 3.82355452, 4.49644136],
            [4.2349081, 4.44715452, 4.75888729],
            [5.1131711, 4.60711145, 3.7654016]
        ],
        [
            [4.55370283, 4.74721241, 4.97286177],
            [4.90130234, 5.39729977, 5.53586006],
            [5.63636017, 5.63909912, 5.12099409]
        ],
        [
            [4.81422377, 4.37190676, 5.05726004],
            [5.46680117, 4.43693447, 4.92551279],
            [5.13544226, 4.83538246, 3.94127512]
        ]
    ];
    let current_output33 = conv_layer33.convolve(&test_input33);

    assert!(
        arr_allclose(&current_output33, &target_output33),
        "{:?} was not equal to {:?}",
        current_output33,
        target_output33
    );

    let test_input34 = array![
        [
            [0.63260813, 0.51304414, 0.49034654, 0.70372093, 0.33208346],
            [0.63787571, 0.62917059, 0.47421247, 0.23486344, 0.86995201],
            [0.65361419, 0.03662743, 0.51462922, 0.91969109, 0.87932213],
            [0.78186775, 0.48471547, 0.53838686, 0.62534816, 0.3553714],
            [0.99681179, 0.49688725, 0.37583, 0.19825908, 0.93685856]
        ],
        [
            [0.68677646, 0.24576979, 0.36799956, 0.66436833, 0.40309097],
            [0.40307762, 0.60841759, 0.90556718, 0.69772192, 0.19649447],
            [0.12604196, 0.43395323, 0.05938564, 0.06919543, 0.65974034],
            [0.90802655, 0.56249222, 0.28784845, 0.02659295, 0.47776846],
            [0.76198399, 0.79841344, 0.79470665, 0.02110602, 0.54365277]
        ]
    ];

    let kernel34: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.71139069, 0.18104874, 0.24870853, 0.57747318, 0.61245713, 0.03752139, 0.94574443,
            0.46812821, 0.96979702, 0.12823386, 0.15993103, 0.42355735, 0.72048514, 0.48144374,
            0.85812101, 0.33813378, 0.97785051, 0.46431799, 0.22258296, 0.62782708, 0.25811203,
            0.72843253, 0.27373014, 0.27433896, 0.73249104, 0.68628502, 0.9107763, 0.52486304,
            0.02864541, 0.63270447, 0.38749784, 0.44100301, 0.78058935, 0.14124235, 0.28628785,
            0.76789914, 0.37555937, 0.43971176, 0.04331318, 0.09780997, 0.40862007, 0.70528004,
            0.09185711, 0.82353595, 0.81429753, 0.07302681, 0.61528493, 0.93562272, 0.77982756,
            0.7211608, 0.71058422, 0.40345481, 0.80509214, 0.09783126, 0.21926213, 0.13207655,
            0.70158083, 0.17238653, 0.18460116, 0.55758209, 0.5780929, 0.04024655, 0.60567654,
            0.67101529, 0.11163998, 0.97307409, 0.79570754, 0.13753681, 0.42499141, 0.95902903,
            0.64616002, 0.01944306, 0.0451069, 0.60988926, 0.57029749, 0.91541411, 0.298369,
            0.47126327, 0.56598396, 0.57679987, 0.28650795, 0.35120928, 0.22292198, 0.76072214,
            0.83723958, 0.61290087, 0.14372927, 0.35133615, 0.2495688, 0.98542097, 0.44534237,
            0.26395977, 0.64136176, 0.29018157, 0.70265153, 0.46130355, 0.83116457, 0.38838806,
            0.7658825, 0.2515203, 0.1549832, 0.32756809, 0.10193888, 0.37098823, 0.16565025,
            0.64406869, 0.39290614, 0.8382721, 0.4127133, 0.66124401, 0.86943133, 0.91799987,
            0.71498458, 0.17257372, 0.72377337, 0.43520794, 0.32025693, 0.22938729, 0.20685976,
            0.56188855, 0.03298171, 0.04516815, 0.28889107, 0.37819354, 0.35941375, 0.22646557,
            0.48656109, 0.06850647, 0.36713556, 0.97507527, 0.98560174, 0.13691915, 0.25587378,
            0.23198135, 0.63168261, 0.90634482, 0.62659276, 0.00830113, 0.57375852, 0.66081992,
            0.4511592, 0.7095235, 0.37015311, 0.44504768, 0.49891137, 0.54966918, 0.53325307,
            0.02767666, 0.48693478, 0.61392414,
        ],
    )
    .unwrap();
    let conv_layer34 = ConvolutionLayer::new(kernel34, 1, Padding::Valid);
    let target_output34 = array![[[12.66255569]], [[12.98389244]], [[10.82254887]]];
    let current_output34 = conv_layer34.convolve(&test_input34);

    assert!(
        arr_allclose(&current_output34, &target_output34),
        "{:?} was not equal to {:?}",
        current_output34,
        target_output34
    );

    let test_input35 = array![
        [
            [0.88516566, 0.26826328, 0.40765006, 0.27840444, 0.89372281],
            [0.997754, 0.46338457, 0.78445924, 0.58261301, 0.74148726],
            [0.58712801, 0.25544515, 0.38590936, 0.68114016, 0.50827443],
            [0.66626601, 0.23000366, 0.408603, 0.913767, 0.06065572],
            [0.154079, 0.61952481, 0.84496329, 0.76260163, 0.18244016]
        ],
        [
            [0.17815381, 0.26175068, 0.04169152, 0.30446775, 0.94878975],
            [0.73767347, 0.88643997, 0.420784, 0.0778392, 0.88266083],
            [0.64920469, 0.38854632, 0.68384961, 0.62660611, 0.54694177],
            [0.02779118, 0.58517391, 0.89240649, 0.86535265, 0.20996386],
            [0.13090512, 0.72814707, 0.39318707, 0.32672238, 0.68486334]
        ]
    ];

    let kernel35: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.84961617, 0.45679869, 0.67593971, 0.64456962, 0.96701486, 0.16086548, 0.70874045,
            0.88949418, 0.64757223, 0.18771773, 0.2012408, 0.94878229, 0.58967289, 0.80090126,
            0.57993472, 0.91786684, 0.16573429, 0.58338782, 0.47667618, 0.95321173, 0.21564776,
            0.89133877, 0.17446654, 0.0107795, 0.29889567, 0.39913233, 0.53028938, 0.07816543,
            0.74028524, 0.98573533, 0.30748605, 0.99362098, 0.03758357, 0.13146875, 0.86146387,
            0.69495144, 0.2455884, 0.77066559, 0.63164333, 0.81027586, 0.48230579, 0.00178706,
            0.45821981, 0.65619095, 0.28412483, 0.03629474, 0.45011836, 0.35812909, 0.02914437,
            0.69193079, 0.10555214, 0.27197846, 0.08190992, 0.74310325, 0.79646136, 0.66244077,
            0.15210662, 0.20802912, 0.50446085, 0.86376217, 0.95377633, 0.60208729, 0.83035149,
            0.95887528, 0.73197966, 0.43450554, 0.65447566, 0.1375018, 0.45277232, 0.91661334,
            0.76142713, 0.42497007, 0.14067934, 0.44368562, 0.79865278, 0.64449096, 0.92738415,
            0.89581372, 0.12830848, 0.04963118, 0.81917153, 0.42274445, 0.05446685, 0.04101894,
            0.09930792, 0.52868895, 0.25766372, 0.46413783, 0.83290284, 0.2857464, 0.93483082,
            0.75272588, 0.66271508, 0.97417882, 0.86544561, 0.03159403, 0.08091403, 0.14496518,
            0.93542052, 0.99598936, 0.79414079, 0.74232757, 0.02799125, 0.03848875, 0.80547294,
            0.99117134, 0.64981678, 0.32092867, 0.39836622, 0.14606106, 0.51995739, 0.48990741,
            0.53609649, 0.44993455, 0.03084684, 0.40801702, 0.57139093, 0.73604949, 0.66188473,
            0.93578261, 0.87069364, 0.21162366, 0.21231654, 0.5704002, 0.72954617, 0.39067076,
            0.23692592, 0.02214847, 0.41872549, 0.48079551, 0.39574632, 0.62385207, 0.27060798,
            0.93228407, 0.65184226, 0.71227602, 0.09648224, 0.52886577, 0.38637865, 0.59184713,
            0.01740899, 0.73943389, 0.56132905, 0.19255764, 0.89828088, 0.18568947, 0.64582922,
            0.90009913, 0.14083895, 0.19123401,
        ],
    )
    .unwrap();
    let conv_layer35 = ConvolutionLayer::new(kernel35, 1, Padding::Valid);
    let target_output35 = array![[[14.69040489]], [[13.15911674]], [[12.9292078]]];
    let current_output35 = conv_layer35.convolve(&test_input35);

    assert!(
        arr_allclose(&current_output35, &target_output35),
        "{:?} was not equal to {:?}",
        current_output35,
        target_output35
    );

    let test_input36 = array![
        [
            [0.29393503, 0.97096816, 0.82107479, 0.37299707, 0.69329291],
            [0.78315556, 0.71168383, 0.90605891, 0.39581179, 0.97290847],
            [0.37787062, 0.31105782, 0.51860092, 0.82105915, 0.47715544],
            [0.86727587, 0.86623363, 0.29922553, 0.03071198, 0.03382622],
            [0.45532397, 0.62365896, 0.149902, 0.42382213, 0.65666048]
        ],
        [
            [0.45536264, 0.42575221, 0.97928354, 0.01637395, 0.56597986],
            [0.72018579, 0.13000993, 0.38580756, 0.46124812, 0.73456862],
            [0.45498174, 0.01468375, 0.3311825, 0.68482728, 0.04436485],
            [0.59042015, 0.97141219, 0.54361908, 0.94970683, 0.91654963],
            [0.82998192, 0.68421301, 0.89789514, 0.18899626, 0.59009004]
        ]
    ];

    let kernel36: Array4<f32> = Array::from_shape_vec(
        (3, 2, 5, 5),
        vec![
            0.99886152, 0.02270102, 0.86184339, 0.74995397, 0.42788859, 0.6528449, 0.2109633,
            0.62540177, 0.80175091, 0.2595119, 0.02546183, 0.02745248, 0.64143605, 0.73727669,
            0.22952433, 0.69794111, 0.67568086, 0.70173411, 0.91833401, 0.03686747, 0.21967117,
            0.65583056, 0.16345957, 0.50405574, 0.52543861, 0.2864706, 0.85770921, 0.17987564,
            0.12798377, 0.37675844, 0.04420354, 0.97041538, 0.40747899, 0.07644754, 0.14767134,
            0.62435315, 0.67701851, 0.19173194, 0.46982294, 0.02457761, 0.72695231, 0.23975594,
            0.19219192, 0.33087449, 0.39658298, 0.86232313, 0.48967764, 0.19221618, 0.08402258,
            0.73316128, 0.19351118, 0.31468205, 0.77017715, 0.68409839, 0.40743571, 0.94743479,
            0.16978115, 0.98625355, 0.68625983, 0.11779779, 0.59068389, 0.22131853, 0.04202804,
            0.6265308, 0.98268984, 0.6135814, 0.59731365, 0.48969689, 0.51994119, 0.21510182,
            0.66191621, 0.87151363, 0.57183193, 0.28850291, 0.50771167, 0.90177902, 0.08790162,
            0.49242653, 0.97057748, 0.63548346, 0.45100801, 0.03424489, 0.78716157, 0.08637598,
            0.78139438, 0.56886003, 0.40288509, 0.55354594, 0.38486881, 0.64877658, 0.70381685,
            0.52164921, 0.79412487, 0.47117358, 0.61789879, 0.69248389, 0.95235469, 0.99155946,
            0.70862474, 0.3368942, 0.1660726, 0.68587414, 0.47262584, 0.45400558, 0.46214448,
            0.33963646, 0.79271979, 0.74960237, 0.53057699, 0.51949296, 0.91085593, 0.0421344,
            0.1856097, 0.16283799, 0.59682315, 0.94973904, 0.45783094, 0.93284742, 0.55421731,
            0.4387137, 0.05644235, 0.44071786, 0.14814438, 0.55691821, 0.20264524, 0.04074387,
            0.6096802, 0.48095221, 0.47096237, 0.00810335, 0.22991579, 0.21848392, 0.73244206,
            0.72079857, 0.68204967, 0.73275174, 0.33685236, 0.93032443, 0.38904786, 0.70664368,
            0.66565032, 0.84123703, 0.41910259, 0.59142588, 0.9108226, 0.53551847, 0.4931909,
            0.54357492, 0.68504052, 0.36235321,
        ],
    )
    .unwrap();
    let conv_layer36 = ConvolutionLayer::new(kernel36, 1, Padding::Valid);
    let target_output36 = array![[[12.12802792]], [[15.68813229]], [[14.37600422]]];
    let current_output36 = conv_layer36.convolve(&test_input36);

    assert!(
        arr_allclose(&current_output36, &target_output36),
        "{:?} was not equal to {:?}",
        current_output36,
        target_output36
    );
}
