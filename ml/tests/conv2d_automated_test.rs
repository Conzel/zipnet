// This file has been automatically generated by Jinja2 via the
// script generate_tests.py.
// Please do not change this file by hand.
use ml::convolutions::*;
use ml::transposed_convolutions::*;
use ndarray::{array, Array, Array3, Array4, Dimension};

fn arr_allclose<D: Dimension>(arr1: &Array<f32, D>, arr2: &Array<f32, D>) -> bool {
    (arr1 - arr2).map(|x| (*x as f32).abs()).sum() < 1e-3
}

#[test]
fn test_py_implementation_random_arrays_conv2d() {
    let test_input1 = array![[
        [0.17014849, 0.4305688, 0.5715329, 0.06520256, 0.12669589],
        [0.7501565, 0.9837982, 0.55574155, 0.04181346, 0.23677547],
        [0.51154923, 0.02844254, 0.60484785, 0.72306335, 0.22177844],
        [0.16487044, 0.46672952, 0.54035133, 0.6922357, 0.27845532],
        [0.66966337, 0.41083884, 0.4583148, 0.70402896, 0.6177326]
    ]];

    let kernel1: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.9269775, 0.9148518, 0.85028297, 0.2697065, 0.55898565, 0.84558666, 0.75231165,
            0.9034325, 0.07658575, 0.56033564, 0.3356524, 0.96145767, 0.24242379, 0.5888119,
            0.0474241, 0.9692583, 0.2795916, 0.7197864, 0.9098013, 0.37189406, 0.5566679,
            0.7944849, 0.44166553, 0.23985276, 0.12854727, 0.7567664, 0.13313323,
        ],
    )
    .unwrap();
    let conv_layer1 = ConvolutionLayer::new(kernel1, 1, Padding::Valid);
    let target_output1: Array3<f32> = array![
        [
            [2.947443, 2.4417949, 2.5310931],
            [2.9853659, 3.017445, 2.9285789],
            [2.7887015, 2.8786838, 3.0877228]
        ],
        [
            [2.668671, 1.6886283, 1.5116739],
            [2.1246407, 2.2669892, 1.9945912],
            [2.3542464, 2.4552593, 2.3146605]
        ],
        [
            [2.0765162, 1.7543228, 1.5320528],
            [2.4717412, 2.6484497, 1.7852999],
            [1.7744671, 1.9678149, 2.3769124]
        ]
    ];
    let current_output1: Array3<f32> = conv_layer1.convolve(&test_input1);

    assert!(
        arr_allclose(&current_output1, &target_output1),
        "{:?} was not equal to {:?}",
        current_output1,
        target_output1
    );

    let test_input2 = array![[
        [0.69580543, 0.12692, 0.38484824, 0.775336, 0.52113837],
        [0.4364637, 0.14352316, 0.8997107, 0.64410555, 0.04471071],
        [0.767672, 0.43464628, 0.16569944, 0.18875164, 0.12285258],
        [0.2781115, 0.5390728, 0.5066572, 0.97435564, 0.39133722],
        [0.7964828, 0.988919, 0.35985747, 0.00756764, 0.53660643]
    ]];

    let kernel2: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.8659267, 0.0067116, 0.38848338, 0.9480399, 0.00785976, 0.07988323, 0.8462714,
            0.1022715, 0.16570753, 0.8576183, 0.65220493, 0.00744711, 0.45711017, 0.32536873,
            0.6283005, 0.70536447, 0.7567798, 0.6487234, 0.81628793, 0.72789615, 0.8715701,
            0.89837223, 0.09833383, 0.8241853, 0.9289133, 0.23972042, 0.14438818,
        ],
    )
    .unwrap();
    let conv_layer2 = ConvolutionLayer::new(kernel2, 1, Padding::Valid);
    let target_output2: Array3<f32> = array![
        [
            [1.5050063, 1.4181751, 1.6248051],
            [1.535987, 1.957206, 1.7822287],
            [1.723006, 1.2146248, 0.70679843]
        ],
        [
            [2.3247535, 1.9352452, 2.081787],
            [2.5114982, 2.4233541, 2.22986],
            [2.5748582, 2.0738237, 1.614212]
        ],
        [
            [2.6382163, 2.0595524, 2.5414546],
            [2.722063, 2.9297733, 2.8243663],
            [3.1091397, 2.5143678, 1.3747222]
        ]
    ];
    let current_output2: Array3<f32> = conv_layer2.convolve(&test_input2);

    assert!(
        arr_allclose(&current_output2, &target_output2),
        "{:?} was not equal to {:?}",
        current_output2,
        target_output2
    );

    let test_input3 = array![[
        [0.6286194, 0.34163022, 0.03235205, 0.25922647, 0.59344524],
        [0.9308157, 0.22162326, 0.91818297, 0.97700953, 0.18019113],
        [0.775954, 0.14120784, 0.3426181, 0.5417864, 0.7768226],
        [0.34603763, 0.6114103, 0.9716041, 0.5157695, 0.50755495],
        [0.6659802, 0.629322, 0.60627973, 0.27978492, 0.28792506]
    ]];

    let kernel3: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.7547703, 0.39898983, 0.9862549, 0.89887625, 0.36253917, 0.5617529, 0.3626411,
            0.69587743, 0.92333794, 0.0509604, 0.6908677, 0.22876498, 0.6572328, 0.36786652,
            0.5566727, 0.37613922, 0.4870034, 0.85647196, 0.10449678, 0.5511301, 0.75677496,
            0.695583, 0.88718724, 0.7035832, 0.9241278, 0.7135373, 0.36252776,
        ],
    )
    .unwrap();
    let conv_layer3 = ConvolutionLayer::new(kernel3, 1, Padding::Valid);
    let target_output3: Array3<f32> = array![
        [
            [3.0449195, 2.3141062, 2.6781082],
            [3.415808, 3.5295186, 4.226895],
            [3.4428368, 2.7857156, 2.976116]
        ],
        [
            [1.9900512, 1.7899201, 2.5220482],
            [2.5450091, 2.5921679, 2.5151052],
            [2.2203205, 2.1882627, 2.3149424]
        ],
        [
            [2.5087807, 2.4759727, 3.1556118],
            [2.9416273, 3.6663733, 3.4480186],
            [3.088923, 3.3249903, 3.2458172]
        ]
    ];
    let current_output3: Array3<f32> = conv_layer3.convolve(&test_input3);

    assert!(
        arr_allclose(&current_output3, &target_output3),
        "{:?} was not equal to {:?}",
        current_output3,
        target_output3
    );

    let test_input4 = array![[
        [0.9373231, 0.01684272, 0.34317794, 0.921993, 0.36392415],
        [0.7462054, 0.7556754, 0.31284246, 0.4031665, 0.7376267],
        [0.7926341, 0.36348057, 0.84374106, 0.03665259, 0.23846498],
        [0.82509995, 0.97324103, 0.96826524, 0.77620417, 0.8427075],
        [0.42989048, 0.76771307, 0.54514444, 0.7878393, 0.21897991]
    ]];

    let kernel4: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.975659, 0.6089244, 0.21606164, 0.92175007, 0.6390296, 0.69994044, 0.02602104,
            0.33579683, 0.19149332, 0.81350476, 0.76087946, 0.5087405, 0.2576527, 0.14780204,
            0.90738845, 0.14890751, 0.3329467, 0.30113342, 0.00207204, 0.9812083, 0.21943341,
            0.33126613, 0.423247, 0.9019851, 0.46724817, 0.73295325, 0.8612485, 0.87119263,
            0.21606776, 0.5977058, 0.86701024, 0.30423534, 0.2313126, 0.4240341, 0.3685356,
            0.623545, 0.16869895, 0.3748985, 0.46443272, 0.7828945, 0.8610666, 0.179494, 0.8142977,
            0.359202, 0.6726924, 0.1644093, 0.11996287, 0.8179498, 0.21363449, 0.17302093,
        ],
    )
    .unwrap();
    let conv_layer4 = ConvolutionLayer::new(kernel4, 1, Padding::Valid);
    let target_output4: Array3<f32> = array![[[7.1600156]], [[7.205399]]];
    let current_output4: Array3<f32> = conv_layer4.convolve(&test_input4);

    assert!(
        arr_allclose(&current_output4, &target_output4),
        "{:?} was not equal to {:?}",
        current_output4,
        target_output4
    );

    let test_input5 = array![[
        [0.39839587, 0.78055173, 0.8576361, 0.7335981, 0.52934057],
        [0.9529279, 0.78965247, 0.46750203, 0.08403921, 0.73126566],
        [0.34934825, 0.3459232, 0.54770446, 0.68714255, 0.29283327],
        [0.53392637, 0.8850151, 0.6909357, 0.44388366, 0.9043074],
        [0.9949724, 0.64743847, 0.36691284, 0.5396585, 0.5372604]
    ]];

    let kernel5: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.47547424, 0.6566154, 0.74741316, 0.6906785, 0.16371861, 0.34716287, 0.28848994,
            0.9649919, 0.224454, 0.7300311, 0.9437953, 0.06870039, 0.5208711, 0.75431514,
            0.05700503, 0.15765554, 0.47194287, 0.13247305, 0.8120864, 0.44457257, 0.86233217,
            0.6111727, 0.17877895, 0.7703749, 0.15101007, 0.44373918, 0.3879487, 0.45714313,
            0.9675369, 0.42877796, 0.21774843, 0.5814131, 0.57969916, 0.28950995, 0.9456737,
            0.51856595, 0.78543746, 0.93666834, 0.99582964, 0.19623296, 0.9350713, 0.12733267,
            0.7087714, 0.9536324, 0.5512328, 0.81734437, 0.25675833, 0.40767, 0.683158, 0.25140873,
        ],
    )
    .unwrap();
    let conv_layer5 = ConvolutionLayer::new(kernel5, 1, Padding::Valid);
    let target_output5: Array3<f32> = array![[[7.3610067]], [[8.829614]]];
    let current_output5: Array3<f32> = conv_layer5.convolve(&test_input5);

    assert!(
        arr_allclose(&current_output5, &target_output5),
        "{:?} was not equal to {:?}",
        current_output5,
        target_output5
    );

    let test_input6 = array![[
        [0.2031063, 0.5537751, 0.3641559, 0.701937, 0.27669305],
        [0.85076064, 0.00186597, 0.3316532, 0.15485734, 0.35000807],
        [0.42372492, 0.03995521, 0.5067197, 0.38907993, 0.37287286],
        [0.21294773, 0.8646356, 0.10154326, 0.75313085, 0.7910046],
        [0.15368015, 0.25977603, 0.40315583, 0.635939, 0.25689796]
    ]];

    let kernel6: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.13678746, 0.45131883, 0.00020906, 0.18134636, 0.6329186, 0.6658951, 0.40131757,
            0.57013196, 0.54676574, 0.30553624, 0.70429957, 0.7035094, 0.7132858, 0.83673465,
            0.5287215, 0.15790685, 0.05433872, 0.8246988, 0.5554673, 0.72178566, 0.6432024,
            0.24740443, 0.6876462, 0.9791666, 0.85191244, 0.43744904, 0.96080875, 0.23741227,
            0.9026019, 0.30872977, 0.564682, 0.60942906, 0.6398819, 0.33139232, 0.04431259,
            0.67241764, 0.6473561, 0.90739846, 0.05539654, 0.3358437, 0.25059524, 0.7478619,
            0.1319153, 0.9149804, 0.72704846, 0.60438925, 0.35665986, 0.846729, 0.9000323,
            0.07464863,
        ],
    )
    .unwrap();
    let conv_layer6 = ConvolutionLayer::new(kernel6, 1, Padding::Valid);
    let target_output6: Array3<f32> = array![[[5.47331]], [[5.7777452]]];
    let current_output6: Array3<f32> = conv_layer6.convolve(&test_input6);

    assert!(
        arr_allclose(&current_output6, &target_output6),
        "{:?} was not equal to {:?}",
        current_output6,
        target_output6
    );

    let test_input7 = array![[
        [
            0.867838, 0.5849202, 0.14913943, 0.18325551, 0.40498126, 0.75359416, 0.01821492,
            0.5917236, 0.91982275, 0.5287654, 0.7151285, 0.38420153, 0.517026, 0.5150141,
            0.26934662
        ],
        [
            0.7356045, 0.97902703, 0.6362754, 0.27803296, 0.32063982, 0.83432084, 0.78711736,
            0.28247103, 0.7812688, 0.5270146, 0.4719829, 0.47535485, 0.23715672, 0.4404677,
            0.90286416
        ],
        [
            0.66611385, 0.02649495, 0.3193976, 0.16608049, 0.5121102, 0.17436478, 0.313714,
            0.47244504, 0.9906781, 0.9064671, 0.29454133, 0.99321055, 0.12515199, 0.17643407,
            0.16320723
        ],
        [
            0.48754972, 0.53866875, 0.6358971, 0.8935865, 0.82249755, 0.92702305, 0.10556214,
            0.28283548, 0.14977625, 0.53714937, 0.06378802, 0.4497216, 0.79292244, 0.5300166,
            0.687625
        ],
        [
            0.4744624, 0.73655206, 0.42605233, 0.6592577, 0.3237799, 0.42867732, 0.87574345,
            0.70010746, 0.01496939, 0.78416556, 0.61210716, 0.98323476, 0.9316805, 0.05175687,
            0.70876056
        ],
        [
            0.52122, 0.68573385, 0.415587, 0.87644994, 0.73337436, 0.5451011, 0.20423086,
            0.5554448, 0.48578474, 0.2764571, 0.9192946, 0.8920509, 0.34320405, 0.4283556,
            0.3897719
        ],
        [
            0.06360459, 0.729173, 0.19460331, 0.8634254, 0.6576018, 0.9657459, 0.22873744,
            0.47843248, 0.22157177, 0.9162307, 0.02157675, 0.44649428, 0.2792192, 0.685827,
            0.75294507
        ],
        [
            0.7919586, 0.22560763, 0.88778716, 0.80092114, 0.00003577, 0.9737877, 0.9146247,
            0.13869576, 0.7059647, 0.0936791, 0.2647747, 0.52025, 0.0330946, 0.17754778,
            0.41998118
        ],
        [
            0.02919354, 0.82382417, 0.4156855, 0.49590722, 0.69720376, 0.7155315, 0.40795937,
            0.15397236, 0.02265206, 0.7090415, 0.75877124, 0.67035425, 0.39483562, 0.86222315,
            0.9993058
        ],
        [
            0.84902793, 0.26427644, 0.86764544, 0.24274233, 0.69865257, 0.5739991, 0.7620597,
            0.29289714, 0.88402116, 0.8942853, 0.7757528, 0.16431308, 0.48939565, 0.56055367,
            0.46453193
        ]
    ]];

    let kernel7: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.9573795, 0.8855644, 0.45529485, 0.63514715, 0.6197168, 0.7403127, 0.46075395,
            0.30692965, 0.80679554, 0.8899508, 0.61877847, 0.6626128, 0.810474, 0.3379795,
            0.06039312, 0.02808736, 0.33537498, 0.1354166, 0.16098963, 0.9537467, 0.9497022,
            0.29953358, 0.13108306, 0.08292098, 0.59781086, 0.01351478, 0.2560622,
        ],
    )
    .unwrap();
    let conv_layer7 = ConvolutionLayer::new(kernel7, 1, Padding::Valid);
    let target_output7: Array3<f32> = array![
        [
            [
                3.3050952, 2.4683006, 1.9614922, 2.076303, 2.5326846, 3.0118175, 3.220836,
                3.9702725, 4.069045, 3.4746454, 2.9226046, 2.3238304, 2.0255733
            ],
            [
                3.4573853, 3.1788652, 3.091078, 3.135878, 3.0033424, 2.6510873, 2.5459054,
                2.993043, 3.3469508, 2.968084, 2.7795188, 3.0393164, 2.5012357
            ],
            [
                2.8675063, 2.632769, 2.9598348, 3.0358915, 3.2521589, 2.9653788, 2.3007023,
                2.9698477, 3.2261899, 3.7692263, 3.307313, 3.3431387, 2.5831048
            ],
            [
                3.1895452, 3.7769554, 3.870295, 4.1028333, 3.148274, 3.0696027, 2.4598224,
                2.3189235, 2.3685658, 3.6636653, 3.505241, 3.6481853, 3.275112
            ],
            [
                2.8582354, 3.5860014, 3.370433, 4.091371, 3.2345998, 3.0640137, 2.6012628,
                3.0399387, 2.4746861, 3.4742293, 3.6776884, 3.654381, 3.1827564
            ],
            [
                2.9378245, 3.7617714, 3.1988707, 4.1749444, 3.85232, 3.2837045, 2.4278755,
                2.4712698, 2.439275, 2.8797758, 2.518737, 2.4529321, 2.1689682
            ],
            [
                2.685874, 3.2982328, 3.439139, 4.016665, 3.4088767, 3.5140564, 2.0555513, 2.268928,
                2.7159092, 2.928723, 2.1602263, 2.7496746, 2.9424007
            ],
            [
                3.2567446, 3.2467566, 3.386509, 3.39717, 3.5838683, 3.572647, 3.029679, 2.5016673,
                3.2401412, 2.9154718, 2.6774125, 2.5932415, 2.5412507
            ]
        ],
        [
            [
                2.7362704, 1.6200006, 1.1788582, 1.2372893, 2.1084046, 1.7775267, 1.7367185,
                2.3981652, 2.8381433, 2.4589295, 1.7666835, 1.9870017, 1.5991967
            ],
            [
                2.4359484, 2.0911624, 1.8128152, 1.6323764, 2.0799613, 2.419678, 1.74473,
                2.0997546, 2.2941604, 2.2791219, 1.5486807, 1.7613225, 1.4357383
            ],
            [
                1.7368234, 1.7380846, 1.7705419, 2.2240093, 1.822564, 1.5586007, 1.525651,
                2.2256055, 2.060379, 2.2677982, 2.1191432, 2.4291003, 1.8757957
            ],
            [
                2.0168047, 2.4388838, 2.3358986, 2.8478851, 2.6717298, 2.163284, 1.3455706,
                1.5242666, 1.5130818, 1.9237248, 2.1765468, 2.6682293, 2.2923
            ],
            [
                1.837367, 2.489867, 1.9920467, 2.5767791, 1.8917351, 2.4220555, 2.0346935,
                1.7122877, 1.5734708, 2.671394, 2.4323096, 2.8488128, 1.7072618
            ],
            [
                2.0409782, 2.0898135, 2.370204, 3.1326702, 2.0929077, 2.2208467, 1.7331387,
                1.7212332, 1.6455075, 1.8886464, 2.0199952, 2.0554972, 1.4101667
            ],
            [
                1.6424739, 2.1772993, 2.111293, 2.6182847, 2.570688, 2.536097, 1.7298203,
                1.1863432, 1.6582521, 1.7737839, 1.3364102, 1.6203607, 1.4958396
            ],
            [
                2.0445304, 2.0197604, 2.7820444, 1.8033962, 2.225817, 2.7100995, 1.9006325,
                1.4075223, 1.9645884, 1.8942498, 2.0769296, 1.5465616, 1.477057
            ]
        ],
        [
            [
                1.9591792, 1.3634707, 1.4168638, 1.1646335, 1.3087667, 1.6958252, 2.1191356,
                1.8287623, 2.6460056, 2.2395635, 1.4490927, 2.0138185, 0.86992383
            ],
            [
                2.1056652, 1.3769096, 1.5993322, 2.021672, 2.1726215, 1.7143295, 1.2149578,
                1.6058236, 1.8365679, 2.0575411, 1.0738547, 2.0055096, 1.8276174
            ],
            [
                1.4710857, 1.7120507, 1.684243, 2.0196826, 1.7968978, 1.965281, 1.8176167,
                2.0782719, 1.0571859, 2.4019022, 1.4516584, 1.8671694, 2.0761771
            ],
            [
                1.8330921, 2.48876, 2.0140188, 2.654167, 1.6440095, 1.5598962, 1.4828706,
                1.7303747, 1.0681517, 1.7830522, 2.379173, 2.6726682, 2.0636973
            ],
            [
                1.3150204, 2.2903678, 1.405581, 2.5206127, 2.240902, 2.362672, 0.9474401, 1.890498,
                1.4071237, 2.2798731, 2.0773814, 1.9926732, 1.4927914
            ],
            [
                1.6947899, 1.9844159, 1.9850763, 2.6193683, 1.4752852, 2.4746718, 1.8344201,
                1.1121757, 1.7883191, 1.9799976, 1.0063184, 1.51649, 0.93664336
            ],
            [
                1.3443657, 1.9780549, 2.2492135, 2.4023485, 1.4978558, 2.3133118, 1.6186386,
                1.2468752, 1.2867808, 1.4599191, 1.5026008, 1.9585955, 1.4633688
            ],
            [
                1.9176624, 2.0130398, 1.8767667, 1.7205688, 2.508967, 1.9349566, 1.9947832,
                1.0296552, 1.5371532, 2.1458745, 1.9108013, 1.2427312, 1.442891
            ]
        ]
    ];
    let current_output7: Array3<f32> = conv_layer7.convolve(&test_input7);

    assert!(
        arr_allclose(&current_output7, &target_output7),
        "{:?} was not equal to {:?}",
        current_output7,
        target_output7
    );

    let test_input8 = array![[
        [
            0.80891573, 0.97702754, 0.4124968, 0.4359102, 0.8733311, 0.1396195, 0.52047473,
            0.88564533, 0.29781443, 0.21130918, 0.83071965, 0.3337948, 0.9783562, 0.42070097,
            0.55396014
        ],
        [
            0.16172563, 0.7634967, 0.36205766, 0.48491392, 0.4980414, 0.6001484, 0.65126085,
            0.3691911, 0.11615072, 0.26983073, 0.8690525, 0.7446416, 0.471613, 0.72900707,
            0.842964
        ],
        [
            0.21457537, 0.938401, 0.41665936, 0.05351101, 0.43856344, 0.7253113, 0.8520324,
            0.4151233, 0.35101932, 0.7388761, 0.3592986, 0.6741479, 0.9965808, 0.3117034,
            0.8605703
        ],
        [
            0.94308543, 0.8192489, 0.31478795, 0.750324, 0.36604244, 0.78454614, 0.039194,
            0.23696694, 0.2418382, 0.24788351, 0.5622223, 0.15428482, 0.50688076, 0.37682602,
            0.44385925
        ],
        [
            0.00051633, 0.53422695, 0.5675659, 0.53845215, 0.2130759, 0.86445093, 0.432881,
            0.6255918, 0.3942565, 0.07226853, 0.09869356, 0.32627374, 0.8543963, 0.85603166,
            0.25422713
        ],
        [
            0.24929269, 0.36793318, 0.39957172, 0.9079535, 0.865758, 0.82237726, 0.60374194,
            0.7658025, 0.0215734, 0.473204, 0.6594781, 0.86392707, 0.8566667, 0.48541847,
            0.54855824
        ],
        [
            0.5860555, 0.158874, 0.10558709, 0.19664533, 0.39609066, 0.27843866, 0.49128443,
            0.75033015, 0.35650545, 0.4687038, 0.6159849, 0.2547001, 0.17250927, 0.07203952,
            0.8724657
        ],
        [
            0.14018923, 0.12091745, 0.4770398, 0.43290496, 0.6356798, 0.7619444, 0.2383507,
            0.95481586, 0.49641547, 0.7066018, 0.10666513, 0.06810815, 0.79673207, 0.29373887,
            0.55241185
        ],
        [
            0.23906927, 0.18915932, 0.02753429, 0.1438574, 0.5419741, 0.71984386, 0.12837073,
            0.55637455, 0.14355855, 0.10225686, 0.8755492, 0.62895286, 0.21388301, 0.30016333,
            0.49605927
        ],
        [
            0.8245107, 0.4528765, 0.6836941, 0.28745723, 0.5031258, 0.26911622, 0.92149794,
            0.7165893, 0.04745785, 0.55642486, 0.34654748, 0.83168656, 0.8410765, 0.7668131,
            0.84094906
        ]
    ]];

    let kernel8: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.6012723, 0.14233574, 0.7358748, 0.43380973, 0.45914945, 0.3247378, 0.61445725,
            0.8803759, 0.59195757, 0.9256995, 0.13930365, 0.58652496, 0.62281454, 0.30819193,
            0.6760192, 0.524579, 0.6927248, 0.37883574, 0.66010624, 0.5838787, 0.85065925,
            0.45852852, 0.70949817, 0.4483504, 0.06486581, 0.50569826, 0.7796499,
        ],
    )
    .unwrap();
    let conv_layer8 = ConvolutionLayer::new(kernel8, 1, Padding::Valid);
    let target_output8: Array3<f32> = array![
        [
            [
                2.5652893, 2.593598, 2.269992, 2.1639516, 2.8879197, 2.6195638, 2.2141945,
                1.9918326, 2.3976316, 2.8449924, 3.1994996, 2.852186, 3.599125
            ],
            [
                2.6255221, 2.4353273, 1.8960413, 2.8593454, 2.6528733, 2.4604704, 1.4929726,
                1.7085656, 2.0176957, 2.3167555, 3.1372766, 2.42942, 2.9184928
            ],
            [
                2.0894878, 2.595751, 1.9734343, 2.6108074, 2.2424753, 2.5461142, 1.9904475,
                1.8500521, 1.7675823, 1.7219938, 2.4023001, 2.6399298, 2.9563558
            ],
            [
                2.4003675, 2.8388479, 2.356664, 3.4636252, 2.6543925, 2.7614372, 1.6766466,
                1.5840546, 1.3345184, 1.904374, 2.9054348, 2.9378474, 2.592206
            ],
            [
                1.6823602, 2.2010663, 2.3177516, 2.6362622, 2.4741652, 2.9690115, 2.0466862,
                2.0724657, 1.9091661, 2.1131945, 2.6087167, 2.3225682, 2.5358448
            ],
            [
                1.2291609, 1.6968346, 2.4880466, 2.8578343, 2.7213295, 3.3560197, 2.2160995,
                2.7258098, 2.0896213, 2.2701588, 2.226427, 1.8509659, 2.8971512
            ],
            [
                1.2352775, 1.1128204, 1.6062825, 2.193419, 2.019561, 2.8008265, 2.109436,
                2.3962877, 1.9423162, 1.6469375, 2.3098924, 1.6163298, 1.9541847
            ],
            [
                1.7335093, 1.4373096, 2.30663, 2.441518, 2.383002, 2.7209196, 2.2015684, 2.330873,
                1.9295065, 2.4975789, 2.2079186, 2.358122, 2.9166412
            ]
        ],
        [
            [
                3.000422, 2.7962022, 2.1030576, 2.2601037, 2.9442468, 2.6167269, 2.3879366,
                2.1510065, 2.3859162, 2.6410034, 3.2113817, 3.0802956, 3.4538434
            ],
            [
                2.6491072, 2.4604032, 2.107302, 2.7037039, 2.8112175, 2.3824592, 1.6583278,
                1.6298766, 1.779379, 2.4462357, 3.0899096, 2.558346, 2.8840292
            ],
            [
                2.1800401, 2.7881649, 1.9553679, 2.2513146, 2.4979537, 2.7420201, 2.3035927,
                1.9305842, 1.7906365, 1.808788, 2.3543842, 2.9402535, 3.2384512
            ],
            [
                2.6525867, 2.8002605, 2.5194764, 3.502963, 2.7364492, 2.7427664, 1.7169267,
                1.401744, 1.4011286, 1.9777145, 2.883971, 2.8276844, 2.5341253
            ],
            [
                1.5469884, 2.1729026, 2.252663, 2.5361912, 2.3616607, 3.0087986, 2.2626712,
                2.162351, 1.8267344, 1.9549654, 2.2931497, 2.2971442, 2.5867662
            ],
            [
                1.217964, 1.814051, 2.5524895, 3.1257403, 3.089872, 3.2187345, 2.5671294,
                2.6729465, 2.0907035, 2.2458951, 2.292176, 2.4163039, 2.9088652
            ],
            [
                1.3626274, 0.9637935, 1.3869377, 2.0822866, 2.1394243, 2.5181231, 2.2862601,
                2.4000847, 1.7908938, 2.0197535, 2.42685, 1.4667199, 1.7627102
            ],
            [
                1.6147586, 1.6073363, 2.254222, 2.4927504, 2.4004269, 2.9321737, 2.407411,
                2.419474, 2.1488688, 2.3517373, 2.1071997, 2.4217012, 3.0064726
            ]
        ],
        [
            [
                2.7560532, 2.8370366, 2.056473, 2.4448738, 3.0827622, 2.7100987, 2.6544971,
                2.2558804, 1.9561068, 3.0079732, 3.4239957, 3.097587, 3.7519815
            ],
            [
                2.8970892, 2.9950757, 1.8862448, 2.710639, 2.5414228, 2.826373, 1.9043771,
                1.6828129, 1.9228466, 2.2353804, 3.0803833, 2.6656954, 2.8846767
            ],
            [
                2.5725067, 3.0238042, 2.1196272, 2.6055539, 2.3738484, 2.9192908, 2.044957,
                1.6834782, 1.6399299, 1.6779702, 2.201368, 2.8904853, 2.9531791
            ],
            [
                2.3735082, 2.9207258, 2.8187237, 3.418432, 3.1364355, 3.2467585, 1.9199426,
                1.9949752, 1.385826, 2.0804205, 2.8121655, 3.0857482, 3.1450033
            ],
            [
                1.5428678, 1.9410952, 2.4374726, 2.6314237, 2.8041978, 3.1476035, 2.537206,
                2.4637027, 1.9752816, 2.1686625, 2.474085, 2.3705482, 2.954259
            ],
            [
                1.4128782, 1.4063603, 2.2332115, 2.833625, 2.7331953, 3.2593858, 2.7684457,
                3.0598555, 1.9484459, 2.212303, 2.2570808, 1.9462814, 2.656826
            ],
            [
                1.1850818, 1.0794368, 1.6031708, 2.3451726, 2.3371549, 2.6582532, 2.2296932,
                2.5735724, 2.1859095, 2.1009545, 2.2416399, 1.8704338, 1.8597281
            ],
            [
                1.9041142, 1.4452597, 2.049583, 2.1391346, 2.943635, 2.6676967, 2.3118088,
                2.4468234, 1.817768, 2.7958527, 2.5423622, 2.782535, 3.0000677
            ]
        ]
    ];
    let current_output8: Array3<f32> = conv_layer8.convolve(&test_input8);

    assert!(
        arr_allclose(&current_output8, &target_output8),
        "{:?} was not equal to {:?}",
        current_output8,
        target_output8
    );

    let test_input9 = array![[
        [
            0.32748002, 0.44507304, 0.7488422, 0.14428215, 0.8785777, 0.15468395, 0.6638725,
            0.30651525, 0.9492515, 0.55669755, 0.08302987, 0.45890567, 0.05946975, 0.9099885,
            0.30235246
        ],
        [
            0.24214035, 0.42138377, 0.38782486, 0.21880285, 0.9182205, 0.85290706, 0.5070326,
            0.5272234, 0.71761, 0.560904, 0.22129431, 0.2624427, 0.6557088, 0.00633, 0.6603214
        ],
        [
            0.45500925, 0.6523986, 0.14666249, 0.32440838, 0.2805719, 0.42671442, 0.74477625,
            0.9118973, 0.5335283, 0.36968935, 0.5693756, 0.36426732, 0.11819325, 0.95361024,
            0.13343851
        ],
        [
            0.5940242, 0.7282295, 0.9320007, 0.46956548, 0.5087874, 0.7952918, 0.73709416,
            0.3358689, 0.03185032, 0.27057356, 0.26166973, 0.5843129, 0.5337139, 0.19571388,
            0.1192536
        ],
        [
            0.75616854, 0.97167397, 0.71154076, 0.26672947, 0.07128377, 0.3383284, 0.8008563,
            0.9504947, 0.5971434, 0.7847773, 0.92326206, 0.24163638, 0.12968542, 0.5954836,
            0.6734995
        ],
        [
            0.08627631, 0.7485715, 0.8782484, 0.6863155, 0.7264353, 0.08944888, 0.68172634,
            0.4284322, 0.48237634, 0.6856524, 0.04009921, 0.0687674, 0.9063645, 0.42620143,
            0.61030614
        ],
        [
            0.10040135, 0.50107217, 0.763057, 0.25769317, 0.8816114, 0.7770131, 0.23345616,
            0.62762326, 0.15315741, 0.73589575, 0.2752067, 0.85641515, 0.7439484, 0.6581306,
            0.4056261
        ],
        [
            0.13899311, 0.26460668, 0.9179794, 0.96651816, 0.89336777, 0.18948041, 0.9371178,
            0.7124811, 0.9657549, 0.6203675, 0.32684848, 0.11439406, 0.07654371, 0.95680344,
            0.9728639
        ],
        [
            0.6055871, 0.00439729, 0.8525613, 0.3167563, 0.13499211, 0.68338645, 0.7955047,
            0.21689218, 0.2826704, 0.12328367, 0.6890043, 0.5906649, 0.41700745, 0.30266365,
            0.5716598
        ],
        [
            0.12726787, 0.35587692, 0.16889893, 0.3114892, 0.1309899, 0.24026695, 0.55435276,
            0.34375766, 0.4225387, 0.37165096, 0.6202945, 0.6069533, 0.05756181, 0.0153275,
            0.8497578
        ]
    ]];

    let kernel9: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.79796964, 0.7156292, 0.56803024, 0.04944435, 0.8941644, 0.56024176, 0.679002,
            0.6412177, 0.36936092, 0.4071996, 0.09058711, 0.8756273, 0.59729165, 0.30899736,
            0.5868575, 0.6126854, 0.26750943, 0.37185487, 0.19325097, 0.33372015, 0.5771133,
            0.39304134, 0.3348802, 0.75167763, 0.67232877, 0.03709449, 0.35425207,
        ],
    )
    .unwrap();
    let conv_layer9 = ConvolutionLayer::new(kernel9, 1, Padding::Valid);
    let target_output9: Array3<f32> = array![
        [
            [
                2.2686713, 1.851355, 2.631895, 2.2871985, 3.577888, 2.7626436, 3.6148677, 3.001582,
                2.7188385, 2.1910155, 1.5139657, 2.3905573, 1.8467375
            ],
            [
                2.5700545, 2.4192681, 2.4991035, 2.401296, 3.1858776, 3.6084538, 3.2270248,
                2.5123057, 2.094418, 2.1600904, 2.1168802, 1.9271821, 2.4515986
            ],
            [
                3.4055126, 3.4528122, 2.3165998, 2.179822, 2.8243957, 3.432022, 3.057874, 2.61172,
                2.3830206, 2.4250476, 2.312282, 2.3947563, 1.5215238
            ],
            [
                3.8018548, 3.6193883, 3.057492, 2.2412875, 2.5274186, 3.0577955, 3.2377632,
                2.9375303, 2.6104798, 2.6050327, 1.9561005, 2.0005274, 2.5527062
            ],
            [
                3.048413, 3.5600357, 3.240803, 2.5714397, 2.6766956, 2.7072456, 2.812579,
                3.2125568, 2.727131, 2.2950928, 2.4190125, 2.8828526, 2.95241
            ],
            [
                2.2776294, 3.3344784, 3.9626908, 3.2347658, 3.4821196, 2.4590416, 3.0073736,
                3.0641553, 2.406993, 2.4954174, 2.3685966, 2.5504415, 3.4785445
            ],
            [
                2.2090619, 2.8396125, 4.0258574, 2.8967714, 3.063448, 3.4020946, 2.9260707,
                3.1063797, 2.285006, 2.6661046, 2.0286813, 2.6118076, 3.0533304
            ],
            [
                2.065344, 2.2932162, 2.6856477, 2.068733, 2.9900799, 2.5947702, 3.046792, 2.093802,
                2.454914, 2.4547312, 2.320708, 2.1170604, 2.0597281
            ]
        ],
        [
            [
                1.9497017, 1.7114118, 1.7009078, 1.8173927, 2.1122994, 2.1720953, 2.821504,
                2.7014775, 1.9632912, 1.5401477, 1.3771799, 1.7509328, 1.7037349
            ],
            [
                2.1640239, 2.0877082, 2.3206227, 2.3958223, 2.7368124, 2.7397444, 2.3073742,
                1.7467272, 1.361675, 1.4360055, 1.6148603, 1.7246448, 1.642956
            ],
            [
                2.6899064, 2.399166, 1.5971007, 1.3748206, 1.8732184, 2.6866484, 2.8350074,
                2.503688, 2.2701507, 2.2943263, 1.8673309, 1.5825149, 1.5536557
            ],
            [
                2.6483943, 2.9462306, 2.5795648, 2.1795924, 2.4011261, 2.1399765, 2.0740004,
                1.7153159, 1.718144, 1.6949668, 1.388053, 1.6484913, 2.053912
            ],
            [
                2.4640152, 2.4892497, 2.125899, 1.701004, 2.3123643, 2.5825946, 2.2125704,
                2.5089054, 2.212167, 2.2363021, 1.8872912, 2.3722262, 2.3866758
            ],
            [
                2.0067348, 2.729817, 3.3004377, 2.7128313, 2.3912513, 1.9973354, 2.6829069,
                2.60502, 2.2766593, 1.5036433, 1.4830859, 1.8148866, 2.3671203
            ],
            [
                1.9974837, 2.0058343, 2.608192, 2.1325686, 2.1713603, 2.4835954, 2.0561316,
                1.7284791, 1.6132107, 1.9084818, 2.2698452, 2.3607547, 2.2627244
            ],
            [
                1.4444573, 2.1233575, 2.0890684, 1.7354425, 1.9491501, 2.1026895, 2.4578218,
                2.074195, 2.0308185, 1.8151525, 1.5255452, 1.5127909, 1.8583252
            ]
        ],
        [
            [
                1.7829332, 1.3576304, 1.4567596, 1.4386338, 2.0342941, 2.1000214, 2.5636358,
                2.301951, 1.6810936, 1.4901613, 1.0667342, 1.6681557, 1.6501626
            ],
            [
                2.0692987, 1.9470177, 2.0173528, 2.1298351, 2.2702734, 2.2762308, 2.0505242,
                1.5713756, 1.1453537, 1.2592155, 1.6824477, 1.316939, 1.4342688
            ],
            [
                2.3384807, 2.164487, 1.4680206, 1.1438172, 1.7652917, 2.6469421, 2.6088786,
                2.042677, 2.0037475, 1.9722378, 1.3958671, 1.5868611, 1.4964826
            ],
            [
                2.555365, 2.7304897, 2.3162413, 1.9246652, 1.8012468, 1.8014033, 1.7899419,
                1.6583607, 1.5927434, 1.5782293, 1.4288136, 1.4723951, 1.5875628
            ],
            [
                2.023382, 2.1701882, 1.7865224, 1.8693196, 2.158416, 2.139482, 1.9794568,
                2.0139904, 2.1756997, 1.8567423, 1.4967363, 2.1269133, 2.2475004
            ],
            [
                1.7352844, 2.568713, 2.874288, 2.1847827, 2.1869419, 2.0002062, 2.3367202,
                2.3782952, 1.8368797, 1.2082422, 1.3521193, 1.6779293, 2.3447301
            ],
            [
                1.5532376, 1.7571709, 2.2825778, 2.07383, 1.9024811, 2.1365592, 1.7041905,
                1.6417655, 1.5459133, 1.9452024, 2.029541, 1.7612414, 1.7278796
            ],
            [
                1.384026, 1.8031652, 1.9315352, 1.20491, 1.63316, 2.0636017, 2.187037, 1.7536334,
                1.5543442, 1.5148093, 1.4373981, 1.4424481, 1.6524346
            ]
        ]
    ];
    let current_output9: Array3<f32> = conv_layer9.convolve(&test_input9);

    assert!(
        arr_allclose(&current_output9, &target_output9),
        "{:?} was not equal to {:?}",
        current_output9,
        target_output9
    );

    let test_input10 = array![[
        [
            0.24336162, 0.01027582, 0.2671537, 0.83992416, 0.49819484, 0.7831867, 0.70054483,
            0.8701863, 0.49413827, 0.84670645, 0.8069649, 0.093459, 0.93408287, 0.8206956,
            0.70209366
        ],
        [
            0.32817394, 0.744203, 0.39091238, 0.43911496, 0.92919487, 0.29325068, 0.62813336,
            0.8131431, 0.19520658, 0.47931832, 0.42483747, 0.47526902, 0.28184402, 0.09741595,
            0.45691565
        ],
        [
            0.44086096, 0.9638409, 0.33859608, 0.26381832, 0.29839757, 0.68755937, 0.09156765,
            0.58584654, 0.04617033, 0.14705709, 0.81179595, 0.16751295, 0.06864621, 0.6308731,
            0.38993102
        ],
        [
            0.3644169, 0.68174505, 0.272409, 0.23609333, 0.21866773, 0.80119157, 0.01742986,
            0.49270406, 0.37920174, 0.90869635, 0.8191268, 0.7636344, 0.7827788, 0.9694966,
            0.79533535
        ],
        [
            0.00732174, 0.8372113, 0.9449071, 0.7670253, 0.50964797, 0.7843069, 0.7365313,
            0.71123123, 0.89694643, 0.9544987, 0.16811895, 0.97018677, 0.25394833, 0.5585159,
            0.51973414
        ],
        [
            0.4357872, 0.29419306, 0.5180376, 0.80581653, 0.7190028, 0.52249014, 0.5252596,
            0.33191478, 0.3388958, 0.18619475, 0.6839338, 0.72234726, 0.25884646, 0.7980101,
            0.36219832
        ],
        [
            0.7046317, 0.9284394, 0.468965, 0.23158234, 0.32747796, 0.9097073, 0.7440483,
            0.03255624, 0.30697423, 0.6246821, 0.1907446, 0.9843364, 0.4038572, 0.5747709,
            0.65160054
        ],
        [
            0.6822517, 0.9840877, 0.18341686, 0.5288406, 0.92906404, 0.87780553, 0.9090181,
            0.82569945, 0.20383635, 0.7166643, 0.17061436, 0.91526777, 0.08598401, 0.70100874,
            0.40537685
        ],
        [
            0.5971982, 0.92796123, 0.15859716, 0.7859081, 0.8564488, 0.35816404, 0.79062706,
            0.9644883, 0.13154314, 0.31929043, 0.80048305, 0.07180241, 0.52815664, 0.45786336,
            0.91537887
        ],
        [
            0.9783313, 0.25753945, 0.42799363, 0.07738555, 0.9294206, 0.07022415, 0.60058224,
            0.6196278, 0.9008346, 0.04155485, 0.82207745, 0.41282526, 0.9949608, 0.3109271,
            0.47614527
        ]
    ]];

    let kernel10: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.7615821, 0.8354833, 0.17608605, 0.3746991, 0.7731474, 0.07713356, 0.7184675,
            0.51991457, 0.34880427, 0.4922565, 0.62511915, 0.06056971, 0.5045173, 0.41293454,
            0.97382414, 0.21521498, 0.00944792, 0.27621788, 0.12076204, 0.1754263, 0.1842307,
            0.35231608, 0.39297876, 0.88948244, 0.81067127, 0.35893062, 0.2630701, 0.18067755,
            0.8194284, 0.65954226, 0.6123928, 0.06132602, 0.19053963, 0.79505837, 0.5211581,
            0.88098776, 0.71349823, 0.7456122, 0.890512, 0.9779564, 0.89468116, 0.07349233,
            0.48649722, 0.20799449, 0.4551989, 0.10784956, 0.8533961, 0.54849166, 0.24437675,
            0.7095975,
        ],
    )
    .unwrap();
    let conv_layer10 = ConvolutionLayer::new(kernel10, 1, Padding::Valid);
    let target_output10: Array3<f32> = array![
        [
            [
                5.3249674, 6.4493947, 5.0990486, 6.8768077, 6.0084085, 6.864355, 6.4891825,
                7.1397376, 5.631561, 6.849801, 6.074421
            ],
            [
                5.654903, 6.727125, 5.7264667, 5.6736236, 6.16345, 5.4968843, 5.3014703, 6.146997,
                4.7333603, 6.5018187, 5.7102118
            ],
            [
                5.930273, 6.798935, 5.2427835, 5.1469035, 5.478009, 5.8563046, 4.5332093, 5.924593,
                5.0342555, 6.607768, 6.160165
            ],
            [
                5.5765815, 7.4165735, 6.761159, 6.404252, 6.0298505, 7.193672, 4.8737774,
                7.2150807, 5.322823, 7.2736115, 5.90623
            ],
            [
                6.2936263, 6.819446, 7.1577253, 7.66248, 6.5883956, 6.8004456, 5.773947, 5.9666286,
                4.6424093, 6.0359955, 5.837609
            ],
            [
                7.158154, 5.4607286, 6.546793, 6.154811, 6.7003784, 5.9076304, 6.255374, 4.471031,
                5.918911, 4.9145923, 6.665976
            ]
        ],
        [
            [
                6.439894, 7.0567226, 7.071984, 7.7053266, 7.0601635, 7.9033585, 6.9160786,
                8.315123, 6.9992995, 7.7388096, 7.32876
            ],
            [
                6.356903, 8.092633, 6.917779, 7.6309977, 6.4523067, 6.875133, 7.0659995, 7.205181,
                6.927346, 7.506052, 6.3446465
            ],
            [
                6.509722, 7.2980814, 6.60414, 7.1285515, 6.5201077, 6.875048, 5.6461253, 6.8542867,
                6.2212105, 7.5579376, 6.970613
            ],
            [
                7.452875, 7.7607803, 7.4055076, 7.6707935, 7.7757616, 7.562004, 6.2728825,
                7.9666553, 6.358302, 8.778362, 7.0727396
            ],
            [
                8.050181, 8.304543, 8.326708, 8.830941, 8.473575, 7.950029, 7.777691, 7.1392937,
                6.3732166, 7.2794046, 6.49956
            ],
            [
                7.313159, 7.4050517, 8.137143, 7.6915107, 7.919465, 6.719632, 6.4680667, 6.7642837,
                6.5097504, 6.8258514, 7.210702
            ]
        ]
    ];
    let current_output10: Array3<f32> = conv_layer10.convolve(&test_input10);

    assert!(
        arr_allclose(&current_output10, &target_output10),
        "{:?} was not equal to {:?}",
        current_output10,
        target_output10
    );

    let test_input11 = array![[
        [
            0.5087082, 0.78796804, 0.03310984, 0.20805901, 0.45704818, 0.9133983, 0.5689028,
            0.04247752, 0.55938286, 0.9835293, 0.04525762, 0.7176199, 0.82096803, 0.5575717,
            0.5744108
        ],
        [
            0.9780689, 0.34563604, 0.3324931, 0.8797563, 0.14932355, 0.1134909, 0.5645703,
            0.30096474, 0.4096875, 0.5703153, 0.88738924, 0.6242374, 0.77620894, 0.681929,
            0.24701218
        ],
        [
            0.74485576, 0.61556435, 0.63869125, 0.05875124, 0.3210932, 0.96946657, 0.09463912,
            0.6275637, 0.34162354, 0.74390864, 0.8736778, 0.9513908, 0.24045336, 0.7003475,
            0.87750345
        ],
        [
            0.16564246, 0.6314963, 0.21785556, 0.7654987, 0.13988015, 0.03287261, 0.82226163,
            0.60896695, 0.13331373, 0.62307173, 0.23316076, 0.9600204, 0.55291533, 0.29808274,
            0.8765127
        ],
        [
            0.98263544, 0.27148733, 0.11101003, 0.2754741, 0.4540411, 0.19701396, 0.08459944,
            0.98017716, 0.9800813, 0.62585706, 0.18621969, 0.5836321, 0.17965508, 0.81336415,
            0.94554824
        ],
        [
            0.28304926, 0.32718146, 0.46701643, 0.91682273, 0.6142979, 0.19277428, 0.28408903,
            0.25507236, 0.9800453, 0.36125833, 0.96792, 0.33258557, 0.9508625, 0.8424581,
            0.8130291
        ],
        [
            0.7774976, 0.17691322, 0.9389267, 0.22419459, 0.33442205, 0.7614585, 0.37563834,
            0.70754576, 0.1499497, 0.9873837, 0.7166968, 0.40278858, 0.22288306, 0.3279577,
            0.07722609
        ],
        [
            0.598755, 0.8143903, 0.87905455, 0.83061284, 0.9923988, 0.6196494, 0.536406,
            0.06662867, 0.83588266, 0.28182983, 0.662181, 0.99850965, 0.60448396, 0.12318801,
            0.91713256
        ],
        [
            0.8540598, 0.19103892, 0.5929614, 0.9118344, 0.9381113, 0.3421722, 0.8149188,
            0.9595595, 0.02717085, 0.8916309, 0.9755575, 0.27588442, 0.59208006, 0.00008138,
            0.9552037
        ],
        [
            0.12578069, 0.01249961, 0.05413999, 0.5153533, 0.40144867, 0.8698811, 0.6468678,
            0.8840439, 0.34315115, 0.52290094, 0.66408885, 0.98115784, 0.85046166, 0.7979905,
            0.9444794
        ]
    ]];

    let kernel11: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.6930413, 0.41451567, 0.28908366, 0.11111139, 0.03633394, 0.91156703, 0.00536506,
            0.3468706, 0.9307082, 0.28782296, 0.9045769, 0.47926104, 0.93169004, 0.10532705,
            0.60003114, 0.43418503, 0.02230139, 0.5576108, 0.20754221, 0.85578996, 0.42869946,
            0.48593593, 0.69407916, 0.3472928, 0.39191914, 0.90735817, 0.6224708, 0.4153976,
            0.19382912, 0.7482733, 0.45996496, 0.33826837, 0.2242362, 0.9188555, 0.7382309,
            0.17170428, 0.0032256, 0.3198661, 0.88550454, 0.3259743, 0.69308424, 0.35960108,
            0.17364207, 0.97926295, 0.14142898, 0.9244341, 0.86064774, 0.88076496, 0.71126235,
            0.05517358,
        ],
    )
    .unwrap();
    let conv_layer11 = ConvolutionLayer::new(kernel11, 1, Padding::Valid);
    let target_output11: Array3<f32> = array![
        [
            [
                4.7560997, 4.352716, 4.4692454, 5.0672483, 5.2177787, 6.7205544, 6.2102146,
                6.3407626, 6.75407, 6.3858933, 7.2942147
            ],
            [
                5.5074615, 4.9119167, 4.305783, 4.7028074, 4.274814, 5.5758004, 5.973886, 7.2454,
                6.575859, 7.4428215, 7.723856
            ],
            [
                4.7844186, 4.787297, 4.735878, 5.318269, 5.438516, 6.1063137, 6.1517015, 7.672717,
                5.903899, 7.1770873, 6.264461
            ],
            [
                5.9326315, 6.465777, 5.226427, 4.901095, 5.157009, 5.6406374, 6.398307, 6.121013,
                7.0525284, 7.029883, 6.7131443
            ],
            [
                6.5469956, 5.884679, 5.5911736, 6.2343464, 6.0006504, 6.0157137, 6.7648306,
                7.6128707, 6.6762633, 5.4707446, 5.9009066
            ],
            [
                6.434783, 6.6845546, 7.6119566, 6.9904566, 5.680885, 5.892251, 6.765052, 6.4944615,
                7.829957, 7.6405215, 7.4347486
            ]
        ],
        [
            [
                6.2031364, 5.347018, 4.9813066, 5.241573, 5.046023, 7.2120132, 6.7847924, 7.331433,
                8.0192585, 7.9168434, 7.329283
            ],
            [
                5.2589993, 4.9538093, 5.4171815, 5.999079, 5.257032, 6.575285, 7.4177823, 8.190915,
                6.9204693, 7.466747, 8.757059
            ],
            [
                6.2439857, 6.0381193, 5.8706923, 5.64167, 5.769887, 6.8702707, 6.9715056, 8.58892,
                7.191048, 8.44857, 8.836583
            ],
            [
                6.4824057, 5.950862, 5.952532, 7.483153, 6.9978848, 5.923773, 7.004932, 7.2302756,
                7.8518085, 6.871521, 7.4084744
            ],
            [
                8.105525, 6.8205214, 6.763825, 7.507084, 7.424855, 6.9610825, 6.855678, 7.935671,
                7.7155848, 8.065645, 7.744569
            ],
            [
                6.9792676, 6.8697414, 7.4632564, 7.425048, 7.5728393, 7.481613, 8.2612095,
                7.5063677, 7.8501244, 7.546139, 8.128764
            ]
        ]
    ];
    let current_output11: Array3<f32> = conv_layer11.convolve(&test_input11);

    assert!(
        arr_allclose(&current_output11, &target_output11),
        "{:?} was not equal to {:?}",
        current_output11,
        target_output11
    );

    let test_input12 = array![[
        [
            0.6050927, 0.968827, 0.47373444, 0.76571184, 0.50472075, 0.53850234, 0.05837096,
            0.56728834, 0.3979838, 0.2393961, 0.36507484, 0.01646563, 0.27730468, 0.62646276,
            0.94121945
        ],
        [
            0.66457146, 0.8425775, 0.4301739, 0.68211764, 0.6059688, 0.7629583, 0.56038123,
            0.48163053, 0.437191, 0.43973154, 0.29997745, 0.21913478, 0.6611514, 0.209788,
            0.176356
        ],
        [
            0.88925517, 0.14793599, 0.36509594, 0.5616029, 0.6617385, 0.30053073, 0.36820948,
            0.62227124, 0.4957459, 0.69923055, 0.3227648, 0.9702412, 0.5679234, 0.13432135,
            0.7430913
        ],
        [
            0.19231908, 0.26170298, 0.10480803, 0.00958306, 0.20726651, 0.20851518, 0.17973869,
            0.23704103, 0.1163867, 0.2735905, 0.8537909, 0.40303, 0.75797635, 0.34342998,
            0.74670875
        ],
        [
            0.82946825, 0.91931367, 0.9654975, 0.18782942, 0.10021565, 0.05109123, 0.3069365,
            0.10895161, 0.9891213, 0.62504834, 0.507994, 0.47125, 0.84314245, 0.6054993,
            0.92367506
        ],
        [
            0.6953895, 0.37023902, 0.67128026, 0.43450755, 0.28869846, 0.27641538, 0.8369712,
            0.6856483, 0.26890948, 0.65425915, 0.84581685, 0.51146317, 0.48995435, 0.52071315,
            0.80564773
        ],
        [
            0.670521, 0.3835857, 0.47078377, 0.5100531, 0.82525116, 0.02126783, 0.9583153,
            0.23316967, 0.9487504, 0.9609589, 0.95734006, 0.00943314, 0.7521432, 0.46106157,
            0.84370506
        ],
        [
            0.16933449, 0.71423984, 0.5316646, 0.6400151, 0.9638914, 0.69432026, 0.8581641,
            0.70813745, 0.2836983, 0.33953485, 0.8950543, 0.20262088, 0.81930757, 0.09556881,
            0.22266188
        ],
        [
            0.63842744, 0.8304186, 0.12425002, 0.7582065, 0.09737789, 0.84872884, 0.17490041,
            0.37569723, 0.6669188, 0.8970669, 0.22398192, 0.29424527, 0.56277037, 0.41113177,
            0.7882464
        ],
        [
            0.24159203, 0.5460915, 0.29690132, 0.3142075, 0.7648111, 0.04421633, 0.9636684,
            0.98529965, 0.26998708, 0.13811645, 0.9724998, 0.41856614, 0.13321315, 0.0937838,
            0.4742414
        ]
    ]];

    let kernel12: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.79873264, 0.98567015, 0.5680892, 0.44598028, 0.37360683, 0.5493846, 0.54690886,
            0.4854058, 0.8930679, 0.554433, 0.05176858, 0.6496963, 0.12335967, 0.21437034,
            0.6817857, 0.955536, 0.2400014, 0.25711668, 0.64894366, 0.28551313, 0.05664136,
            0.01756373, 0.18204254, 0.7790032, 0.70093375, 0.1621314, 0.01680515, 0.19350345,
            0.3229758, 0.26240814, 0.6481355, 0.8593988, 0.7869872, 0.24216229, 0.90017563,
            0.17029643, 0.8382851, 0.14544043, 0.38366762, 0.95833224, 0.089831, 0.36792266,
            0.05608724, 0.8650639, 0.85106283, 0.9231865, 0.6596718, 0.9562488, 0.3529938,
            0.4791875,
        ],
    )
    .unwrap();
    let conv_layer12 = ConvolutionLayer::new(kernel12, 1, Padding::Valid);
    let target_output12: Array3<f32> = array![
        [
            [
                6.3682895, 5.390239, 4.5706854, 4.3922887, 5.14711, 4.6274986, 5.193279, 5.676248,
                5.5632133, 5.671304, 6.3135996
            ],
            [
                6.179564, 5.2335844, 5.108303, 4.609835, 5.167667, 5.7518845, 5.731545, 6.1117806,
                6.3227873, 7.1020117, 6.453741
            ],
            [
                5.6941624, 4.6842484, 5.239679, 4.468527, 5.071641, 5.3825803, 6.6198606, 5.873273,
                7.5567913, 6.824095, 7.089079
            ],
            [
                6.5365343, 5.7852597, 5.910706, 5.18815, 4.732893, 5.5943494, 6.7563047, 6.038878,
                6.900839, 7.1263385, 6.5923476
            ],
            [
                6.804613, 6.8027225, 5.942925, 6.1004944, 5.3783317, 6.53807, 6.859792, 6.366803,
                6.993489, 7.2074075, 6.1150503
            ],
            [
                6.229225, 5.46133, 6.4039035, 6.3777947, 6.8807144, 6.1276836, 7.909234, 6.5313497,
                6.69959, 6.385899, 6.2706203
            ]
        ],
        [
            [
                6.5194254, 5.307649, 4.5594726, 4.930837, 4.7531447, 4.896979, 5.5339513, 6.270887,
                6.1452217, 5.7100506, 7.158428
            ],
            [
                5.622259, 5.0681534, 4.8680015, 5.024506, 5.068995, 6.2196903, 6.5723615, 6.191803,
                7.2690516, 6.649059, 7.0984244
            ],
            [
                5.402159, 4.550914, 4.7456374, 5.105078, 5.408389, 5.962051, 6.737463, 7.8541117,
                7.9760523, 6.664059, 7.6970863
            ],
            [
                6.4095106, 5.927367, 5.6461515, 5.8321066, 5.6292367, 6.5643377, 7.8461747, 6.5895,
                6.956896, 7.1865883, 7.325586
            ],
            [
                6.6164927, 5.91428, 6.608584, 5.6353116, 6.752289, 7.291917, 6.9788084, 6.843524,
                7.7577753, 6.8013916, 6.56509
            ],
            [
                6.4886513, 5.7309904, 7.2716336, 6.9470954, 6.3906746, 8.06137, 8.342499,
                6.1687655, 7.019992, 6.1906133, 5.453731
            ]
        ]
    ];
    let current_output12: Array3<f32> = conv_layer12.convolve(&test_input12);

    assert!(
        arr_allclose(&current_output12, &target_output12),
        "{:?} was not equal to {:?}",
        current_output12,
        target_output12
    );

    let test_input13 = array![[
        [
            0.5805011, 0.9803199, 0.97033703, 0.48236644, 0.66855663, 0.35855147, 0.25242767,
            0.6717967, 0.26290378, 0.53677225
        ],
        [
            0.18097793, 0.07985484, 0.79416144, 0.7215235, 0.42313012, 0.6529702, 0.00384528,
            0.08442257, 0.7838985, 0.980683
        ],
        [
            0.36212954, 0.61172485, 0.5263662, 0.8496614, 0.13177402, 0.9175598, 0.04323238,
            0.03087392, 0.03482862, 0.36226457
        ],
        [
            0.6059544, 0.29194582, 0.34645593, 0.9409913, 0.60953087, 0.8610255, 0.1627552,
            0.8939359, 0.66327935, 0.48094535
        ],
        [
            0.06551108, 0.86129206, 0.65446067, 0.9592776, 0.8000413, 0.21450381, 0.6442533,
            0.46971878, 0.84573215, 0.34651902
        ],
        [
            0.18830031, 0.57119006, 0.27269888, 0.7915957, 0.21737069, 0.04463017, 0.393406,
            0.8441482, 0.77705365, 0.6315176
        ],
        [
            0.8522896, 0.16809769, 0.22305161, 0.773223, 0.9678148, 0.2237789, 0.8982615, 0.271913,
            0.34780893, 0.49277794
        ],
        [
            0.14560463, 0.33638617, 0.1585067, 0.18610527, 0.6963084, 0.9429821, 0.40789625,
            0.20056698, 0.37306353, 0.9367061
        ],
        [
            0.7103306, 0.06833509, 0.48335183, 0.45182207, 0.96346164, 0.00378525, 0.33689302,
            0.28288215, 0.75004077, 0.1607512
        ],
        [
            0.514175, 0.35879079, 0.36688787, 0.00774159, 0.15532039, 0.01133456, 0.94680935,
            0.052598, 0.73530346, 0.8096563
        ],
        [
            0.7097644, 0.37942106, 0.38656324, 0.13763146, 0.99930644, 0.67476803, 0.06055127,
            0.8463604, 0.4460729, 0.33209085
        ],
        [
            0.94373864, 0.5397614, 0.05766413, 0.64256257, 0.7357459, 0.09256811, 0.8832945,
            0.03911254, 0.782554, 0.4004812
        ],
        [
            0.80732703, 0.8010379, 0.28867772, 0.7802926, 0.9490529, 0.5395702, 0.1369102,
            0.4513485, 0.1162144, 0.9589836
        ],
        [
            0.24819064, 0.3149064, 0.22322156, 0.39812055, 0.45308354, 0.5711523, 0.97817534,
            0.06805564, 0.5386646, 0.6699801
        ],
        [
            0.1879456, 0.8407316, 0.64728755, 0.53731096, 0.63207716, 0.00916763, 0.46754488,
            0.8670982, 0.1932068, 0.43971533
        ]
    ]];

    let kernel13: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.10441232, 0.08035298, 0.98297566, 0.7679019, 0.27582648, 0.01153891, 0.8551502,
            0.7745094, 0.55476546, 0.46486124, 0.05671094, 0.5085966, 0.23872072, 0.33816597,
            0.669607, 0.19610135, 0.14011143, 0.528783, 0.22910197, 0.9091975, 0.22395916,
            0.03931138, 0.42012835, 0.12918296, 0.8555064, 0.47505257, 0.5067741,
        ],
    )
    .unwrap();
    let conv_layer13 = ConvolutionLayer::new(kernel13, 1, Padding::Valid);
    let target_output13: Array3<f32> = array![
        [
            [
                2.9498715, 3.123018, 2.2343013, 2.8965323, 0.942188, 1.8442442, 1.4599587,
                1.9453228
            ],
            [2.156057, 2.9006, 2.0670962, 3.1835966, 1.5454252, 1.5970603, 1.3128095, 2.8952506],
            [1.792634, 3.4288394, 2.677802, 2.956342, 2.3141572, 1.4407142, 1.9392593, 1.630754],
            [1.6764133, 3.0976727, 2.6146054, 2.5718925, 1.9188707, 2.054785, 2.93454, 2.7424405],
            [
                2.575239, 2.7437973, 2.662818, 1.9514484, 2.5859036, 2.0658813, 3.0965383,
                2.3107612
            ],
            [
                1.2140241, 2.0556107, 2.347249, 1.5042412, 2.1502137, 2.547878, 2.3805864,
                2.4454372
            ],
            [
                1.6032367, 1.3883497, 3.0628743, 2.4099958, 2.8070095, 1.453831, 1.7275779,
                1.9372779
            ],
            [
                1.5724461, 1.1659518, 2.1114798, 1.6811948, 2.1630855, 0.94676757, 2.5408595,
                1.9719136
            ],
            [
                1.8809291, 1.3544761, 2.3091915, 1.3636563, 2.1641893, 1.9373171, 1.8706378,
                2.5984209
            ],
            [
                2.0699198, 1.4572344, 1.4923341, 1.6305469, 2.3622088, 1.6225374, 2.6546876,
                1.9804139
            ],
            [
                1.9283844, 2.234713, 2.5715864, 2.7623274, 2.458123, 1.9044408, 1.9298215,
                2.2210832
            ],
            [
                1.4431701, 1.931445, 2.5774612, 2.1670332, 2.2289972, 1.7625599, 2.2781072,
                2.2033386
            ],
            [1.7795057, 2.4997733, 2.9127011, 2.4115338, 2.46286, 1.411295, 1.5516139, 2.7278998]
        ],
        [
            [
                1.7148248, 2.2689917, 1.9519726, 1.735201, 1.395513, 0.92077816, 0.52894944,
                1.1181781
            ],
            [1.2469552, 1.577986, 2.0886443, 2.1278005, 1.6497624, 1.4115899, 1.22553, 1.6360819],
            [
                1.5553389, 2.2257323, 2.2948651, 2.1235178, 1.5285174, 1.4609032, 1.5281597,
                1.4245262
            ],
            [
                1.4284313, 1.6992056, 1.7625166, 1.6785444, 1.0774497, 1.642752, 1.9092307,
                2.3129833
            ],
            [
                1.2704233, 1.6239702, 2.1466968, 1.9632792, 1.7490509, 1.4585444, 1.816959,
                1.519091
            ],
            [
                0.7969124, 1.0547862, 1.3415226, 1.8906497, 1.6465217, 1.493534, 1.2674265,
                1.7509613
            ],
            [
                1.2869036, 0.97909963, 1.7053828, 1.8894441, 1.7656854, 0.9683924, 1.451283,
                1.3059484
            ],
            [
                1.0059475, 0.89358526, 0.84376454, 0.9035545, 1.3191484, 1.3964038, 1.4360888,
                1.605435
            ],
            [
                1.4626544, 0.90585124, 1.3838537, 1.5912737, 1.6522366, 1.2971189, 1.3791288,
                1.6119078
            ],
            [
                1.4912407, 1.0803227, 1.2599796, 1.3515931, 1.4571712, 1.0781565, 1.8382612,
                1.3597957
            ],
            [
                1.8400841, 1.4491006, 1.9033214, 2.050734, 1.7506629, 1.4082958, 0.9239414,
                1.7024802
            ],
            [
                1.3911111, 1.1632141, 1.3573893, 1.7411678, 1.9229285, 1.3831649, 1.577988,
                1.2323699
            ],
            [
                1.775794, 1.8885695, 1.7405767, 1.6522825, 1.5275662, 1.5209711, 1.2687119,
                1.5083945
            ]
        ],
        [
            [
                2.0038989, 2.0600066, 2.3338404, 2.2598157, 1.2140372, 1.528921, 0.7518351,
                1.690428
            ],
            [
                1.9093119, 2.4347465, 1.9784824, 2.7301476, 0.98195785, 1.7559283, 1.2317177,
                1.633556
            ],
            [
                1.8530935, 2.5093195, 1.9425546, 2.932374, 1.629866, 1.8835219, 1.5131127,
                2.0283222
            ],
            [
                1.4331727, 2.96359, 2.2894304, 2.5143337, 1.6901155, 2.1458745, 2.4156792,
                2.1988003
            ],
            [
                1.4751143, 2.5119731, 2.1961658, 1.6785755, 1.8470333, 1.3871464, 2.3836308,
                2.1868289
            ],
            [
                1.4067653, 1.6227884, 1.6793821, 2.0535183, 2.273261, 1.8234067, 2.190573,
                1.9594635
            ],
            [
                1.1545621, 1.4763384, 2.1174312, 1.5439196, 2.609015, 1.630935, 1.6384776,
                1.5233287
            ],
            [
                1.4337766, 0.85402465, 1.8881873, 1.721651, 2.0992308, 0.8345296, 1.7934247,
                2.0277297
            ],
            [
                1.7753241, 1.1098832, 1.9741342, 0.72417647, 1.4465152, 1.2770483, 2.311165,
                1.388661
            ],
            [
                1.744447, 1.1299704, 1.5700245, 1.1689625, 2.6912186, 1.2804768, 2.0700343,
                2.1611054
            ],
            [
                2.0510218, 1.6522182, 2.2671986, 2.156178, 1.7863461, 1.7221379, 1.7679012,
                1.6522127
            ],
            [1.7038467, 2.1970267, 2.0400784, 2.056955, 2.753438, 1.1406693, 1.743537, 1.7214524],
            [
                1.4061421, 1.9758383, 2.0288823, 1.7079669, 1.8520366, 1.9795847, 1.6370097,
                1.97684
            ]
        ]
    ];
    let current_output13: Array3<f32> = conv_layer13.convolve(&test_input13);

    assert!(
        arr_allclose(&current_output13, &target_output13),
        "{:?} was not equal to {:?}",
        current_output13,
        target_output13
    );

    let test_input14 = array![[
        [
            0.14234911, 0.5152856, 0.6446142, 0.9118427, 0.8193508, 0.989135, 0.7842302,
            0.59264964, 0.35247177, 0.48483032
        ],
        [
            0.22649786, 0.04158387, 0.5814206, 0.8653732, 0.4524277, 0.44947338, 0.5519129,
            0.79122764, 0.7513198, 0.9315116
        ],
        [
            0.03313805, 0.41213843, 0.45310238, 0.01799934, 0.4328227, 0.23842481, 0.20688592,
            0.57869387, 0.9324833, 0.43915927
        ],
        [
            0.53123087, 0.5324186, 0.4149537, 0.22217223, 0.0080786, 0.65063345, 0.7681623,
            0.8421627, 0.27179125, 0.68530315
        ],
        [
            0.9955617, 0.77906156, 0.18006648, 0.5975193, 0.6555531, 0.9498266, 0.9690994,
            0.5122471, 0.3840358, 0.8757204
        ],
        [
            0.7260429, 0.04691354, 0.40678895, 0.35535267, 0.19270384, 0.23519029, 0.6665529,
            0.26402712, 0.55168146, 0.08576613
        ],
        [
            0.9567203, 0.57141143, 0.20602623, 0.75538653, 0.96776, 0.44755465, 0.82362133,
            0.29203537, 0.30861592, 0.39762703
        ],
        [
            0.26186082, 0.9658112, 0.27424002, 0.50570756, 0.8114843, 0.5536027, 0.59788686,
            0.05054026, 0.28394443, 0.6402348
        ],
        [
            0.02258505, 0.60607, 0.6834324, 0.8004999, 0.3349493, 0.4295082, 0.37033585, 0.0394791,
            0.50698835, 0.29841292
        ],
        [
            0.9388161, 0.84357476, 0.29760668, 0.25654384, 0.71037215, 0.14646496, 0.9906275,
            0.9552909, 0.7966291, 0.6094893
        ],
        [
            0.7271988, 0.09518696, 0.3957746, 0.6157527, 0.31079137, 0.46793708, 0.8514491,
            0.86081386, 0.8208274, 0.2372746
        ],
        [
            0.6977758, 0.79387194, 0.9463199, 0.99063903, 0.29514915, 0.8795419, 0.741553,
            0.03520088, 0.83411527, 0.47134155
        ],
        [
            0.26704508, 0.2872401, 0.04289522, 0.583651, 0.94414073, 0.5729697, 0.72244126,
            0.7707775, 0.02079507, 0.22973806
        ],
        [
            0.18128674, 0.05054512, 0.6523751, 0.27093726, 0.32479268, 0.53774405, 0.08921466,
            0.18494032, 0.78120434, 0.15868789
        ],
        [
            0.81183356, 0.21792394, 0.6620494, 0.6886836, 0.39724785, 0.59319293, 0.02472531,
            0.21891202, 0.5342134, 0.4041879
        ]
    ]];

    let kernel14: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.53426075, 0.04187773, 0.6238241, 0.7835011, 0.97746944, 0.59153587, 0.7320774,
            0.04763152, 0.8120847, 0.20461221, 0.23883641, 0.4102024, 0.47930118, 0.6415133,
            0.66274744, 0.55179524, 0.75958186, 0.22876394, 0.29362342, 0.63051957, 0.5710282,
            0.2895624, 0.4162999, 0.6454271, 0.37774232, 0.13098118, 0.6206928,
        ],
    )
    .unwrap();
    let conv_layer14 = ConvolutionLayer::new(kernel14, 1, Padding::Valid);
    let target_output14: Array3<f32> = array![
        [
            [1.6619364, 2.598919, 3.1952164, 2.8140104, 2.850485, 2.913819, 3.2022958, 3.0288563],
            [
                1.9883742, 2.3303092, 1.7738893, 2.2527878, 2.2726786, 3.0357575, 3.2816377,
                3.8926067
            ],
            [2.4628835, 2.1046054, 1.8061142, 2.10334, 3.0002015, 3.1131105, 3.334321, 2.9527333],
            [
                2.6275432, 1.5677825, 1.6449629, 1.8390522, 2.8791158, 3.3328526, 2.8487937,
                2.1638203
            ],
            [2.4718914, 2.503019, 2.779101, 3.1497958, 3.6108994, 3.3192647, 2.449678, 2.4576976],
            [
                2.288243, 2.0406199, 2.5591314, 2.7569866, 2.6116571, 2.418969, 1.9349586,
                1.6883382
            ],
            [
                3.0053525, 2.7847304, 3.1267169, 3.3765094, 2.8380046, 2.2272835, 1.648829,
                1.565943
            ],
            [
                3.0496373, 2.7432463, 2.8781378, 2.3918335, 3.0907497, 2.636209, 2.4751387,
                2.7917318
            ],
            [
                2.696661, 2.5772836, 2.398118, 2.6645992, 2.1688132, 3.0631003, 3.3200781,
                2.6997285
            ],
            [
                3.1961176, 3.1513484, 2.9293282, 2.6595645, 3.0370662, 3.4625394, 3.9378858,
                3.3285496
            ],
            [
                1.9744484, 2.4956884, 3.0821524, 2.6748114, 3.5779996, 3.7213678, 2.7589524,
                2.7956662
            ],
            [2.654342, 2.6100183, 2.946084, 3.1768415, 2.6168509, 2.381973, 2.618513, 1.7872915],
            [
                1.6601905, 2.3538876, 2.6219983, 2.9717765, 2.6444888, 2.1173997, 1.8055652,
                2.1559858
            ]
        ],
        [
            [
                1.5445979, 2.4312613, 2.355533, 2.3122013, 2.2729878, 2.3350048, 2.5308135,
                2.892092
            ],
            [
                1.6692735, 1.7117037, 1.5512232, 1.350327, 1.6362689, 2.3909714, 2.9711075,
                2.7883568
            ],
            [2.2038565, 1.4491527, 1.2077708, 1.7920078, 2.439898, 2.9042115, 2.589282, 2.368692],
            [
                1.8891597, 1.5560031, 1.5665776, 2.0203576, 2.6267798, 2.8022785, 2.137184,
                2.2081726
            ],
            [2.0072415, 1.6612474, 1.962992, 2.4013426, 2.7093437, 2.422065, 2.005338, 1.6695067],
            [
                1.9573097, 1.9366933, 2.2620668, 2.3079445, 2.5003603, 2.0052714, 1.5295292,
                1.2909081
            ],
            [2.04103, 2.307891, 2.8320231, 2.575844, 2.3768709, 1.6322998, 1.163745, 1.5280842],
            [
                2.5934007, 2.4012973, 2.1320639, 2.1397424, 2.0132124, 1.733027, 2.0238278,
                2.1203082
            ],
            [
                2.115593, 1.9227589, 2.1251183, 1.755178, 2.1272252, 2.6364408, 2.9365304,
                2.5692933
            ],
            [
                2.3248558, 2.3805938, 2.4136918, 1.9788498, 2.6569624, 3.2040427, 2.9975405,
                2.501071
            ],
            [
                2.1172676, 2.3778682, 2.2537124, 2.623402, 2.887992, 2.5815156, 2.6849403,
                1.9845219
            ],
            [
                1.5831858, 2.2171643, 2.4545915, 2.4591937, 2.5429864, 2.0626044, 1.6495445,
                1.6689202
            ],
            [
                1.4161377, 1.7234771, 2.2046947, 2.2511168, 1.9185009, 1.5247525, 1.5395021,
                1.4966164
            ]
        ],
        [
            [
                1.2369457, 1.6029693, 2.0879254, 2.1091049, 1.8973566, 1.9870528, 2.3812377,
                2.5977721
            ],
            [
                1.4545326, 1.6680502, 1.3274345, 1.3135713, 1.7720747, 2.2929726, 2.3193588,
                2.6940234
            ],
            [
                2.0942614, 1.7285218, 1.5523089, 1.8032078, 2.2397385, 2.67465, 2.5734556,
                2.4236557
            ],
            [
                2.1398866, 1.5147548, 1.2186242, 1.5606834, 2.0921862, 2.529399, 2.3401175,
                1.7424775
            ],
            [
                2.1595194, 1.6802001, 2.1090586, 2.3929033, 2.493007, 2.181782, 2.0307477,
                1.6125335
            ],
            [
                2.1916335, 1.8531901, 1.8529397, 2.342911, 2.472652, 1.7585019, 1.7121404,
                1.2438753
            ],
            [
                1.9555677, 2.586199, 2.2493424, 2.3401635, 2.2436488, 1.5935843, 1.4298221,
                1.0942343
            ],
            [2.081486, 2.1585472, 2.117972, 1.9889067, 2.1779742, 2.1008782, 2.2905, 2.0519109],
            [
                2.1447325, 2.0596132, 1.7628103, 1.8135961, 2.0092185, 2.229189, 2.9895985,
                2.4535258
            ],
            [
                2.680533, 2.4151928, 2.3395543, 2.2173734, 2.3239758, 2.4556706, 2.8350298,
                2.507968
            ],
            [
                1.6494938, 1.9533821, 2.4468617, 2.6085372, 2.5551162, 2.8488793, 2.3237195,
                1.6073925
            ],
            [
                1.626865, 1.7748313, 1.8188798, 2.242793, 2.1378286, 1.7286947, 1.9773201,
                1.6629616
            ],
            [
                1.4137467, 1.6353782, 2.1740215, 2.0555158, 1.7814146, 1.5595717, 1.1657274,
                1.5024079
            ]
        ]
    ];
    let current_output14: Array3<f32> = conv_layer14.convolve(&test_input14);

    assert!(
        arr_allclose(&current_output14, &target_output14),
        "{:?} was not equal to {:?}",
        current_output14,
        target_output14
    );

    let test_input15 = array![[
        [
            0.19057496, 0.4622738, 0.9772445, 0.17967562, 0.27354005, 0.48198408, 0.09082693,
            0.6217685, 0.0965838, 0.8904992
        ],
        [
            0.5337058, 0.17222154, 0.62424076, 0.95776683, 0.998361, 0.150883, 0.28713444,
            0.35105017, 0.1765902, 0.9674033
        ],
        [
            0.65025777, 0.1959308, 0.3119046, 0.55247456, 0.38556734, 0.18145509, 0.94255227,
            0.7036003, 0.3402552, 0.16401337
        ],
        [
            0.28418577, 0.5504918, 0.6148071, 0.7740251, 0.37459207, 0.25677747, 0.80441076,
            0.17314304, 0.5946227, 0.30094627
        ],
        [
            0.06480476, 0.5798754, 0.62549657, 0.6065069, 0.9259787, 0.3677915, 0.69532603,
            0.8356569, 0.39276573, 0.18570696
        ],
        [
            0.61698794, 0.9064707, 0.01547038, 0.2551995, 0.11438051, 0.03861368, 0.6524532,
            0.36442748, 0.08230381, 0.79969245
        ],
        [
            0.27816203, 0.3741886, 0.44356522, 0.27386904, 0.4171807, 0.14990133, 0.4750283,
            0.6358263, 0.77572674, 0.7072159
        ],
        [
            0.34310365, 0.36999545, 0.8200852, 0.46510443, 0.9230857, 0.86201537, 0.04691705,
            0.12260284, 0.89921826, 0.47400048
        ],
        [
            0.7492544, 0.05440097, 0.28273952, 0.9184355, 0.9064988, 0.7027802, 0.19125043,
            0.8670149, 0.08634489, 0.722654
        ],
        [
            0.77540857, 0.00211577, 0.6443405, 0.2344423, 0.9849179, 0.9893316, 0.87634915,
            0.48734385, 0.8760625, 0.53053117
        ],
        [
            0.01152504, 0.6788874, 0.76156837, 0.4680538, 0.07214947, 0.549209, 0.8383253,
            0.00365476, 0.9782156, 0.7419056
        ],
        [
            0.40790308, 0.00302504, 0.80174476, 0.7689671, 0.50054824, 0.16478458, 0.89107823,
            0.7763043, 0.73042727, 0.41667554
        ],
        [
            0.7348974, 0.71259016, 0.93557405, 0.37013116, 0.14954911, 0.33766475, 0.39673004,
            0.03940821, 0.2414454, 0.9373305
        ],
        [
            0.84819096, 0.9272432, 0.8604789, 0.92845494, 0.8023847, 0.06647868, 0.12827316,
            0.02774826, 0.8982795, 0.1193029
        ],
        [
            0.37523487, 0.28379655, 0.0638791, 0.08446726, 0.68760884, 0.2630593, 0.01052708,
            0.45302406, 0.10402057, 0.5539082
        ]
    ]];

    let kernel15: Array4<f32> = Array::from_shape_vec(
        (3, 1, 3, 3),
        vec![
            0.39986408, 0.17578217, 0.24024557, 0.12796782, 0.3247584, 0.9770886, 0.6908975,
            0.08430128, 0.7253688, 0.53770447, 0.55867785, 0.60874844, 0.80071914, 0.9196999,
            0.99522823, 0.5850918, 0.83232373, 0.26021662, 0.24856173, 0.71616316, 0.47418702,
            0.38390577, 0.46712968, 0.7749884, 0.71101063, 0.49657014, 0.8869578,
        ],
    )
    .unwrap();
    let conv_layer15 = ConvolutionLayer::new(kernel15, 1, Padding::Valid);
    let target_output15: Array3<f32> = array![
        [
            [
                1.5868158, 1.5003595, 2.002111, 1.5862408, 1.4361364, 2.2582157, 1.522715,
                1.6973035
            ],
            [
                1.9230784, 2.2872036, 2.5044048, 1.5908318, 1.7474434, 1.7101918, 1.4983646,
                1.9202473
            ],
            [
                1.8170167, 2.0520637, 2.2673876, 1.9922385, 2.131847, 2.3741765, 2.2182305,
                1.4063528
            ],
            [
                1.9064432, 1.607771, 1.324712, 1.1742648, 1.6177189, 1.5972756, 1.7538857,
                1.3913943
            ],
            [
                1.6906072, 1.6387837, 1.739492, 1.282535, 1.5766424, 2.0241647, 2.1943827,
                2.0946193
            ],
            [
                1.6200205, 2.001234, 1.6409973, 1.9785762, 1.7615813, 0.92680544, 1.5031075,
                2.3839648
            ],
            [
                1.1534241, 1.7217147, 2.4965274, 2.336823, 2.003546, 1.7217325, 1.8868577,
                2.0125186
            ],
            [1.5800854, 1.5531851, 2.5478873, 3.1510572, 2.7545, 2.141593, 2.3003707, 2.0908525],
            [
                1.9117342, 2.168601, 1.8219442, 1.9945976, 2.3149004, 2.3578153, 1.5477904,
                2.7667532
            ],
            [
                1.7247169, 1.9932832, 2.5671306, 1.8486658, 2.315242, 2.686908, 2.7514937,
                2.2568307
            ],
            [
                2.3093784, 2.371843, 1.5420221, 1.3674339, 1.5485822, 1.2105557, 1.7908083,
                1.973313
            ],
            [
                2.8908253, 2.8323858, 2.7580209, 1.6827607, 1.3570448, 1.0692197, 1.7727064,
                1.8270278
            ],
            [
                1.9679787, 1.3729621, 1.6418614, 1.7127852, 0.98042053, 0.6707927, 0.9584078,
                1.6131754
            ]
        ],
        [
            [2.6925364, 3.1771462, 3.7299924, 2.9437685, 2.182248, 2.567847, 2.5960274, 2.906041],
            [
                2.4740486, 3.1573844, 3.9320436, 3.1277826, 2.6853445, 3.0722444, 2.8124256,
                2.514208
            ],
            [
                2.6451216, 3.3289075, 3.4281514, 3.0891078, 3.1297202, 3.4246953, 3.7299979,
                2.5887513
            ],
            [
                3.3252094, 3.2788248, 3.1406643, 2.642199, 2.589836, 3.1916633, 3.1842935,
                2.2398136
            ],
            [2.713548, 2.6410732, 2.3534474, 2.1835852, 2.3684516, 2.8978817, 3.164811, 3.160495],
            [
                2.725865, 2.6564956, 2.3288143, 2.3389764, 2.6725156, 2.4096084, 2.5711694,
                3.479945
            ],
            [2.5070834, 2.6181698, 3.6781707, 4.039437, 3.27086, 2.3035333, 3.107594, 3.4686139],
            [
                2.3063338, 2.8861585, 3.9924743, 4.8057113, 4.3382187, 3.4642053, 2.8720918,
                3.5351596
            ],
            [2.4641519, 2.874931, 3.7613885, 3.9907851, 4.160259, 3.9722393, 3.2830806, 3.64654],
            [2.5202641, 3.1233683, 3.410056, 3.2876668, 3.7782695, 3.788845, 4.165038, 4.1010904],
            [3.293372, 4.088994, 3.375056, 2.1199152, 2.6722448, 3.1370807, 3.1893454, 3.1798027],
            [
                4.1985526, 4.3225703, 3.983896, 2.9171107, 2.2347543, 2.0179875, 2.3264034,
                3.2122483
            ],
            [
                4.083475, 3.6893582, 3.1912854, 2.6325243, 1.8822151, 0.9889973, 1.7153275,
                2.227331
            ]
        ],
        [
            [
                2.429154, 2.3330152, 2.814634, 2.4413047, 2.4051213, 2.4538372, 2.0812793,
                2.3818696
            ],
            [
                2.4614055, 2.9478323, 3.1292543, 2.2795851, 2.4292748, 2.2157094, 2.5473828,
                2.39702
            ],
            [
                2.2595003, 2.9247205, 3.1395938, 2.6026175, 2.9641736, 3.0073216, 3.0242708,
                1.8386955
            ],
            [
                2.3557932, 2.6000233, 2.2139606, 1.8122214, 2.6067297, 2.3461034, 2.437374,
                2.3053322
            ],
            [2.371762, 2.362735, 2.026385, 1.6092476, 2.0250094, 2.469091, 2.8573203, 2.717027],
            [
                2.2834423, 2.247412, 2.4039629, 2.3007462, 2.2592142, 1.7180364, 2.2978451,
                3.0351112
            ],
            [2.0021818, 2.39657, 3.4248433, 3.288528, 2.7301712, 2.6223176, 2.290317, 2.8209229],
            [2.4536471, 2.0729, 3.4811869, 4.2650337, 3.6772351, 2.9231675, 2.8532043, 3.1134048],
            [2.4914932, 2.521278, 2.9153056, 2.9602234, 3.4371822, 3.137817, 3.0000613, 3.202046],
            [2.262117, 2.7937686, 3.170408, 2.6801515, 3.1276348, 3.1728601, 3.787671, 2.9664125],
            [3.22718, 2.943689, 2.4653573, 1.9917909, 2.3872526, 1.883231, 2.7016177, 3.045204],
            [3.8803682, 3.9164996, 3.6068246, 2.124134, 1.8288574, 1.5372713, 2.34035, 2.1912253],
            [
                3.0438406, 2.585515, 2.6349986, 2.2685153, 1.6575321, 0.92027676, 1.2846386,
                2.054393
            ]
        ]
    ];
    let current_output15: Array3<f32> = conv_layer15.convolve(&test_input15);

    assert!(
        arr_allclose(&current_output15, &target_output15),
        "{:?} was not equal to {:?}",
        current_output15,
        target_output15
    );

    let test_input16 = array![[
        [
            0.5181486, 0.5871326, 0.76900613, 0.5745777, 0.81429285, 0.78002185, 0.7069771,
            0.33134556, 0.7407027, 0.58577555
        ],
        [
            0.40479863, 0.7506117, 0.11343616, 0.8795398, 0.83064, 0.8858372, 0.3898591, 0.9350765,
            0.9673369, 0.64465624
        ],
        [
            0.0283905, 0.22112074, 0.1391855, 0.34128338, 0.65248054, 0.291874, 0.70765275,
            0.32796225, 0.22921298, 0.59572685
        ],
        [
            0.5726663, 0.72872376, 0.8248998, 0.29288608, 0.92347336, 0.25887516, 0.91578674,
            0.800785, 0.7670362, 0.8990461
        ],
        [
            0.8424308, 0.7045559, 0.43518323, 0.48451254, 0.31151697, 0.10086012, 0.5242353,
            0.19001916, 0.01069371, 0.01020448
        ],
        [
            0.12606935, 0.04778918, 0.8456499, 0.57045126, 0.46361542, 0.7532553, 0.62787765,
            0.3127784, 0.9686197, 0.96754897
        ],
        [
            0.5766132, 0.6463905, 0.6347338, 0.52757853, 0.55145216, 0.08155768, 0.13378453,
            0.2262157, 0.73179847, 0.5428326
        ],
        [
            0.9094368, 0.2528448, 0.24383228, 0.7446406, 0.5544842, 0.01949351, 0.13375893,
            0.04438103, 0.8489, 0.6848837
        ],
        [
            0.9220802, 0.00185038, 0.44556108, 0.00844186, 0.8082305, 0.33159012, 0.5138473,
            0.65069795, 0.9300001, 0.58097035
        ],
        [
            0.5413155, 0.5714561, 0.21683556, 0.8548128, 0.02262598, 0.62476623, 0.33444464,
            0.98826236, 0.03221937, 0.12669064
        ],
        [
            0.50246465, 0.42635268, 0.91064155, 0.7792924, 0.07601635, 0.6067355, 0.3940292,
            0.30074376, 0.1328066, 0.72018456
        ],
        [
            0.34319454, 0.6295161, 0.03357495, 0.03066352, 0.51702976, 0.9283114, 0.36689135,
            0.6327302, 0.37459058, 0.93406814
        ],
        [
            0.33968034, 0.59511477, 0.4350908, 0.7094508, 0.29612544, 0.80898666, 0.7905302,
            0.4748418, 0.6989706, 0.85952836
        ],
        [
            0.70326394, 0.38940284, 0.37933362, 0.22292, 0.3949557, 0.27719194, 0.8619771,
            0.9255003, 0.30563155, 0.5844432
        ],
        [
            0.36121982, 0.09087573, 0.23811613, 0.17829578, 0.9398569, 0.04807154, 0.7588201,
            0.05337733, 0.19222781, 0.98696715
        ]
    ]];

    let kernel16: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.32119673, 0.31823838, 0.2669342, 0.9708137, 0.28105715, 0.74463385, 0.866447,
            0.28257245, 0.11623824, 0.07089514, 0.0084233, 0.7792785, 0.05098573, 0.09732427,
            0.00085336, 0.10247751, 0.59327537, 0.9416077, 0.20617688, 0.04615124, 0.00353958,
            0.96525836, 0.07020015, 0.9601851, 0.53420085, 0.3872288, 0.9627444, 0.705448,
            0.3117258, 0.6942895, 0.6260977, 0.8205645, 0.02662205, 0.19467542, 0.7148581,
            0.31085488, 0.61566937, 0.8293213, 0.43287596, 0.23516753, 0.60939455, 0.33567885,
            0.9101412, 0.8857049, 0.59699446, 0.22236562, 0.47292593, 0.8425068, 0.09430943,
            0.75324225,
        ],
    )
    .unwrap();
    let conv_layer16 = ConvolutionLayer::new(kernel16, 1, Padding::Valid);
    let target_output16: Array3<f32> = array![
        [
            [5.45126, 5.5416675, 5.9019213, 6.3332524, 6.3536825, 5.483256],
            [4.320443, 4.3177156, 4.835271, 5.0572495, 4.761722, 4.518212],
            [4.9584727, 4.1694264, 4.993044, 5.237688, 5.38821, 5.987141],
            [5.171863, 4.0472217, 4.1220503, 3.9200807, 3.9511416, 4.0875053],
            [5.594291, 4.4109607, 4.051821, 4.020871, 5.206334, 5.114732],
            [5.25443, 4.021497, 3.7806199, 3.743642, 4.2173834, 4.4476323],
            [3.7972708, 4.652855, 3.7283552, 4.542083, 2.9330776, 4.1688585],
            [4.3900223, 3.734256, 4.7603226, 4.8065777, 4.375369, 4.9036202],
            [3.9518888, 4.854356, 4.04154, 4.6203427, 4.1839585, 5.211152],
            [4.118699, 5.0886145, 5.5355177, 4.2825875, 4.346252, 5.165636],
            [4.543163, 3.8443038, 5.2363687, 4.9910245, 4.703874, 5.6062775]
        ],
        [
            [6.8424945, 7.427615, 7.08391, 7.855373, 7.5240383, 6.8879075],
            [6.309353, 6.485572, 7.620654, 7.224521, 8.534456, 7.938187],
            [7.121025, 6.3368735, 6.439097, 6.3014774, 6.1324716, 5.8603973],
            [7.8179855, 6.502115, 6.2206974, 5.91085, 5.8170977, 6.737808],
            [6.7644844, 5.987826, 5.55163, 5.2243166, 6.165485, 6.6340938],
            [6.6290054, 6.2654395, 5.9080453, 5.596031, 5.970934, 6.2046294],
            [7.2468104, 5.6003337, 6.4983945, 5.4054623, 6.046751, 5.7637234],
            [6.5211043, 5.538034, 5.1477275, 6.549974, 6.1057124, 6.472799],
            [5.7272897, 6.3964, 6.7021365, 7.1637783, 6.0293694, 7.6767063],
            [5.9555597, 6.402952, 7.164941, 7.1838665, 6.2121887, 7.562142],
            [5.7503805, 5.934894, 5.929675, 7.008771, 6.967401, 7.7411137]
        ]
    ];
    let current_output16: Array3<f32> = conv_layer16.convolve(&test_input16);

    assert!(
        arr_allclose(&current_output16, &target_output16),
        "{:?} was not equal to {:?}",
        current_output16,
        target_output16
    );

    let test_input17 = array![[
        [
            0.38793716, 0.2669936, 0.29911962, 0.7380972, 0.17850904, 0.65695775, 0.8119258,
            0.26960826, 0.12972821, 0.6597052
        ],
        [
            0.7345929, 0.6485681, 0.22981846, 0.24392553, 0.26706976, 0.32711208, 0.9581323,
            0.31259444, 0.91530424, 0.17250775
        ],
        [
            0.715259, 0.5014661, 0.7273789, 0.23862323, 0.4093651, 0.04974006, 0.8688277,
            0.46409306, 0.20740515, 0.19872624
        ],
        [
            0.27135858, 0.02647329, 0.90772045, 0.97377276, 0.47016057, 0.06899374, 0.47393376,
            0.49847803, 0.02369655, 0.10663922
        ],
        [
            0.02373338, 0.21085607, 0.56809616, 0.70259374, 0.4123619, 0.01858313, 0.25862443,
            0.4823392, 0.47215322, 0.593886
        ],
        [
            0.8265343, 0.06712108, 0.3228139, 0.11140465, 0.59627575, 0.49184018, 0.8395536,
            0.13370071, 0.25792846, 0.54400545
        ],
        [
            0.8792363, 0.58678144, 0.03434712, 0.8123595, 0.67917913, 0.02545591, 0.2468276,
            0.9191908, 0.02958322, 0.20474248
        ],
        [
            0.76555794, 0.82307637, 0.24628638, 0.17773865, 0.17740512, 0.4937253, 0.9466453,
            0.13741271, 0.728613, 0.5338591
        ],
        [
            0.7898385, 0.47936276, 0.23633894, 0.8572216, 0.06004518, 0.3347224, 0.50485814,
            0.09635731, 0.18004768, 0.24514198
        ],
        [
            0.228041, 0.05106571, 0.30884218, 0.38737774, 0.7948706, 0.5052517, 0.23866583,
            0.5068071, 0.15044466, 0.09537497
        ],
        [
            0.13518302, 0.7257979, 0.86458087, 0.7176047, 0.09527912, 0.72005635, 0.7382226,
            0.41232714, 0.5491061, 0.7183669
        ],
        [
            0.07962471, 0.04476061, 0.19437055, 0.79608136, 0.6295519, 0.98047, 0.56819236,
            0.10505454, 0.9480506, 0.10080674
        ],
        [
            0.9538371, 0.2355401, 0.94827145, 0.46488547, 0.60260093, 0.76637876, 0.3219317,
            0.4168223, 0.25562465, 0.8997145
        ],
        [
            0.59076214, 0.22263806, 0.6840723, 0.24348243, 0.94946456, 0.34627816, 0.9748906,
            0.7407666, 0.9677088, 0.13005458
        ],
        [
            0.69001645, 0.14445187, 0.9216249, 0.03732051, 0.44508553, 0.666532, 0.9382296,
            0.80578685, 0.976145, 0.6098745
        ]
    ]];

    let kernel17: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.04455515, 0.00950876, 0.62839466, 0.9551375, 0.7995473, 0.6428197, 0.68798536,
            0.6370576, 0.6631732, 0.58605653, 0.6692434, 0.061506, 0.8282889, 0.43634078,
            0.21192186, 0.12576632, 0.24558064, 0.45260343, 0.7620647, 0.06249312, 0.3646563,
            0.40195072, 0.7309763, 0.26523942, 0.23130116, 0.5690737, 0.02384425, 0.67610437,
            0.4431474, 0.951001, 0.21377262, 0.6243543, 0.74306166, 0.18731794, 0.82163817,
            0.86947584, 0.4878141, 0.39436254, 0.4686375, 0.12197074, 0.8154824, 0.15653013,
            0.6606655, 0.57885796, 0.3968833, 0.32867205, 0.52372193, 0.40489906, 0.13030814,
            0.670139,
        ],
    )
    .unwrap();
    let conv_layer17 = ConvolutionLayer::new(kernel17, 1, Padding::Valid);
    let target_output17: Array3<f32> = array![
        [
            [4.902071, 4.643537, 6.1541734, 5.2397294, 4.7788024, 4.252001],
            [5.0435143, 4.4192204, 5.197779, 4.7741094, 4.523033, 4.5947294],
            [5.244156, 4.4450903, 4.987426, 5.101215, 4.134201, 4.4344277],
            [6.0067887, 5.2623734, 4.930485, 4.628043, 4.7176776, 4.5283017],
            [5.5123777, 4.944424, 4.617428, 5.0726047, 3.6602778, 5.244027],
            [5.1640515, 3.651766, 4.828485, 5.370671, 4.766645, 4.5266895],
            [4.5982065, 5.1244364, 5.668479, 4.808581, 4.340702, 5.0819054],
            [4.4758515, 4.5921025, 6.070319, 5.508867, 5.732876, 5.723104],
            [4.9942875, 5.9987335, 6.4780707, 6.057302, 5.8216443, 6.0515456],
            [5.3943653, 6.0050535, 7.2208724, 6.182971, 6.782134, 5.7569475],
            [6.2387557, 6.4783187, 6.8174863, 5.89195, 7.449213, 7.1269712]
        ],
        [
            [5.3734107, 4.8227854, 5.5972595, 5.9993424, 5.1455393, 4.431258],
            [5.4757752, 4.7223454, 5.4359603, 5.267406, 5.0992475, 5.3008833],
            [6.1405163, 4.795984, 5.2467046, 5.910808, 4.6683764, 3.545774],
            [6.382434, 5.612561, 5.103145, 4.7670994, 5.0615096, 5.253399],
            [5.95467, 4.6687117, 4.870746, 5.368656, 4.435413, 4.589902],
            [5.392241, 4.2704635, 5.0760083, 5.820975, 4.833316, 4.754918],
            [5.650608, 5.965691, 6.017502, 5.0171432, 5.343823, 5.525615],
            [4.4226227, 5.066024, 5.934496, 5.99506, 6.333818, 5.674012],
            [6.1077104, 6.504403, 6.628925, 6.4950266, 5.1687627, 5.843642],
            [5.7912464, 6.20783, 7.3361073, 6.616788, 7.311138, 6.420687],
            [6.013444, 6.872706, 7.654677, 6.7761264, 7.823472, 7.2549605]
        ]
    ];
    let current_output17: Array3<f32> = conv_layer17.convolve(&test_input17);

    assert!(
        arr_allclose(&current_output17, &target_output17),
        "{:?} was not equal to {:?}",
        current_output17,
        target_output17
    );

    let test_input18 = array![[
        [
            0.89535373, 0.9697048, 0.7154457, 0.8203782, 0.21395262, 0.7457981, 0.7147152,
            0.05275504, 0.93545914, 0.8986874
        ],
        [
            0.8690856, 0.63580817, 0.15263815, 0.7466949, 0.6235891, 0.62486136, 0.7352324,
            0.23342584, 0.9827126, 0.93357897
        ],
        [
            0.96423954, 0.02081718, 0.47192466, 0.50718915, 0.9034243, 0.678573, 0.48106775,
            0.27722874, 0.0061415, 0.2891619
        ],
        [
            0.9937529, 0.02278532, 0.7661429, 0.23943478, 0.7568481, 0.1846646, 0.05945846,
            0.7522374, 0.723256, 0.5690188
        ],
        [
            0.80126184, 0.13196982, 0.2549996, 0.9684265, 0.09975351, 0.6575368, 0.01221572,
            0.5690517, 0.8633032, 0.5916843
        ],
        [
            0.7327984, 0.38392547, 0.45234743, 0.88714564, 0.48625886, 0.4974664, 0.280569,
            0.3272779, 0.7308698, 0.16297498
        ],
        [
            0.8690239, 0.5834708, 0.33016786, 0.2406453, 0.599151, 0.8538999, 0.30761606,
            0.3641591, 0.11430372, 0.45364544
        ],
        [
            0.6984523, 0.7053654, 0.4003387, 0.38632825, 0.91106904, 0.5180514, 0.1837249,
            0.38816592, 0.16589011, 0.91154295
        ],
        [
            0.93466866, 0.9079338, 0.6218017, 0.7199313, 0.5790186, 0.5812801, 0.5897581,
            0.00632351, 0.51240736, 0.3697457
        ],
        [
            0.13892107, 0.9900367, 0.47229373, 0.56468743, 0.59834725, 0.6383385, 0.03793695,
            0.9450343, 0.96132326, 0.6061949
        ],
        [
            0.63035446, 0.5111371, 0.03746503, 0.558335, 0.30164844, 0.68653256, 0.99669343,
            0.5127781, 0.25915265, 0.34361982
        ],
        [
            0.6647127, 0.42920145, 0.22015804, 0.22396304, 0.553291, 0.21043801, 0.03016802,
            0.13123624, 0.4177692, 0.15363416
        ],
        [
            0.26550946, 0.9799374, 0.6468661, 0.22700246, 0.28266105, 0.7568015, 0.49555436,
            0.7577122, 0.20788053, 0.91674453
        ],
        [
            0.56273526, 0.45675126, 0.48490578, 0.82385767, 0.42006218, 0.8251126, 0.35886785,
            0.09741933, 0.50827706, 0.09494945
        ],
        [
            0.9338919, 0.41674572, 0.12654002, 0.47637334, 0.72644436, 0.22123201, 0.29542014,
            0.46568522, 0.6850643, 0.6808416
        ]
    ]];

    let kernel18: Array4<f32> = Array::from_shape_vec(
        (2, 1, 5, 5),
        vec![
            0.3779981, 0.43870836, 0.653471, 0.21167818, 0.05481404, 0.2891591, 0.3848816,
            0.61992764, 0.33277866, 0.13763186, 0.33186397, 0.23232727, 0.42076096, 0.14874539,
            0.19455469, 0.9644196, 0.22719596, 0.8802664, 0.33960778, 0.710135, 0.0414281,
            0.76819396, 0.00992903, 0.23459853, 0.36192992, 0.805789, 0.34610718, 0.6439924,
            0.9575676, 0.4075119, 0.6993045, 0.24301769, 0.5419032, 0.5804159, 0.38947833,
            0.9734199, 0.32100558, 0.7094996, 0.84465176, 0.2231027, 0.09362596, 0.85453415,
            0.30416232, 0.03217437, 0.38075933, 0.27610767, 0.8545096, 0.07512625, 0.86872333,
            0.5788371,
        ],
    )
    .unwrap();
    let conv_layer18 = ConvolutionLayer::new(kernel18, 1, Padding::Valid);
    let target_output18: Array3<f32> = array![
        [
            [5.689743, 4.6726365, 5.207692, 4.9093423, 5.0442667, 5.389375],
            [5.453789, 4.6795754, 4.693754, 4.205647, 4.350806, 4.76727],
            [5.2238317, 4.136857, 4.962417, 4.379638, 4.198849, 3.7672563],
            [4.8167686, 4.969932, 4.235961, 3.9413393, 4.3462524, 4.4749217],
            [5.6045403, 4.50074, 4.8372574, 4.0867496, 4.274, 4.1092668],
            [5.8487115, 5.69402, 4.7096925, 4.249967, 4.6104927, 4.5194445],
            [5.776105, 5.3726735, 5.226536, 5.1802177, 4.440395, 4.33052],
            [4.99687, 5.5377765, 4.8313446, 3.6163201, 4.575391, 4.265362],
            [4.9801106, 4.678788, 4.1903367, 5.414192, 4.7398243, 4.6024847],
            [4.4482393, 4.845315, 4.646978, 3.575052, 4.093704, 4.4579625],
            [4.6450996, 4.160038, 3.9964526, 4.191203, 4.6370826, 4.021827]
        ],
        [
            [8.234778, 6.4659057, 7.014855, 6.9154, 7.2219133, 6.948368],
            [6.902239, 6.7276335, 6.214438, 6.8036757, 5.993226, 5.6521444],
            [6.9161654, 6.1477103, 6.030004, 6.7280693, 6.439343, 5.7343082],
            [7.706223, 6.172766, 5.8497024, 6.0282974, 5.7234974, 6.4047813],
            [7.7011795, 6.8014274, 6.0678616, 6.5153975, 5.6911955, 6.094458],
            [7.667109, 8.207261, 7.0691257, 6.6358643, 6.548594, 5.2737226],
            [7.561575, 7.6986523, 6.206769, 7.377113, 6.3643737, 6.6138816],
            [6.8696237, 6.896798, 6.2878847, 6.09456, 5.8262286, 6.0820746],
            [7.0004115, 6.842516, 5.5116606, 6.172382, 7.015443, 6.1177483],
            [6.192419, 7.2267904, 6.4128184, 6.71982, 5.3706303, 6.462942],
            [6.135825, 6.2864857, 4.8651676, 5.7597218, 6.3751216, 6.048237]
        ]
    ];
    let current_output18: Array3<f32> = conv_layer18.convolve(&test_input18);

    assert!(
        arr_allclose(&current_output18, &target_output18),
        "{:?} was not equal to {:?}",
        current_output18,
        target_output18
    );

    let test_input19 = array![
        [
            [0.45671245, 0.6821529, 0.40237483, 0.65666056, 0.61528814, 0.10633651],
            [0.49642795, 0.14359485, 0.53526694, 0.1696324, 0.33204898, 0.95525235],
            [0.25685027, 0.25693816, 0.30001205, 0.83179814, 0.4820838, 0.6531026],
            [0.00604056, 0.16296797, 0.04446485, 0.1919063, 0.00911832, 0.815183],
            [0.94401777, 0.52856827, 0.28076503, 0.980501, 0.886572, 0.8819829],
            [0.7819647, 0.72222507, 0.11044633, 0.2546282, 0.78940445, 0.90517753]
        ],
        [
            [0.02821646, 0.13092387, 0.96532, 0.07955468, 0.8301079, 0.95870477],
            [0.02807361, 0.96717685, 0.789418, 0.22258878, 0.6242531, 0.17685722],
            [0.9619644, 0.06693318, 0.24983038, 0.9035203, 0.2207663, 0.941437],
            [0.6749602, 0.7694261, 0.8114944, 0.18254054, 0.20514874, 0.26495343],
            [0.54503894, 0.51207054, 0.07791043, 0.54355013, 0.36146563, 0.48148784],
            [0.49357224, 0.366483, 0.88196933, 0.8222847, 0.46583235, 0.7002328]
        ],
        [
            [0.65663046, 0.04243296, 0.08922233, 0.30693734, 0.9080613, 0.24841434],
            [0.67816275, 0.970054, 0.44380167, 0.54548246, 0.39491078, 0.4390062],
            [0.7054154, 0.71142703, 0.04385825, 0.99454165, 0.6613494, 0.02962555],
            [0.09254023, 0.49170363, 0.29030007, 0.13724734, 0.59104544, 0.62743604],
            [0.6431647, 0.03335644, 0.86478263, 0.03467919, 0.13580918, 0.09721047],
            [0.6708243, 0.37231642, 0.7812372, 0.328725, 0.3009351, 0.750793]
        ]
    ];

    let kernel19: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.75040495, 0.8816592, 0.9041115, 0.16955712, 0.6565798, 0.15740211, 0.90069485,
            0.05310873, 0.54084134, 0.51972127, 0.2966056, 0.9090851, 0.05444199, 0.10227188,
            0.33348852, 0.21181779, 0.78958035, 0.5674032, 0.9831707, 0.06208929, 0.48332873,
            0.15761587, 0.20003575, 0.4798304, 0.92161584, 0.38009274, 0.70394504, 0.53337294,
            0.9976662, 0.99974847, 0.76152086, 0.5351854, 0.04401799, 0.01261302, 0.13790856,
            0.4826352, 0.72387767, 0.2162454, 0.4171188, 0.2814817, 0.28489798, 0.42292982,
            0.78206104, 0.5917116, 0.6246967, 0.20632543, 0.50320554, 0.169661, 0.95890856,
            0.1822242, 0.90991354, 0.74544144, 0.2742251, 0.12639284,
        ],
    )
    .unwrap();
    let conv_layer19 = ConvolutionLayer::new(kernel19, 1, Padding::Valid);
    let target_output19: Array3<f32> = array![
        [
            [5.664031, 5.4856477, 6.5403914, 6.053055],
            [5.316212, 5.9333167, 5.413069, 6.350182],
            [5.892532, 5.942537, 4.5678005, 6.493844],
            [5.9224963, 5.6089334, 5.47015, 6.962351]
        ],
        [
            [5.628513, 4.8236904, 6.976999, 7.2571874],
            [5.646813, 5.806289, 4.937856, 5.825896],
            [5.111846, 5.5850377, 5.1288185, 6.3122754],
            [6.6448545, 5.689663, 5.37172, 5.8561864]
        ]
    ];
    let current_output19: Array3<f32> = conv_layer19.convolve(&test_input19);

    assert!(
        arr_allclose(&current_output19, &target_output19),
        "{:?} was not equal to {:?}",
        current_output19,
        target_output19
    );

    let test_input20 = array![
        [
            [0.16602974, 0.75747913, 0.51063865, 0.25472447, 0.66492975, 0.13672462],
            [0.8798877, 0.584571, 0.32541806, 0.8543414, 0.04858193, 0.62667716],
            [0.5988572, 0.8094736, 0.29621908, 0.7817938, 0.35345063, 0.4491099],
            [0.7036799, 0.66168624, 0.41794768, 0.8909816, 0.6967979, 0.75464064],
            [0.15431848, 0.87579244, 0.53754663, 0.6797737, 0.08134871, 0.93320847],
            [0.03809474, 0.7867202, 0.7863488, 0.39982173, 0.8987073, 0.742261]
        ],
        [
            [0.4649844, 0.91581804, 0.6296097, 0.48130554, 0.01730853, 0.73892075],
            [0.6356067, 0.96449506, 0.10196066, 0.9710584, 0.16233306, 0.04012987],
            [0.7548613, 0.41193417, 0.8657136, 0.5514695, 0.04673942, 0.16020048],
            [0.09309967, 0.75922126, 0.85175455, 0.77955645, 0.44887283, 0.81323266],
            [0.56885445, 0.9531821, 0.23263316, 0.74194604, 0.6701397, 0.6966494],
            [0.09368633, 0.5103296, 0.5674216, 0.32429224, 0.1602559, 0.14132027]
        ],
        [
            [0.36747122, 0.02039539, 0.55201155, 0.324559, 0.77949584, 0.02376527],
            [0.22369854, 0.7977554, 0.8232674, 0.505133, 0.651015, 0.8986551],
            [0.9230523, 0.11411006, 0.3099813, 0.9309671, 0.2836077, 0.0033604],
            [0.8027366, 0.98626304, 0.6952307, 0.25186005, 0.443149, 0.85127234],
            [0.29611066, 0.5536974, 0.527793, 0.01885639, 0.42471457, 0.5644708],
            [0.5213245, 0.05583452, 0.06023929, 0.11995548, 0.33672985, 0.06929818]
        ]
    ];

    let kernel20: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.4782574, 0.7120909, 0.16471672, 0.34966558, 0.5212063, 0.2356948, 0.0573609,
            0.63527644, 0.5044555, 0.11632108, 0.85454535, 0.18019378, 0.9838283, 0.6521379,
            0.9648439, 0.36602104, 0.32906872, 0.6593625, 0.47647962, 0.10698621, 0.4967664,
            0.90295655, 0.3666493, 0.65951824, 0.66375136, 0.8330784, 0.93752426, 0.5697997,
            0.48833874, 0.39931872, 0.47131556, 0.922373, 0.4160782, 0.8237337, 0.17045999,
            0.5347742, 0.49556065, 0.18296848, 0.04206449, 0.6777289, 0.45965454, 0.08041501,
            0.15022676, 0.39238515, 0.2873256, 0.7417032, 0.61914563, 0.8137173, 0.67075133,
            0.99957263, 0.8111227, 0.17951131, 0.24240606, 0.7753997,
        ],
    )
    .unwrap();
    let conv_layer20 = ConvolutionLayer::new(kernel20, 1, Padding::Valid);
    let target_output20: Array3<f32> = array![
        [
            [7.8325186, 8.332608, 6.4594398, 5.943391],
            [9.205989, 9.010192, 8.09169, 6.977885],
            [7.8237658, 8.015416, 7.559003, 7.65627],
            [7.9864817, 7.3545237, 6.1663327, 6.9807687]
        ],
        [
            [7.094718, 7.2296515, 6.9770293, 5.4810524],
            [8.476913, 8.01615, 7.2262716, 7.0024157],
            [7.9239135, 7.743834, 6.745165, 6.7592645],
            [7.087791, 7.3111343, 6.4769425, 6.185662]
        ]
    ];
    let current_output20: Array3<f32> = conv_layer20.convolve(&test_input20);

    assert!(
        arr_allclose(&current_output20, &target_output20),
        "{:?} was not equal to {:?}",
        current_output20,
        target_output20
    );

    let test_input21 = array![
        [
            [0.7233747, 0.514743, 0.6292863, 0.09462127, 0.06431016, 0.58759433],
            [0.21980144, 0.8472264, 0.3531883, 0.7503538, 0.4653744, 0.9875905],
            [0.37862286, 0.9620671, 0.75507283, 0.10567724, 0.8472397, 0.9672113],
            [0.3842727, 0.3282922, 0.3052412, 0.04119791, 0.13365868, 0.93408334],
            [0.40976977, 0.28116077, 0.14792818, 0.09807894, 0.12152596, 0.95614773],
            [0.7602087, 0.97631705, 0.48662946, 0.77797663, 0.34835714, 0.5305259]
        ],
        [
            [0.5849598, 0.9262702, 0.3348592, 0.39446756, 0.30438656, 0.62632954],
            [0.00100083, 0.3598078, 0.25727805, 0.4171089, 0.71255463, 0.22617352],
            [0.5094745, 0.49016726, 0.45673513, 0.2728893, 0.55496895, 0.64802116],
            [0.94689554, 0.2643334, 0.5038705, 0.7131295, 0.36297327, 0.21441843],
            [0.9953925, 0.97598535, 0.83921397, 0.3419448, 0.29696485, 0.47523478],
            [0.78506595, 0.26839125, 0.70590997, 0.2436962, 0.8761795, 0.6565131]
        ],
        [
            [0.73156756, 0.2988856, 0.68505603, 0.7353366, 0.65234166, 0.4344534],
            [0.6921164, 0.8860002, 0.25435162, 0.7314984, 0.95627284, 0.7417731],
            [0.18060002, 0.45882288, 0.9690947, 0.70271283, 0.91851914, 0.21997769],
            [0.74909705, 0.3491095, 0.37622157, 0.14328648, 0.68727154, 0.91439056],
            [0.3781238, 0.36442432, 0.625257, 0.9480976, 0.41873357, 0.25687808],
            [0.43647116, 0.08090039, 0.99664134, 0.6407154, 0.19121103, 0.5287279]
        ]
    ];

    let kernel21: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.29444507, 0.9671642, 0.95850575, 0.6382999, 0.49220118, 0.31319898, 0.8417525,
            0.20135997, 0.57593447, 0.24550702, 0.799053, 0.8240507, 0.5005919, 0.60974807,
            0.8095447, 0.44898897, 0.25492424, 0.7018395, 0.8754091, 0.05473179, 0.5868046,
            0.6224484, 0.77621484, 0.24274388, 0.36183158, 0.69954115, 0.58241343, 0.775589,
            0.20102102, 0.9031762, 0.5125449, 0.959262, 0.23300357, 0.9414587, 0.40562743,
            0.8085596, 0.9532204, 0.29777643, 0.7735656, 0.937352, 0.82510734, 0.34135282,
            0.6993321, 0.5874371, 0.76145005, 0.341333, 0.82243276, 0.50450677, 0.14624618,
            0.31383017, 0.6729072, 0.24969168, 0.11803117, 0.3309161,
        ],
    )
    .unwrap();
    let conv_layer21 = ConvolutionLayer::new(kernel21, 1, Padding::Valid);
    let target_output21: Array3<f32> = array![
        [
            [7.8113303, 7.710287, 8.212259, 8.397281],
            [8.044505, 7.981445, 7.7428756, 8.189635],
            [8.3870125, 7.186244, 7.264162, 7.954885],
            [8.620295, 7.6293893, 6.929604, 6.9616847]
        ],
        [
            [8.673981, 7.9314113, 7.9001184, 8.060155],
            [7.035417, 7.1479073, 6.8903165, 9.086775],
            [8.155234, 7.091531, 7.060621, 7.1469173],
            [8.311455, 7.0946336, 7.044162, 7.446338]
        ]
    ];
    let current_output21: Array3<f32> = conv_layer21.convolve(&test_input21);

    assert!(
        arr_allclose(&current_output21, &target_output21),
        "{:?} was not equal to {:?}",
        current_output21,
        target_output21
    );

    let test_input22 = array![
        [
            [0.67546684, 0.412044, 0.8994237, 0.69459295, 0.95296425, 0.8826578],
            [0.6112075, 0.88056743, 0.4120727, 0.42224765, 0.40275672, 0.31289253],
            [0.85605, 0.50402254, 0.594723, 0.28942943, 0.1757779, 0.7137983],
            [0.9091735, 0.3410004, 0.7846004, 0.9584728, 0.59341496, 0.85196227],
            [0.11542477, 0.070237, 0.8144841, 0.5670808, 0.84016347, 0.10123584],
            [0.005051, 0.55897933, 0.5162179, 0.76241785, 0.01278013, 0.5541978]
        ],
        [
            [0.32411024, 0.8408538, 0.8364367, 0.8441607, 0.72987187, 0.44925806],
            [0.96117723, 0.9483631, 0.27696642, 0.96611446, 0.19091433, 0.2396215],
            [0.27247688, 0.5852498, 0.38096267, 0.4529504, 0.88774997, 0.82603574],
            [0.80568945, 0.32917508, 0.7272445, 0.7469263, 0.42636782, 0.43363968],
            [0.13354255, 0.35689688, 0.99201185, 0.68718493, 0.55920875, 0.2636],
            [0.5576874, 0.35369453, 0.5906877, 0.07249359, 0.4782056, 0.04795831]
        ],
        [
            [0.3949699, 0.76511306, 0.38108206, 0.40802577, 0.07076582, 0.8213124],
            [0.3876701, 0.8974017, 0.69025475, 0.04551166, 0.4437527, 0.6389319],
            [0.19161025, 0.97299683, 0.29591832, 0.19683413, 0.5229589, 0.8461087],
            [0.79286724, 0.17503856, 0.48829708, 0.66009414, 0.9874962, 0.02657376],
            [0.5618466, 0.27853093, 0.6685596, 0.73198694, 0.27009216, 0.9657689],
            [0.9025137, 0.9429427, 0.05157892, 0.45541912, 0.76319754, 0.5815242]
        ]
    ];

    let kernel22: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.27330735, 0.4754852, 0.42322084, 0.6104503, 0.5641086, 0.4523076, 0.826404,
            0.63504064, 0.03638967, 0.97521317, 0.24505253, 0.783278, 0.8729103, 0.46475387,
            0.10122171, 0.1555473, 0.30789322, 0.28579375, 0.10987341, 0.9489551, 0.18260308,
            0.16017109, 0.9057766, 0.4556152, 0.74999446, 0.29006037, 0.8912908, 0.9255381,
            0.2879088, 0.46463865, 0.17197818, 0.36331993, 0.11709648, 0.16491044, 0.61829454,
            0.03939039, 0.74658084, 0.06899712, 0.93920064, 0.70967704, 0.13435428, 0.44194368,
            0.8464018, 0.6827511, 0.5111061, 0.03558233, 0.293519, 0.36432305, 0.46089745,
            0.07875007, 0.18781203, 0.45979473, 0.9853486, 0.24345838, 0.5696929, 0.6987018,
            0.43612492, 0.21574858, 0.79154646, 0.3409378, 0.8011893, 0.03917093, 0.3181057,
            0.5544905, 0.8326181, 0.19166702, 0.9119313, 0.47873196, 0.14053226, 0.17711017,
            0.8877225, 0.48469457, 0.47707382, 0.3038908, 0.4188041, 0.8815459, 0.7843472,
            0.46112144, 0.99977493, 0.07862057, 0.29750833, 0.8497178, 0.15406865, 0.30595168,
            0.86021405, 0.8169458, 0.24658875, 0.52609015, 0.6585233, 0.23691536, 0.18986696,
            0.68702215, 0.08647749, 0.79093266, 0.07998312, 0.82895696, 0.00698695, 0.00922728,
            0.66896224, 0.8589006, 0.23429064, 0.15408872, 0.5532242, 0.9237121, 0.07132971,
            0.06818328, 0.98673576, 0.1119092, 0.7087876, 0.4099887, 0.5665328, 0.34663445,
            0.6168495, 0.09687401, 0.4641384, 0.38600448, 0.33855647, 0.5181164, 0.93982804,
            0.02956773, 0.14173116, 0.14280626, 0.53910846, 0.33559954, 0.73433584, 0.94584274,
            0.18853948, 0.24325794, 0.00414109, 0.89171886, 0.6090657, 0.03541405, 0.62332,
            0.6065011, 0.49427044, 0.75747067, 0.3931895, 0.10088859, 0.56360936, 0.38735756,
            0.46490034, 0.31810585, 0.83375126, 0.49555323, 0.11328588, 0.12655611, 0.1767692,
            0.23459193, 0.7388162, 0.48477763,
        ],
    )
    .unwrap();
    let conv_layer22 = ConvolutionLayer::new(kernel22, 1, Padding::Valid);
    let target_output22: Array3<f32> = array![
        [[17.912668, 20.749947], [19.245228, 17.658638]],
        [[20.517385, 18.642073], [17.686144, 17.769003]]
    ];
    let current_output22: Array3<f32> = conv_layer22.convolve(&test_input22);

    assert!(
        arr_allclose(&current_output22, &target_output22),
        "{:?} was not equal to {:?}",
        current_output22,
        target_output22
    );

    let test_input23 = array![
        [
            [0.00624699, 0.81573004, 0.6482149, 0.53025377, 0.12299971, 0.5933358],
            [0.8846656, 0.9335431, 0.0064692, 0.61633664, 0.11189567, 0.88115114],
            [0.4513792, 0.59758914, 0.3575447, 0.43116546, 0.96428144, 0.650084],
            [0.23165825, 0.3510245, 0.20369534, 0.8661392, 0.6331485, 0.6773803],
            [0.85136724, 0.55736136, 0.57193863, 0.95459735, 0.34878272, 0.8226108],
            [0.3321073, 0.92109436, 0.3895538, 0.03470363, 0.23551573, 0.29478395]
        ],
        [
            [0.6286288, 0.70090973, 0.5717835, 0.0984337, 0.06295575, 0.27819812],
            [0.33805057, 0.0900248, 0.9791513, 0.9759571, 0.662313, 0.93577164],
            [0.21412608, 0.26163143, 0.41482434, 0.8888871, 0.67385226, 0.1288117],
            [0.01380609, 0.375879, 0.9617992, 0.818001, 0.83272296, 0.966571],
            [0.03105091, 0.02805966, 0.9242484, 0.19825369, 0.04700416, 0.49845085],
            [0.9764468, 0.7710321, 0.854895, 0.623576, 0.09116793, 0.694041]
        ],
        [
            [0.21567076, 0.8734742, 0.16271727, 0.82271063, 0.7953895, 0.70772564],
            [0.66772455, 0.08626243, 0.52760124, 0.5431996, 0.47249612, 0.61019063],
            [0.21063799, 0.57292384, 0.5686212, 0.5989078, 0.18009396, 0.6034601],
            [0.45430455, 0.7931324, 0.17212614, 0.04731771, 0.58803684, 0.59957683],
            [0.388052, 0.80824125, 0.43400672, 0.3165235, 0.89200944, 0.02590412],
            [0.5381227, 0.8660679, 0.07690383, 0.7447061, 0.13018292, 0.0967541]
        ]
    ];

    let kernel23: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.8266735, 0.11757887, 0.87975013, 0.8921432, 0.05703124, 0.58673537, 0.8810783,
            0.76902574, 0.6024187, 0.53194064, 0.31502706, 0.56150496, 0.6381789, 0.8630159,
            0.86002535, 0.5230941, 0.8005311, 0.7742759, 0.7541534, 0.7172452, 0.18392335,
            0.8595507, 0.45872805, 0.82358676, 0.7566894, 0.24422543, 0.36607084, 0.10110632,
            0.0491925, 0.10031959, 0.6169217, 0.451316, 0.07585676, 0.23233427, 0.09277638,
            0.90410787, 0.47732064, 0.6581925, 0.39872772, 0.12023476, 0.85842836, 0.40513718,
            0.8614371, 0.59222096, 0.41190186, 0.1809689, 0.9890798, 0.6829663, 0.26042402,
            0.88240683, 0.05508777, 0.7472844, 0.9304254, 0.19189753, 0.24171719, 0.35687554,
            0.8465622, 0.06790887, 0.98901117, 0.60042983, 0.99100995, 0.21088907, 0.44280005,
            0.7998495, 0.9782188, 0.30464408, 0.4856008, 0.37103122, 0.82877624, 0.43725935,
            0.3628767, 0.27266598, 0.5233105, 0.8143526, 0.51675713, 0.00767931, 0.08762363,
            0.4469587, 0.22412036, 0.6139959, 0.38990366, 0.3569205, 0.2852155, 0.37045264,
            0.6437402, 0.15851368, 0.52739674, 0.9543389, 0.8116843, 0.69702214, 0.05274187,
            0.17473145, 0.90144795, 0.80124223, 0.9105007, 0.8556412, 0.77320266, 0.76575243,
            0.29054287, 0.5551452, 0.47754803, 0.24363868, 0.5594282, 0.5368815, 0.78280455,
            0.5919785, 0.0383365, 0.24124639, 0.42484194, 0.8693754, 0.24201743, 0.43933925,
            0.1983508, 0.6879206, 0.9464669, 0.8584512, 0.82864845, 0.28797778, 0.05390601,
            0.29969904, 0.5768042, 0.24298015, 0.2304093, 0.88391197, 0.10910437, 0.30187264,
            0.08178072, 0.09035328, 0.45287937, 0.4721017, 0.9651153, 0.9883213, 0.14329627,
            0.36564678, 0.8875286, 0.46153438, 0.5524299, 0.15768081, 0.594579, 0.38164645,
            0.00721753, 0.41349155, 0.0877872, 0.29753333, 0.7022435, 0.69780505, 0.4846638,
            0.6974145, 0.579024, 0.33856305,
        ],
    )
    .unwrap();
    let conv_layer23 = ConvolutionLayer::new(kernel23, 1, Padding::Valid);
    let target_output23: Array3<f32> = array![
        [[19.790613, 21.287176], [21.476217, 21.346443]],
        [[17.64559, 19.581787], [18.724354, 19.020988]]
    ];
    let current_output23: Array3<f32> = conv_layer23.convolve(&test_input23);

    assert!(
        arr_allclose(&current_output23, &target_output23),
        "{:?} was not equal to {:?}",
        current_output23,
        target_output23
    );

    let test_input24 = array![
        [
            [0.4310923, 0.7074267, 0.6056931, 0.43765876, 0.417855, 0.5549018],
            [0.655004, 0.3268639, 0.47542888, 0.81072354, 0.48937833, 0.40227205],
            [0.05504967, 0.12310848, 0.88188004, 0.9157668, 0.28533912, 0.24235713],
            [0.6903243, 0.05488254, 0.9355463, 0.17318112, 0.356957, 0.41477197],
            [0.58704966, 0.19057809, 0.26191843, 0.9363978, 0.30951205, 0.44510987],
            [0.09438256, 0.03161661, 0.33316013, 0.10716959, 0.42792627, 0.4525564]
        ],
        [
            [0.43717158, 0.04574655, 0.19430637, 0.47719213, 0.8179389, 0.6715673],
            [0.09111205, 0.77552783, 0.31814525, 0.00102462, 0.122188, 0.84508294],
            [0.02137936, 0.00158825, 0.12094665, 0.91879827, 0.30878848, 0.45707443],
            [0.09853197, 0.70532215, 0.38260135, 0.21472165, 0.22671694, 0.18007399],
            [0.2950183, 0.3653109, 0.3693467, 0.42698747, 0.1389484, 0.68366706],
            [0.36583102, 0.8738241, 0.562216, 0.9334109, 0.48052302, 0.99052715]
        ],
        [
            [0.2241604, 0.62335473, 0.9464095, 0.45312902, 0.03511541, 0.61512816],
            [0.49298653, 0.77209026, 0.52555007, 0.5109687, 0.22519495, 0.43985215],
            [0.26612982, 0.75761557, 0.13906257, 0.8513396, 0.12668495, 0.7712829],
            [0.43307763, 0.34688666, 0.4838589, 0.77769446, 0.18250434, 0.9827863],
            [0.46143153, 0.93977064, 0.1444909, 0.1281546, 0.7072368, 0.60059834],
            [0.60821444, 0.29876906, 0.3353904, 0.8606402, 0.6958078, 0.04395659]
        ]
    ];

    let kernel24: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.71055365, 0.14740174, 0.673529, 0.7946653, 0.24183853, 0.43487665, 0.7551387,
            0.23145947, 0.06738389, 0.47117367, 0.05636088, 0.6478343, 0.10347797, 0.8065446,
            0.8971257, 0.3808534, 0.903793, 0.32565016, 0.8407575, 0.4244338, 0.28572702,
            0.82775307, 0.08149401, 0.60480595, 0.36674044, 0.93380785, 0.19252698, 0.6453951,
            0.74729836, 0.10814751, 0.05581366, 0.15413615, 0.8825847, 0.2233036, 0.22905576,
            0.3326902, 0.6635084, 0.14642915, 0.9296237, 0.37137195, 0.19031978, 0.56865096,
            0.72865623, 0.90232325, 0.79606473, 0.8158052, 0.37304193, 0.04374503, 0.09306768,
            0.31310067, 0.01515595, 0.02814319, 0.59322685, 0.21080038, 0.58264214, 0.50119185,
            0.2631662, 0.5603199, 0.4226413, 0.83183694, 0.4210294, 0.59479696, 0.3830422,
            0.8097079, 0.27672654, 0.41320488, 0.63317853, 0.41356984, 0.7049378, 0.5116681,
            0.12281225, 0.59174454, 0.09240989, 0.00396548, 0.01080465, 0.9117777, 0.70965314,
            0.42676452, 0.54765993, 0.23543635, 0.56912595, 0.5038018, 0.15739693, 0.9163098,
            0.7827338, 0.31307653, 0.32534242, 0.37213182, 0.13412596, 0.27640048, 0.36317897,
            0.9826564, 0.82000726, 0.5467569, 0.8525934, 0.6142756, 0.22001709, 0.85722613,
            0.01006908, 0.40403318, 0.90260816, 0.79887706, 0.93520576, 0.72924787, 0.366542,
            0.02638636, 0.82638884, 0.17851174, 0.09597177, 0.3444951, 0.3734779, 0.8839653,
            0.21561022, 0.88961375, 0.2710384, 0.46563995, 0.33996934, 0.48349917, 0.40697718,
            0.24516417, 0.26794037, 0.20307006, 0.88704216, 0.04155758, 0.7258184, 0.88177705,
            0.39099365, 0.5885291, 0.12833528, 0.1795904, 0.31323937, 0.7053773, 0.14435844,
            0.73019654, 0.12226541, 0.08686391, 0.68739474, 0.90021485, 0.92300737, 0.33046693,
            0.94399136, 0.7065151, 0.03333719, 0.17525117, 0.32966596, 0.32823455, 0.3759951,
            0.8528545, 0.29594678, 0.05479572,
        ],
    )
    .unwrap();
    let conv_layer24 = ConvolutionLayer::new(kernel24, 1, Padding::Valid);
    let target_output24: Array3<f32> = array![
        [[14.863412, 13.759807], [14.615144, 15.227443]],
        [[14.460602, 16.663609], [13.983665, 15.98152]]
    ];
    let current_output24: Array3<f32> = conv_layer24.convolve(&test_input24);

    assert!(
        arr_allclose(&current_output24, &target_output24),
        "{:?} was not equal to {:?}",
        current_output24,
        target_output24
    );

    let test_input25 = array![
        [
            [
                0.52210695, 0.6150934, 0.33898464, 0.45874897, 0.9551208, 0.19136074, 0.30594054,
                0.8241661, 0.07202522, 0.19128811, 0.8797602, 0.69522935, 0.10557687, 0.28930026,
                0.96985734
            ],
            [
                0.8539295, 0.24404159, 0.32723787, 0.7744034, 0.90784407, 0.05255083, 0.498845,
                0.79299563, 0.6158064, 0.3335043, 0.36077332, 0.98458624, 0.9600367, 0.2025786,
                0.733241
            ],
            [
                0.7670707, 0.6831582, 0.29468352, 0.14075516, 0.98014617, 0.82414293, 0.8532558,
                0.37661108, 0.04301855, 0.2752744, 0.6303967, 0.7281102, 0.2171505, 0.7291574,
                0.14437845
            ],
            [
                0.34656417, 0.9541668, 0.74494994, 0.31254604, 0.14618637, 0.91551375, 0.65795493,
                0.10943547, 0.71428937, 0.43690363, 0.03292517, 0.9026258, 0.29801482, 0.22947553,
                0.11439011
            ],
            [
                0.96802235, 0.4287567, 0.6583277, 0.04040552, 0.38902923, 0.12675387, 0.8050715,
                0.49352488, 0.9127804, 0.3541732, 0.8519433, 0.16551489, 0.3333164, 0.03959658,
                0.25632858
            ],
            [
                0.18771167, 0.03075815, 0.43225557, 0.69072247, 0.5568704, 0.38795924, 0.52294713,
                0.0789768, 0.42246845, 0.95906556, 0.15887408, 0.03306201, 0.26331437, 0.2304746,
                0.6584057
            ],
            [
                0.4095963, 0.37286273, 0.16103324, 0.63719285, 0.23002648, 0.10749894, 0.01513924,
                0.5023638, 0.5533162, 0.52681637, 0.75766635, 0.79183036, 0.26611277, 0.60754436,
                0.47772342
            ],
            [
                0.71567196, 0.5942683, 0.01671847, 0.3565012, 0.7159743, 0.30294093, 0.47319987,
                0.2910204, 0.16295868, 0.25027466, 0.6572299, 0.73934627, 0.42323235, 0.5813263,
                0.5468596
            ],
            [
                0.15655027, 0.7337421, 0.70144874, 0.74292475, 0.07253607, 0.7101941, 0.23257384,
                0.7575536, 0.43969592, 0.25122383, 0.21266471, 0.12251099, 0.06464646, 0.325024,
                0.556819
            ],
            [
                0.17499126, 0.28275678, 0.9586377, 0.7768914, 0.87225235, 0.55172807, 0.23772797,
                0.15089212, 0.0740529, 0.7328364, 0.9986837, 0.59491575, 0.45983207, 0.3990066,
                0.80979043
            ]
        ],
        [
            [
                0.6023438, 0.23236814, 0.5701668, 0.78067493, 0.5881804, 0.8406687, 0.8511978,
                0.44152674, 0.9640743, 0.25130445, 0.7229711, 0.91174835, 0.23464549, 0.45670658,
                0.13737752
            ],
            [
                0.74257755, 0.7431825, 0.8498817, 0.47136632, 0.6841086, 0.16184397, 0.29081446,
                0.47393435, 0.6794256, 0.756347, 0.3897357, 0.5517178, 0.6615687, 0.02713268,
                0.04588867
            ],
            [
                0.45551613, 0.6664801, 0.85157114, 0.85626125, 0.27240536, 0.9190075, 0.701437,
                0.67640066, 0.12136482, 0.0267396, 0.12444576, 0.2626654, 0.30699563, 0.75221896,
                0.29435056
            ],
            [
                0.99010134, 0.84239453, 0.99503726, 0.43238705, 0.09028576, 0.49814487, 0.83047026,
                0.9565582, 0.5576436, 0.04750107, 0.5884901, 0.826362, 0.74622726, 0.6898572,
                0.2553315
            ],
            [
                0.3207074, 0.69673246, 0.95566136, 0.36515298, 0.57477367, 0.8958077, 0.18574312,
                0.04084096, 0.32315838, 0.43012723, 0.34473136, 0.251939, 0.45628268, 0.7774604,
                0.40238795
            ],
            [
                0.4778858, 0.38190666, 0.443126, 0.70348734, 0.68944603, 0.6902452, 0.14189826,
                0.29317725, 0.71652186, 0.15285546, 0.13075079, 0.16711909, 0.15727986, 0.8428172,
                0.22742087
            ],
            [
                0.6715706, 0.2795822, 0.48898628, 0.5339775, 0.726385, 0.7930301, 0.2581999,
                0.8415604, 0.562384, 0.13921387, 0.78449273, 0.72191995, 0.45631656, 0.86304337,
                0.73805946
            ],
            [
                0.27518228, 0.9828262, 0.59191656, 0.5271378, 0.33997726, 0.60102206, 0.81581175,
                0.7040396, 0.5199952, 0.01479205, 0.16784889, 0.7692465, 0.3092633, 0.17081867,
                0.32220426
            ],
            [
                0.0631674, 0.6282157, 0.2581846, 0.7893134, 0.61240184, 0.42240703, 0.355786,
                0.44447815, 0.09476027, 0.3878751, 0.64234614, 0.11175825, 0.15909617, 0.95026743,
                0.2965687
            ],
            [
                0.28795037, 0.62251085, 0.8305602, 0.3662946, 0.14521246, 0.9621208, 0.38020673,
                0.3510485, 0.28524187, 0.24482581, 0.6677257, 0.33922875, 0.39850447, 0.71123666,
                0.12899092
            ]
        ],
        [
            [
                0.20002392, 0.28950065, 0.51984864, 0.8138102, 0.47504795, 0.04588939, 0.8773192,
                0.38872027, 0.5195077, 0.39854062, 0.62001854, 0.65982074, 0.5982146, 0.47519284,
                0.33859882
            ],
            [
                0.9444382, 0.0306461, 0.780418, 0.2987932, 0.38890767, 0.90099066, 0.96019644,
                0.72834367, 0.47645757, 0.11874896, 0.37567437, 0.29212236, 0.06723779, 0.80878776,
                0.02181397
            ],
            [
                0.6842329, 0.3131931, 0.8392736, 0.52595836, 0.44448686, 0.22366077, 0.40568367,
                0.56091106, 0.6737573, 0.94759494, 0.72837055, 0.09959164, 0.74566257, 0.98712695,
                0.9106491
            ],
            [
                0.6754568, 0.3434271, 0.16594417, 0.5073427, 0.8893203, 0.7052375, 0.17178877,
                0.9222505, 0.4350043, 0.6443613, 0.27200705, 0.0902301, 0.5126913, 0.89290726,
                0.5261063
            ],
            [
                0.16912474, 0.5962988, 0.3090088, 0.7484168, 0.02147577, 0.57611835, 0.9103308,
                0.32406485, 0.5274155, 0.5261415, 0.22837397, 0.9573879, 0.6485293, 0.72181726,
                0.29511455
            ],
            [
                0.88639265, 0.5188661, 0.7846497, 0.48298272, 0.03431003, 0.85404575, 0.48577386,
                0.34614396, 0.03888219, 0.94362164, 0.15117891, 0.58509, 0.39590272, 0.32108444,
                0.03719785
            ],
            [
                0.9103236, 0.23605917, 0.7769166, 0.5013731, 0.64956135, 0.25076696, 0.03015263,
                0.43133247, 0.6384559, 0.09313619, 0.8692138, 0.91970456, 0.8316374, 0.8193103,
                0.01831975
            ],
            [
                0.09057815, 0.6877077, 0.11799596, 0.42855334, 0.13702092, 0.31660682, 0.32806376,
                0.7646719, 0.10952926, 0.20828883, 0.49984223, 0.45089912, 0.94342923, 0.45052946,
                0.97337824
            ],
            [
                0.9276395, 0.44235066, 0.37731636, 0.9682662, 0.5712741, 0.3144015, 0.774386,
                0.76916295, 0.89676636, 0.5271335, 0.23638117, 0.6929939, 0.64519554, 0.57768893,
                0.68271434
            ],
            [
                0.6223563, 0.05298517, 0.53959036, 0.53110784, 0.7490009, 0.2896578, 0.41068247,
                0.28178045, 0.20798713, 0.13728051, 0.30110443, 0.78129905, 0.29452822, 0.9245769,
                0.03675647
            ]
        ]
    ];

    let kernel25: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.98098063, 0.23334436, 0.23608343, 0.41920665, 0.8124901, 0.21013618, 0.4967516,
            0.89210486, 0.70305294, 0.5954175, 0.65956026, 0.5153227, 0.6557143, 0.6571122,
            0.21312988, 0.35081705, 0.30685803, 0.76970625, 0.4660024, 0.9814129, 0.38562468,
            0.57522744, 0.72268397, 0.16640656, 0.47564268, 0.76217693, 0.72122115, 0.12195553,
            0.35525572, 0.3370403, 0.63552475, 0.4688829, 0.00794073, 0.7960696, 0.29161337,
            0.6951719, 0.9923433, 0.98428434, 0.12298316, 0.47023433, 0.44344074, 0.09544598,
            0.5810784, 0.7015651, 0.01947077, 0.42390975, 0.8474201, 0.39561588, 0.8106476,
            0.50578433, 0.39524126, 0.5950288, 0.53040797, 0.43079308,
        ],
    )
    .unwrap();
    let conv_layer25 = ConvolutionLayer::new(kernel25, 1, Padding::Valid);
    let target_output25: Array3<f32> = array![
        [
            [
                8.114048, 7.7552133, 9.218271, 8.264913, 8.527105, 8.692122, 8.194703, 7.408481,
                6.605591, 6.9960933, 8.110966, 7.938053, 6.044941
            ],
            [
                9.392286, 7.7393074, 8.488802, 8.567844, 8.563063, 8.429907, 8.022871, 7.551061,
                6.767626, 7.1050215, 7.0313735, 8.108888, 7.676784
            ],
            [
                9.378745, 8.223549, 7.3470545, 7.648588, 8.865778, 8.420981, 8.21995, 7.4042745,
                5.9083004, 6.296308, 6.794808, 7.738269, 7.2102914
            ],
            [
                8.1663, 8.551028, 7.0302444, 7.3201466, 7.1935296, 8.119246, 7.759343, 7.2300606,
                6.3033204, 6.344971, 5.603993, 7.6337757, 6.3335037
            ],
            [
                8.028676, 7.68682, 7.831067, 6.844728, 6.6320972, 6.9061527, 6.175341, 6.755565,
                7.7734833, 6.7696824, 6.5126905, 7.098264, 6.447478
            ],
            [
                6.5088944, 6.899986, 7.3706207, 7.19554, 6.5342813, 6.2503633, 5.9480443, 6.248555,
                6.7843804, 7.599709, 7.5241613, 7.4424067, 7.4847817
            ],
            [
                6.4248405, 7.736628, 6.5622187, 7.2730546, 5.9412494, 6.820971, 6.5272083,
                6.561917, 6.0128093, 6.931888, 8.286294, 8.669504, 8.009676
            ],
            [
                8.112205, 8.279827, 7.377205, 7.7515635, 7.014096, 7.1301804, 7.044454, 6.038024,
                5.737133, 6.1425967, 6.661842, 7.648835, 7.1807094
            ]
        ],
        [
            [
                7.152315, 6.313116, 8.523958, 6.894669, 6.956143, 7.29689, 7.509652, 6.356782,
                7.0885735, 6.9737964, 6.5976133, 6.7247, 5.531487
            ],
            [
                7.531254, 7.2855916, 7.7701483, 7.392632, 7.08128, 7.599459, 7.338201, 6.37225,
                5.2313814, 6.186977, 5.802145, 6.181441, 6.2669044
            ],
            [
                8.0815115, 7.107593, 6.999028, 6.8145866, 7.290601, 7.952107, 7.1170883, 6.4780583,
                6.169568, 5.398483, 5.853801, 6.9700546, 6.821889
            ],
            [
                7.864442, 7.1931796, 6.3731704, 6.648844, 6.5670257, 6.697236, 6.697672, 6.556389,
                5.320061, 5.607002, 5.7185187, 6.535386, 6.05188
            ],
            [
                6.6021795, 6.6559277, 6.549052, 6.170261, 5.8494577, 6.4231825, 5.1921444,
                5.438444, 6.1040874, 5.9832177, 5.241401, 6.321243, 5.1972637
            ],
            [
                6.114563, 6.226436, 6.6689744, 6.3726654, 5.903892, 5.518159, 4.5934215, 5.848192,
                6.32056, 5.306879, 6.501103, 7.1101017, 6.393403
            ],
            [
                6.0069246, 6.9211516, 5.9044385, 6.42515, 5.0051093, 6.5330873, 6.5123935,
                6.1597176, 5.438675, 6.187058, 7.2340765, 7.569567, 7.151419
            ],
            [
                5.8978496, 7.010077, 6.8969193, 6.7399855, 5.9491324, 6.199845, 5.922096, 5.400969,
                5.1019373, 5.521555, 5.9100704, 6.688755, 6.438309
            ]
        ]
    ];
    let current_output25: Array3<f32> = conv_layer25.convolve(&test_input25);

    assert!(
        arr_allclose(&current_output25, &target_output25),
        "{:?} was not equal to {:?}",
        current_output25,
        target_output25
    );

    let test_input26 = array![
        [
            [
                0.654422, 0.58761567, 0.37502283, 0.90727985, 0.26554954, 0.2605517, 0.23161498,
                0.854641, 0.9064802, 0.23253885, 0.46258068, 0.13830437, 0.9976838, 0.20947075,
                0.34793916
            ],
            [
                0.42308012, 0.80669975, 0.9909294, 0.5385484, 0.6860896, 0.41847235, 0.01959337,
                0.18082424, 0.77819145, 0.45446303, 0.21870646, 0.16891658, 0.82196736, 0.5676109,
                0.05080688
            ],
            [
                0.2716982, 0.58699363, 0.48444232, 0.05775462, 0.48720175, 0.9867899, 0.8741793,
                0.24787006, 0.0098169, 0.54290944, 0.76660496, 0.24225757, 0.90794486, 0.60486084,
                0.60724497
            ],
            [
                0.39451823, 0.7739118, 0.5582184, 0.33135027, 0.4382807, 0.8527415, 0.4187059,
                0.20756939, 0.5130793, 0.712934, 0.02912598, 0.63142025, 0.24492879, 0.23688388,
                0.45396152
            ],
            [
                0.85629207, 0.09939361, 0.6076978, 0.6953572, 0.4813676, 0.11385565, 0.9717235,
                0.39455086, 0.89547807, 0.50680614, 0.55472255, 0.52786833, 0.6554322, 0.13498625,
                0.99620885
            ],
            [
                0.44649956, 0.35815725, 0.0504973, 0.7412536, 0.80308986, 0.7371504, 0.5041107,
                0.7861993, 0.909113, 0.81976044, 0.57626015, 0.10905766, 0.50362575, 0.31622592,
                0.1279444
            ],
            [
                0.6300257, 0.09109604, 0.99397695, 0.45099398, 0.39270082, 0.8857335, 0.84918076,
                0.78383875, 0.72278243, 0.08929764, 0.618867, 0.07829133, 0.05534032, 0.12900938,
                0.33450192
            ],
            [
                0.5303596, 0.9028811, 0.01493673, 0.6052495, 0.68300223, 0.35303903, 0.8103337,
                0.52984565, 0.15128084, 0.43051603, 0.28059772, 0.00891489, 0.18607458, 0.11024449,
                0.57106304
            ],
            [
                0.34088475, 0.51521796, 0.4551737, 0.538391, 0.12089491, 0.08433874, 0.40649992,
                0.29841897, 0.58305657, 0.10433917, 0.66390544, 0.731435, 0.29792643, 0.28624305,
                0.43092483
            ],
            [
                0.1289603, 0.22165331, 0.46406323, 0.68809766, 0.9536923, 0.17606957, 0.55071187,
                0.53072673, 0.10455144, 0.9571631, 0.55495816, 0.13288063, 0.44437656, 0.96837336,
                0.5063528
            ]
        ],
        [
            [
                0.33095863, 0.49653715, 0.7990719, 0.43818596, 0.2760564, 0.5976553, 0.6921513,
                0.03501531, 0.96888334, 0.44027686, 0.5722288, 0.6860908, 0.354391, 0.3030436,
                0.91172963
            ],
            [
                0.8522385, 0.20780124, 0.6851016, 0.81079435, 0.6578895, 0.20630272, 0.8371248,
                0.03656635, 0.18088074, 0.15876009, 0.67578596, 0.8514548, 0.29569438, 0.51335657,
                0.14092551
            ],
            [
                0.43087652, 0.18927561, 0.3548947, 0.01398679, 0.39191842, 0.39567924, 0.41219148,
                0.4657539, 0.03120668, 0.55167097, 0.5203346, 0.926732, 0.11640227, 0.67949796,
                0.814399
            ],
            [
                0.42586836, 0.26620805, 0.14920756, 0.44614497, 0.8829611, 0.9057288, 0.45508063,
                0.20021324, 0.5888296, 0.8516371, 0.49246776, 0.5599716, 0.19181061, 0.49670485,
                0.42133403
            ],
            [
                0.76669574, 0.82822984, 0.6677539, 0.23404987, 0.6708753, 0.8758087, 0.75492734,
                0.31395626, 0.2690143, 0.67623514, 0.6921552, 0.31035745, 0.03603773, 0.9852127,
                0.19921382
            ],
            [
                0.9498278, 0.02897831, 0.86107606, 0.00293741, 0.35674444, 0.4191397, 0.55641156,
                0.6335109, 0.80903274, 0.7214805, 0.95258534, 0.94602233, 0.07761287, 0.17759776,
                0.15542968
            ],
            [
                0.08167998, 0.76193047, 0.34140688, 0.34813985, 0.56429654, 0.69079584, 0.651287,
                0.24776831, 0.9236739, 0.09322322, 0.8466656, 0.38427126, 0.33815342, 0.838805,
                0.38096663
            ],
            [
                0.28034258, 0.78340423, 0.46203193, 0.06838121, 0.1979319, 0.01351135, 0.02116127,
                0.99872667, 0.7154567, 0.23737086, 0.39736098, 0.33884785, 0.4431885, 0.5957428,
                0.996507
            ],
            [
                0.31276718, 0.55529255, 0.03822044, 0.19699456, 0.15296015, 0.59906757, 0.1499156,
                0.9981424, 0.8831124, 0.49506864, 0.44003266, 0.22884977, 0.5272041, 0.9282255,
                0.95730776
            ],
            [
                0.71256125, 0.8957009, 0.38429326, 0.82745576, 0.92134255, 0.53414553, 0.25444788,
                0.77232087, 0.6597538, 0.5645497, 0.99726844, 0.43203548, 0.00600106, 0.52825713,
                0.616231
            ]
        ],
        [
            [
                0.37373173, 0.6094103, 0.94719636, 0.15018035, 0.15040922, 0.6584785, 0.64733315,
                0.919175, 0.3072559, 0.44643322, 0.78549147, 0.06808019, 0.21689764, 0.6783678,
                0.3608854
            ],
            [
                0.80487376, 0.6568672, 0.89588594, 0.4669414, 0.45783395, 0.4953162, 0.5716346,
                0.75915194, 0.97228986, 0.15172002, 0.17699589, 0.8860516, 0.6795675, 0.48570013,
                0.35189822
            ],
            [
                0.8219524, 0.15438259, 0.13443872, 0.3553907, 0.7353281, 0.6681931, 0.43805563,
                0.85423166, 0.20878878, 0.4212191, 0.55199236, 0.29546982, 0.303067, 0.26091522,
                0.1684874
            ],
            [
                0.31500933, 0.4912706, 0.2643653, 0.70298517, 0.02333054, 0.2235733, 0.9389992,
                0.47618693, 0.59889996, 0.85897654, 0.9397661, 0.44621915, 0.10366015, 0.67701244,
                0.6850384
            ],
            [
                0.8534153, 0.0080629, 0.97007126, 0.7702405, 0.9848203, 0.7094253, 0.5238351,
                0.9446217, 0.7254593, 0.03957006, 0.50038505, 0.81599206, 0.5390226, 0.16336593,
                0.10756692
            ],
            [
                0.7139447, 0.9721884, 0.0762892, 0.5842812, 0.5351153, 0.79290223, 0.04526648,
                0.24217102, 0.83993906, 0.4007092, 0.49337667, 0.3964408, 0.9322157, 0.6427077,
                0.97430724
            ],
            [
                0.75798357, 0.753834, 0.5777924, 0.49516845, 0.26018232, 0.55985487, 0.31415004,
                0.09454908, 0.3642707, 0.8198366, 0.10928579, 0.9209781, 0.21587123, 0.70533997,
                0.80549437
            ],
            [
                0.09335517, 0.99226147, 0.7521283, 0.6306182, 0.9812565, 0.13854095, 0.74512017,
                0.5559971, 0.5549817, 0.6562062, 0.4673331, 0.6193884, 0.01808522, 0.257344,
                0.02719511
            ],
            [
                0.19508527, 0.534297, 0.6844804, 0.41928288, 0.34004238, 0.32895055, 0.2017956,
                0.42835027, 0.58563495, 0.40216792, 0.67188007, 0.45354384, 0.7485446, 0.22695023,
                0.9923889
            ],
            [
                0.9421077, 0.01525365, 0.29330772, 0.3258292, 0.80696934, 0.8541269, 0.6592291,
                0.41289273, 0.91647804, 0.86060405, 0.39086932, 0.02057635, 0.86474377, 0.5756082,
                0.03237247
            ]
        ]
    ];

    let kernel26: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.7064923, 0.02047214, 0.36176983, 0.45497388, 0.13223803, 0.611323, 0.7426373,
            0.15597425, 0.5831064, 0.19121489, 0.6887593, 0.10666531, 0.69197804, 0.2962676,
            0.62072504, 0.28282914, 0.02631165, 0.99088573, 0.5221176, 0.59077984, 0.24844927,
            0.00114695, 0.62355626, 0.04456268, 0.9215918, 0.68305826, 0.9893213, 0.24617034,
            0.46281454, 0.98954594, 0.84028614, 0.20979705, 0.2604722, 0.16886179, 0.44047666,
            0.7618813, 0.8937895, 0.01173675, 0.8560913, 0.92198044, 0.82381725, 0.52674735,
            0.7157508, 0.79910344, 0.3498497, 0.920404, 0.3787974, 0.94089866, 0.6866234,
            0.19442007, 0.12730101, 0.6186801, 0.13235328, 0.9229839,
        ],
    )
    .unwrap();
    let conv_layer26 = ConvolutionLayer::new(kernel26, 1, Padding::Valid);
    let target_output26: Array3<f32> = array![
        [
            [
                6.742172, 5.546144, 5.8096905, 6.2231545, 6.025579, 7.1431212, 5.6825047,
                5.9673243, 5.976368, 5.178149, 6.578005, 6.182353, 5.991576
            ],
            [
                6.0051537, 5.8837657, 6.3266435, 6.628472, 6.762582, 5.691036, 5.695777, 5.92185,
                5.9133883, 5.9765263, 5.391718, 5.762784, 4.9390764
            ],
            [
                6.0869145, 5.0428424, 5.7157893, 6.414848, 7.53432, 7.6927433, 5.8815866,
                5.6058435, 7.0564313, 6.874141, 6.10602, 5.2974257, 5.7139735
            ],
            [
                5.528833, 6.289032, 6.031656, 7.4041915, 7.2082872, 6.9566946, 7.732317, 7.2907,
                7.458944, 7.078306, 5.935052, 4.9020977, 4.752909
            ],
            [
                7.6562996, 5.9353523, 6.699083, 6.8642535, 7.1910996, 6.439143, 7.300676, 6.250647,
                6.8337617, 6.6931906, 5.703394, 5.9191146, 6.2994075
            ],
            [
                5.7268195, 6.4882064, 5.340053, 5.623895, 5.673263, 6.6886897, 7.0293612, 6.50799,
                6.59895, 5.9016085, 5.399433, 4.694791, 5.756186
            ],
            [
                6.4198704, 6.096386, 5.612637, 5.3974023, 5.1780176, 5.9055276, 6.984628, 6.794863,
                5.8444157, 5.8331075, 4.8909225, 5.0831194, 6.0529766
            ],
            [
                5.6994505, 6.523984, 6.8666515, 5.6197824, 5.751453, 5.4350414, 6.905619, 7.226513,
                6.605553, 5.5382905, 4.6453934, 4.671108, 5.7151
            ]
        ],
        [
            [
                7.774204, 7.524645, 8.0139, 6.17606, 7.488169, 8.202369, 7.0165706, 7.29311,
                6.89352, 7.38396, 7.7982483, 6.9792676, 6.8121057
            ],
            [
                7.5823493, 7.6356506, 7.0726843, 8.004477, 8.244433, 7.3330526, 7.139769, 6.775118,
                7.452319, 8.22662, 7.30203, 7.917198, 6.9565535
            ],
            [
                7.947303, 5.7274036, 7.517677, 8.135662, 9.422929, 8.510094, 7.930955, 6.9618115,
                7.7589397, 8.403204, 7.2041197, 6.6888375, 6.772259
            ],
            [
                7.297517, 6.8746524, 6.7889276, 8.752781, 8.926506, 8.231976, 8.164192, 8.743326,
                10.598651, 8.564958, 7.975048, 6.510054, 6.993728
            ],
            [
                8.549242, 7.8877697, 8.102687, 8.845037, 8.895792, 9.685743, 8.857502, 8.469308,
                8.670806, 8.032045, 6.8668118, 6.406127, 5.6794047
            ],
            [
                7.9373884, 7.775345, 7.3072186, 7.083015, 8.355292, 7.02583, 8.471327, 8.985253,
                8.524635, 7.8080907, 6.204467, 6.188331, 5.947363
            ],
            [
                7.0544977, 7.893158, 5.8288093, 5.9274926, 6.1830482, 6.9903617, 8.124413,
                7.330609, 7.5489225, 6.8296366, 6.73552, 6.533837, 8.043719
            ],
            [
                7.56853, 6.96508, 7.5397406, 7.204562, 7.397448, 6.843468, 8.944562, 8.90916,
                7.901879, 7.107519, 6.782357, 6.313568, 6.9798255
            ]
        ]
    ];
    let current_output26: Array3<f32> = conv_layer26.convolve(&test_input26);

    assert!(
        arr_allclose(&current_output26, &target_output26),
        "{:?} was not equal to {:?}",
        current_output26,
        target_output26
    );

    let test_input27 = array![
        [
            [
                0.968473, 0.01200672, 0.79086024, 0.5638385, 0.9690265, 0.19991861, 0.9513363,
                0.15507828, 0.41979295, 0.98834366, 0.01301026, 0.28899273, 0.8682599, 0.97130793,
                0.8024787
            ],
            [
                0.29034188, 0.24718882, 0.5366342, 0.4692924, 0.15322222, 0.83594126, 0.04108659,
                0.61967033, 0.07340664, 0.06401163, 0.12822089, 0.7238483, 0.30244493, 0.9491711,
                0.44141734
            ],
            [
                0.67812914, 0.22713542, 0.53551257, 0.44359767, 0.39959106, 0.66883224, 0.47769547,
                0.05377042, 0.61688894, 0.22768961, 0.28283465, 0.3990037, 0.9196311, 0.3261171,
                0.6853804
            ],
            [
                0.808091, 0.08409429, 0.35334954, 0.548942, 0.09672975, 0.6728813, 0.3804167,
                0.9053351, 0.08379908, 0.9617579, 0.53935903, 0.8655558, 0.8346855, 0.9845792,
                0.8629179
            ],
            [
                0.50557286, 0.69113374, 0.9615546, 0.11799753, 0.24098068, 0.5201091, 0.01988209,
                0.93071467, 0.21783541, 0.6345836, 0.5997897, 0.3821681, 0.08845946, 0.6696186,
                0.30976853
            ],
            [
                0.86896497, 0.16485341, 0.22297226, 0.61939573, 0.787276, 0.06126022, 0.6562995,
                0.9216594, 0.2457454, 0.48232093, 0.6767117, 0.7042522, 0.36677414, 0.48979157,
                0.27360517
            ],
            [
                0.5869422, 0.27611768, 0.26442292, 0.20080982, 0.91767025, 0.36463642, 0.11189529,
                0.11818971, 0.13544263, 0.7131112, 0.68724895, 0.33155695, 0.69078076, 0.80222553,
                0.5333259
            ],
            [
                0.32190928, 0.77878344, 0.08551037, 0.85251176, 0.29192793, 0.9699456, 0.45361686,
                0.11329727, 0.8463833, 0.9285037, 0.8701852, 0.46818328, 0.90702206, 0.18856683,
                0.45777324
            ],
            [
                0.35982916, 0.02530834, 0.9133796, 0.9737615, 0.07101188, 0.7752038, 0.37889206,
                0.13838367, 0.91733086, 0.430336, 0.9198305, 0.5380625, 0.5224842, 0.9655628,
                0.10147168
            ],
            [
                0.57677186, 0.34796357, 0.61658883, 0.68917644, 0.84899485, 0.15994577, 0.54054207,
                0.34836137, 0.13617612, 0.6027421, 0.9999695, 0.4703405, 0.93084306, 0.5403318,
                0.4532712
            ]
        ],
        [
            [
                0.3473291, 0.04459461, 0.427044, 0.55078715, 0.40990627, 0.05412404, 0.08358769,
                0.55250907, 0.90154666, 0.9326744, 0.94750315, 0.23282553, 0.8220057, 0.03333057,
                0.3590328
            ],
            [
                0.13700394, 0.48470175, 0.15042725, 0.90220386, 0.34881374, 0.16714397, 0.89079213,
                0.67488444, 0.29599693, 0.25583467, 0.16394943, 0.549147, 0.7881106, 0.49022144,
                0.6618432
            ],
            [
                0.7189277, 0.18293881, 0.17122072, 0.71808743, 0.2637363, 0.2623765, 0.64253336,
                0.8601327, 0.5893039, 0.6413237, 0.42210525, 0.3180952, 0.7323518, 0.19029295,
                0.73598146
            ],
            [
                0.5484634, 0.19677189, 0.93418276, 0.8944676, 0.7584863, 0.9159213, 0.17313573,
                0.13061608, 0.9247798, 0.37667143, 0.9792834, 0.29825523, 0.7259802, 0.46687177,
                0.5301964
            ],
            [
                0.14295319, 0.5921124, 0.34359774, 0.26661384, 0.04284242, 0.8670922, 0.19314824,
                0.23294576, 0.541387, 0.9847154, 0.48499247, 0.09907741, 0.5006215, 0.5578283,
                0.1141604
            ],
            [
                0.12097415, 0.46633622, 0.20250201, 0.53496593, 0.7033518, 0.68214494, 0.49284568,
                0.6940483, 0.5552098, 0.6059211, 0.378767, 0.2238173, 0.2613474, 0.67423475,
                0.3954447
            ],
            [
                0.4054549, 0.6796681, 0.72399604, 0.28246298, 0.7645698, 0.96831554, 0.5395196,
                0.10945795, 0.499514, 0.07966255, 0.04232477, 0.18794546, 0.02903101, 0.87264,
                0.2464628
            ],
            [
                0.21625711, 0.5063043, 0.49260572, 0.26562026, 0.5136638, 0.38765427, 0.995697,
                0.26731393, 0.9085028, 0.12043773, 0.46525767, 0.5472589, 0.09271611, 0.93896073,
                0.82003325
            ],
            [
                0.26917773, 0.20598832, 0.15525481, 0.05620801, 0.06457912, 0.58928204, 0.08488933,
                0.45322236, 0.7673163, 0.4033134, 0.15463823, 0.67769825, 0.9161704, 0.6265972,
                0.37210664
            ],
            [
                0.04776173, 0.9293805, 0.4602623, 0.03279204, 0.07298613, 0.23598829, 0.9973023,
                0.25666964, 0.29511, 0.26824012, 0.66342247, 0.5264845, 0.3860588, 0.7544129,
                0.01928642
            ]
        ],
        [
            [
                0.54743403, 0.11107332, 0.28423595, 0.5209626, 0.76069826, 0.96710503, 0.18445559,
                0.7522076, 0.06932273, 0.95973784, 0.19795854, 0.28506085, 0.13914691, 0.8087165,
                0.3778757
            ],
            [
                0.39205238, 0.7902731, 0.83978635, 0.14340296, 0.6232285, 0.4264953, 0.67103004,
                0.6248762, 0.9083485, 0.43448448, 0.70240456, 0.33882853, 0.18323863, 0.52859294,
                0.13727196
            ],
            [
                0.41655356, 0.19180061, 0.2234552, 0.22415204, 0.9748111, 0.8298644, 0.4279932,
                0.49268875, 0.61891294, 0.64964074, 0.9995373, 0.26837257, 0.6665136, 0.3486188,
                0.53857046
            ],
            [
                0.1735309, 0.31993368, 0.7082613, 0.9037912, 0.50249976, 0.34614602, 0.04152302,
                0.9456902, 0.48921642, 0.7197943, 0.86110634, 0.10902967, 0.21941453, 0.35792756,
                0.7178425
            ],
            [
                0.49131492, 0.4342134, 0.8039146, 0.15955769, 0.72233695, 0.22291587, 0.6377711,
                0.33839074, 0.78856933, 0.7037668, 0.524876, 0.30532846, 0.2398776, 0.9853742,
                0.94015056
            ],
            [
                0.7002529, 0.67187446, 0.8218346, 0.92597115, 0.12606671, 0.6032527, 0.34271526,
                0.47624904, 0.32579103, 0.6722847, 0.3613456, 0.74746865, 0.28857794, 0.899909,
                0.2689032
            ],
            [
                0.7236747, 0.5965492, 0.43040073, 0.6599278, 0.5936739, 0.21878308, 0.29627025,
                0.6594448, 0.4529453, 0.29142585, 0.13420771, 0.46529654, 0.8734327, 0.45615637,
                0.38038793
            ],
            [
                0.5803451, 0.7617363, 0.83634585, 0.11365525, 0.52510726, 0.00939824, 0.92569697,
                0.503521, 0.3704941, 0.67069006, 0.6889376, 0.6721221, 0.28051263, 0.90126437,
                0.74227345
            ],
            [
                0.20851454, 0.9827812, 0.5416497, 0.5500161, 0.01951568, 0.4893268, 0.6984468,
                0.2854609, 0.47535938, 0.22314279, 0.52706516, 0.29269645, 0.8363249, 0.62550986,
                0.38499138
            ],
            [
                0.13979574, 0.02366208, 0.80627346, 0.61764413, 0.5107428, 0.42557174, 0.7787232,
                0.21393713, 0.47935697, 0.09325973, 0.30268312, 0.41914597, 0.3112818, 0.23385784,
                0.31058535
            ]
        ]
    ];

    let kernel27: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.9231324, 0.04408429, 0.8910958, 0.15559341, 0.68804723, 0.7030672, 0.8085952,
            0.99013287, 0.48988733, 0.85251105, 0.83518285, 0.17727828, 0.9317292, 0.7980087,
            0.94389766, 0.8826353, 0.7815283, 0.5468075, 0.6079196, 0.9607086, 0.49979007,
            0.4252797, 0.31804043, 0.6667202, 0.9907962, 0.42641845, 0.6987177, 0.5111338,
            0.9780975, 0.29640055, 0.47655347, 0.78929913, 0.27845028, 0.8205566, 0.8503088,
            0.7356281, 0.22631837, 0.442418, 0.2089261, 0.73171294, 0.09648526, 0.20636925,
            0.87073565, 0.39002457, 0.6818526, 0.8465506, 0.09084356, 0.5642379, 0.8793211,
            0.9619224, 0.76393694, 0.2437348, 0.6908657, 0.40215194,
        ],
    )
    .unwrap();
    let conv_layer27 = ConvolutionLayer::new(kernel27, 1, Padding::Valid);
    let target_output27: Array3<f32> = array![
        [
            [
                7.1429577, 7.163253, 9.5025, 8.830114, 9.034662, 8.553366, 9.358285, 9.560411,
                8.966055, 8.810166, 8.646449, 9.310169, 9.564255
            ],
            [
                7.5421815, 8.3013735, 8.986801, 9.29141, 8.384968, 9.539274, 9.270373, 9.9387045,
                8.671031, 9.02018, 9.287901, 9.800807, 9.799804
            ],
            [
                8.220396, 8.141223, 9.296009, 9.284176, 8.69643, 8.603307, 8.568196, 10.517617,
                11.507632, 9.271013, 9.709349, 8.323348, 10.397634
            ],
            [
                9.670736, 9.026305, 9.1898575, 9.783768, 7.7607503, 9.010621, 8.357052, 10.653173,
                10.616443, 10.0964985, 8.383988, 9.005907, 9.445045
            ],
            [
                8.86539, 8.286917, 9.1606045, 8.764824, 8.32598, 8.83638, 7.0626926, 9.16762,
                8.487579, 8.565609, 6.975868, 8.94522, 8.758438
            ],
            [
                9.287348, 9.061448, 8.909744, 9.7891865, 9.692469, 9.02926, 7.956046, 9.364604,
                8.815403, 8.783257, 7.603302, 9.664962, 9.606681
            ],
            [
                8.548239, 8.760512, 8.971127, 8.035361, 9.552163, 7.466271, 8.659988, 8.274465,
                8.407147, 7.7038918, 9.442714, 10.129837, 9.569709
            ],
            [
                8.122847, 9.44179, 7.128642, 7.5669403, 8.677844, 8.308083, 9.421972, 7.8497553,
                9.419598, 9.41174, 10.002293, 10.257267, 10.465172
            ]
        ],
        [
            [
                6.1748705, 6.2176895, 6.79814, 7.750336, 7.9681807, 7.455604, 7.5939717, 8.100758,
                7.0403233, 7.0991607, 6.8743467, 7.201075, 8.124281
            ],
            [
                6.4739823, 7.457675, 7.49931, 8.357593, 6.9795885, 7.6488285, 7.3031387, 7.610438,
                7.5751743, 7.515438, 7.8405447, 7.6997733, 8.324736
            ],
            [
                6.879937, 6.48858, 6.685278, 7.4872575, 6.618134, 7.9901705, 7.6878996, 8.640914,
                8.946909, 8.183185, 7.7384915, 7.6632056, 8.900504
            ],
            [
                7.5211353, 8.589913, 8.395038, 7.827868, 6.003264, 7.342363, 6.7521305, 9.326086,
                8.444139, 8.796181, 7.074373, 7.5234456, 7.9325647
            ],
            [
                7.961222, 7.1469617, 7.4228935, 7.11946, 6.7413473, 6.336016, 6.636612, 8.094458,
                7.585928, 6.8954415, 6.376701, 7.754456, 7.0975156
            ],
            [
                7.2220697, 7.3745456, 8.328126, 7.545225, 7.402267, 6.857725, 7.330856, 6.696513,
                7.3835926, 7.467911, 7.46954, 8.306765, 7.95547
            ],
            [
                7.8887963, 7.5682883, 6.522037, 7.9964776, 7.0135727, 6.4776545, 6.964153,
                6.6390777, 7.9720297, 7.1515617, 7.6347494, 8.98743, 8.725238
            ],
            [
                7.1639624, 7.9156375, 7.076032, 6.690871, 7.3702464, 7.138143, 7.431454, 6.669719,
                8.415614, 8.054094, 8.646997, 8.594897, 7.9645405
            ]
        ]
    ];
    let current_output27: Array3<f32> = conv_layer27.convolve(&test_input27);

    assert!(
        arr_allclose(&current_output27, &target_output27),
        "{:?} was not equal to {:?}",
        current_output27,
        target_output27
    );

    let test_input28 = array![
        [
            [
                0.33184996, 0.64908034, 0.30805972, 0.32266703, 0.45468414, 0.7646959, 0.51671654,
                0.5644179, 0.57114464, 0.1499708, 0.0285126, 0.34472197, 0.43013144, 0.45248675,
                0.8635111
            ],
            [
                0.13950849, 0.31055018, 0.8794452, 0.20421512, 0.89352185, 0.84149826, 0.17070445,
                0.8472129, 0.80763394, 0.43805566, 0.9283719, 0.42566535, 0.8063544, 0.03382581,
                0.22873266
            ],
            [
                0.10301294, 0.6423686, 0.6695578, 0.9326136, 0.10865664, 0.5962613, 0.99988186,
                0.35112807, 0.13524966, 0.9012402, 0.4219725, 0.7799652, 0.87387353, 0.9100606,
                0.49740204
            ],
            [
                0.16655016, 0.987483, 0.33358738, 0.97735417, 0.4197044, 0.88689566, 0.9949134,
                0.08079711, 0.9768461, 0.15401787, 0.7613341, 0.33150923, 0.6268428, 0.23814383,
                0.15689476
            ],
            [
                0.17239508, 0.5322748, 0.8153644, 0.40988755, 0.24133632, 0.7648658, 0.11204641,
                0.94687665, 0.31404087, 0.14600264, 0.8751561, 0.21171108, 0.16797651, 0.9251605,
                0.63095194
            ],
            [
                0.8929391, 0.12795849, 0.10989773, 0.90538734, 0.3003097, 0.6486522, 0.69226533,
                0.19131283, 0.8676397, 0.9169408, 0.9313712, 0.14831749, 0.89142025, 0.10900346,
                0.06097801
            ],
            [
                0.8297556, 0.46926925, 0.6560135, 0.35788414, 0.8459047, 0.6872295, 0.79336315,
                0.69625896, 0.6032861, 0.21245298, 0.7783868, 0.33385372, 0.18934485, 0.98988926,
                0.835442
            ],
            [
                0.8285267, 0.48125055, 0.21471797, 0.6173871, 0.62692714, 0.13899311, 0.09477642,
                0.33909172, 0.50521874, 0.1845745, 0.20815027, 0.04814293, 0.82568175, 0.00548277,
                0.9520912
            ],
            [
                0.43334082, 0.4161656, 0.13053188, 0.82981783, 0.43391317, 0.1526219, 0.76765394,
                0.8414392, 0.22662647, 0.75768614, 0.03670884, 0.569372, 0.4016911, 0.83430797,
                0.9199618
            ],
            [
                0.5523309, 0.60879946, 0.8484274, 0.62333465, 0.72344357, 0.93422616, 0.4833327,
                0.38079956, 0.69664335, 0.6375929, 0.05685853, 0.8684104, 0.88915735, 0.7639226,
                0.89278924
            ]
        ],
        [
            [
                0.23738323, 0.5833552, 0.8751756, 0.7455838, 0.77469295, 0.2791718, 0.14463307,
                0.11350685, 0.39833462, 0.73064125, 0.9280576, 0.18288209, 0.35543966, 0.78150374,
                0.6667131
            ],
            [
                0.5753187, 0.3559486, 0.2699716, 0.9916458, 0.35738185, 0.31955966, 0.6034462,
                0.49671844, 0.21147081, 0.43717724, 0.8128758, 0.44624192, 0.26903114, 0.48451242,
                0.299916
            ],
            [
                0.24334253, 0.8110261, 0.93565845, 0.8960472, 0.7400156, 0.49422848, 0.56603134,
                0.57117814, 0.9466828, 0.75557137, 0.47999805, 0.29572076, 0.88842475, 0.6943571,
                0.7628443
            ],
            [
                0.26878476, 0.6433668, 0.00685212, 0.72935826, 0.03449651, 0.19757593, 0.35532916,
                0.9904894, 0.44599372, 0.9979789, 0.94856584, 0.81601155, 0.08034612, 0.23848392,
                0.7057333
            ],
            [
                0.5349574, 0.07772017, 0.89346814, 0.9683522, 0.66086763, 0.7839022, 0.9365747,
                0.03193681, 0.45478263, 0.11851353, 0.24598803, 0.07832938, 0.97511005, 0.8355728,
                0.01171468
            ],
            [
                0.8565048, 0.10912379, 0.4077279, 0.35906726, 0.26236704, 0.65862477, 0.11245026,
                0.5685218, 0.6949583, 0.6733708, 0.8991999, 0.6030878, 0.73000854, 0.48400247,
                0.19118872
            ],
            [
                0.25460038, 0.9184611, 0.2807583, 0.73211795, 0.6683304, 0.33361897, 0.51849383,
                0.6791682, 0.48042777, 0.6937536, 0.9167911, 0.6801258, 0.0564688, 0.7848688,
                0.3418887
            ],
            [
                0.9124181, 0.07043128, 0.37207896, 0.49574846, 0.12505583, 0.3103582, 0.6096313,
                0.24199934, 0.40645203, 0.67775714, 0.76091385, 0.2477421, 0.23572317, 0.49046424,
                0.5670339
            ],
            [
                0.30917186, 0.06782987, 0.19831854, 0.38844034, 0.23881091, 0.7832937, 0.48872954,
                0.5716796, 0.72878736, 0.44170135, 0.54763687, 0.13181128, 0.02235833, 0.360836,
                0.7916734
            ],
            [
                0.7768597, 0.85824955, 0.9645565, 0.40896285, 0.6434178, 0.2303441, 0.8840179,
                0.89847404, 0.9301381, 0.41758484, 0.2730421, 0.48180395, 0.63210744, 0.6205975,
                0.9059564
            ]
        ],
        [
            [
                0.42945445, 0.97156674, 0.29061684, 0.39886904, 0.7965488, 0.26557565, 0.49024066,
                0.04281154, 0.2126663, 0.4591814, 0.72670996, 0.8307759, 0.7593779, 0.98412323,
                0.5340124
            ],
            [
                0.22581473, 0.94544613, 0.45676422, 0.83325416, 0.944354, 0.0488622, 0.36290234,
                0.19694914, 0.22211874, 0.89430046, 0.7373128, 0.23623948, 0.20805733, 0.56668675,
                0.9879018
            ],
            [
                0.44374004, 0.78476405, 0.371802, 0.2305824, 0.52640325, 0.8606839, 0.48357183,
                0.8400437, 0.39311504, 0.5037727, 0.22245023, 0.7884574, 0.46210247, 0.28570879,
                0.69361484
            ],
            [
                0.5833351, 0.26489744, 0.658877, 0.9653691, 0.8037367, 0.33775258, 0.9893505,
                0.34009922, 0.09269939, 0.43281078, 0.74674773, 0.5795955, 0.86004764, 0.10764247,
                0.01841728
            ],
            [
                0.27755457, 0.11139348, 0.08395886, 0.71043, 0.45239362, 0.11525997, 0.28355595,
                0.95543647, 0.4682662, 0.6869693, 0.51128346, 0.5420683, 0.46346098, 0.9399698,
                0.31194556
            ],
            [
                0.4575972, 0.02952798, 0.05740095, 0.558365, 0.63975835, 0.799062, 0.44999343,
                0.58138865, 0.9890714, 0.11409238, 0.4750676, 0.1869184, 0.8760484, 0.0823018,
                0.33851793
            ],
            [
                0.6896478, 0.61307687, 0.12817004, 0.766394, 0.87622136, 0.32000798, 0.38584012,
                0.20234333, 0.29644713, 0.08710819, 0.5954896, 0.89744276, 0.82598114, 0.3775057,
                0.80864924
            ],
            [
                0.28085634, 0.47305906, 0.10534421, 0.8706143, 0.32882455, 0.88731766, 0.97063476,
                0.32436553, 0.72868264, 0.80771196, 0.4281172, 0.7363536, 0.8921248, 0.6364155,
                0.6343222
            ],
            [
                0.22897069, 0.68388855, 0.2792772, 0.6897695, 0.4751435, 0.6972274, 0.97543496,
                0.5746593, 0.8178856, 0.74363214, 0.20077299, 0.1308109, 0.55760676, 0.5673803,
                0.33047372
            ],
            [
                0.49729654, 0.18380235, 0.12606913, 0.6054057, 0.35723293, 0.89859825, 0.7071074,
                0.76911914, 0.5279102, 0.05990019, 0.86265, 0.6010754, 0.07892385, 0.3002219,
                0.22659945
            ]
        ]
    ];

    let kernel28: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.14760193, 0.21413611, 0.46885744, 0.66423815, 0.8391969, 0.41313493, 0.81092876,
            0.07522171, 0.09202226, 0.7854602, 0.61535144, 0.16359355, 0.92554736, 0.89040357,
            0.5301901, 0.19735774, 0.43730915, 0.2664503, 0.14086206, 0.81940347, 0.87782377,
            0.81441253, 0.94491214, 0.18393157, 0.00453156, 0.30542406, 0.027802, 0.4377543,
            0.9579144, 0.27238533, 0.6434107, 0.7795068, 0.03596852, 0.9499455, 0.31696305,
            0.41555944, 0.88981736, 0.83952224, 0.70364726, 0.19911295, 0.5880696, 0.7395392,
            0.31632707, 0.94590175, 0.30397218, 0.02226985, 0.89484024, 0.94421536, 0.29766196,
            0.6461333, 0.8716085, 0.92774296, 0.06134897, 0.09143817, 0.02453929, 0.5369807,
            0.5608989, 0.75235975, 0.79507726, 0.12966864, 0.17343594, 0.7049294, 0.20702457,
            0.16046774, 0.9958221, 0.22769123, 0.68801785, 0.83820975, 0.01911113, 0.7169752,
            0.27681005, 0.06093569, 0.43404636, 0.66175574, 0.44444507, 0.00599372, 0.26165754,
            0.43228298, 0.06268399, 0.1826374, 0.8858185, 0.6219011, 0.7521909, 0.05626365,
            0.2715362, 0.64973146, 0.11108088, 0.6520992, 0.25231564, 0.6730583, 0.6933606,
            0.60061646, 0.9631269, 0.18575045, 0.52347237, 0.3336502, 0.09777608, 0.3128124,
            0.711382, 0.07645657, 0.72884977, 0.9319044, 0.16224979, 0.7502819, 0.66940516,
            0.457201, 0.727294, 0.28626588, 0.29447657, 0.45880696, 0.61887467, 0.20012106,
            0.42260578, 0.9338168, 0.61133265, 0.80442405, 0.7470405, 0.41035688, 0.778617,
            0.23559988, 0.09958417, 0.82783866, 0.29261506, 0.9409139, 0.31977177, 0.50342596,
            0.18005316, 0.2022184, 0.5871392, 0.21670069, 0.17925061, 0.5227581, 0.64913374,
            0.7507363, 0.9414358, 0.544464, 0.54065806, 0.30891684, 0.06850108, 0.8324337,
            0.53898126, 0.95084524, 0.8525341, 0.3645535, 0.83921856, 0.18543234, 0.91676915,
            0.16094153, 0.06250098, 0.51352835,
        ],
    )
    .unwrap();
    let conv_layer28 = ConvolutionLayer::new(kernel28, 1, Padding::Valid);
    let target_output28: Array3<f32> = array![
        [
            [
                18.527737, 22.53252, 19.842001, 19.38287, 19.542326, 17.613014, 19.62309,
                19.117296, 20.348, 19.85576, 19.98853
            ],
            [
                18.960634, 20.932741, 21.431904, 22.924963, 19.25424, 21.544119, 21.266802,
                18.496008, 20.87806, 19.917023, 18.455227
            ],
            [
                19.19087, 19.87837, 20.187872, 20.147135, 20.39847, 19.755901, 21.006672, 20.84568,
                21.276772, 20.631853, 20.543026
            ],
            [
                18.302753, 19.555794, 19.760082, 19.711359, 20.438587, 17.446379, 21.05268,
                19.047194, 19.39362, 19.502048, 18.99336
            ],
            [
                16.651262, 16.89821, 18.696592, 20.002289, 19.568552, 19.599947, 20.579182,
                18.749533, 18.41483, 18.795248, 18.22874
            ],
            [
                17.447218, 17.668, 19.995281, 20.025917, 21.494883, 20.810886, 19.655766,
                19.124334, 20.043638, 17.88568, 18.304752
            ]
        ],
        [
            [
                18.74569, 19.345356, 19.488802, 19.642818, 18.227774, 17.848274, 20.162935,
                18.579231, 17.986982, 19.000767, 20.136986
            ],
            [
                19.316828, 20.493395, 20.94903, 22.629833, 19.759438, 18.61567, 20.117584,
                19.157816, 20.028866, 20.224154, 18.405254
            ],
            [
                19.296831, 18.7775, 20.178917, 19.886143, 19.067913, 19.771494, 19.546543,
                20.900358, 20.630909, 20.445877, 19.999111
            ],
            [
                18.504658, 17.566767, 20.12469, 19.858389, 19.804121, 19.411118, 19.61078,
                20.373014, 18.581017, 21.079, 18.110552
            ],
            [
                17.629936, 16.610992, 18.44916, 19.66303, 20.237486, 20.28908, 19.256271,
                18.189459, 17.82076, 18.152308, 18.250004
            ],
            [
                17.801464, 17.11874, 19.50293, 19.938334, 19.32527, 20.411417, 19.735647,
                20.245066, 18.730484, 18.866991, 18.684416
            ]
        ]
    ];
    let current_output28: Array3<f32> = conv_layer28.convolve(&test_input28);

    assert!(
        arr_allclose(&current_output28, &target_output28),
        "{:?} was not equal to {:?}",
        current_output28,
        target_output28
    );

    let test_input29 = array![
        [
            [
                0.82848716, 0.12292414, 0.2047097, 0.95561635, 0.8625563, 0.30796447, 0.24823008,
                0.5031169, 0.98074585, 0.03213529, 0.2574467, 0.9732424, 0.21001962, 0.26517463,
                0.0038282
            ],
            [
                0.08282983, 0.7993262, 0.13075382, 0.43831322, 0.2610342, 0.5678443, 0.03319374,
                0.13130435, 0.84865195, 0.23911464, 0.4614755, 0.72813416, 0.8497422, 0.0656543,
                0.26282084
            ],
            [
                0.68387175, 0.15333544, 0.3191993, 0.6700582, 0.00915827, 0.7887491, 0.07875764,
                0.30477428, 0.43796757, 0.5453457, 0.46345225, 0.5078866, 0.47349572, 0.93777996,
                0.00917824
            ],
            [
                0.89281446, 0.14618948, 0.21801536, 0.6179016, 0.7436905, 0.8383103, 0.0566386,
                0.30938643, 0.96125233, 0.80651444, 0.7037131, 0.58040166, 0.54378766, 0.64524394,
                0.3842309
            ],
            [
                0.6445482, 0.6222151, 0.92868453, 0.04893699, 0.10405056, 0.7266609, 0.04145219,
                0.48782048, 0.548731, 0.45881256, 0.33547178, 0.540371, 0.7910178, 0.78839546,
                0.84049743
            ],
            [
                0.9842876, 0.3631438, 0.04040196, 0.37753972, 0.4733552, 0.9590118, 0.69483554,
                0.46147576, 0.5244579, 0.26899648, 0.41173777, 0.53783196, 0.95134264, 0.6049057,
                0.15807904
            ],
            [
                0.523342, 0.62018555, 0.4590641, 0.28503576, 0.38717398, 0.19813369, 0.98584664,
                0.8388797, 0.32806987, 0.26547596, 0.54155624, 0.90635383, 0.58438164, 0.80972457,
                0.59019595
            ],
            [
                0.6780788, 0.0958912, 0.47856295, 0.85674536, 0.7028763, 0.53743315, 0.31929258,
                0.09922413, 0.07765451, 0.446601, 0.58093804, 0.4849385, 0.20790926, 0.8150346,
                0.28842458
            ],
            [
                0.2606844, 0.7152744, 0.8642892, 0.59597003, 0.32738405, 0.22714303, 0.14223123,
                0.4985312, 0.28446305, 0.8578446, 0.5093849, 0.5639982, 0.6326081, 0.7037209,
                0.6291706
            ],
            [
                0.869952, 0.51462924, 0.78186774, 0.62534815, 0.49688724, 0.93685853, 0.36799955,
                0.40307763, 0.6977219, 0.43395323, 0.6597403, 0.28784844, 0.761984, 0.02110602,
                0.18104874
            ]
        ],
        [
            [
                0.12873596, 0.52158403, 0.32419515, 0.8962471, 0.16951792, 0.48415482, 0.4232015,
                0.2196024, 0.94563127, 0.49693355, 0.45553604, 0.3627867, 0.91017437, 0.41195875,
                0.68331534
            ],
            [
                0.7426654, 0.18561168, 0.92822397, 0.28829068, 0.17956546, 0.12135573, 0.29163483,
                0.4782706, 0.28834382, 0.05297824, 0.71394044, 0.32832128, 0.4687296, 0.10209152,
                0.36334252
            ],
            [
                0.02750501, 0.79784447, 0.7073291, 0.6492628, 0.5234909, 0.08833914, 0.22806701,
                0.2533327, 0.97122884, 0.6860607, 0.65992147, 0.35286993, 0.69897413, 0.29683718,
                0.36412132
            ],
            [
                0.2942369, 0.6854037, 0.02948874, 0.0048431, 0.43101177, 0.19812581, 0.72115874,
                0.0141753, 0.78953046, 0.80715597, 0.19224383, 0.43242833, 0.4958622, 0.73673743,
                0.29721686
            ],
            [
                0.6938951, 0.75789964, 0.969901, 0.9834889, 0.8907584, 0.97847944, 0.40886414,
                0.3212815, 0.39472353, 0.878493, 0.7895801, 0.75543076, 0.23345572, 0.5435443,
                0.16837756
            ],
            [
                0.7681288, 0.8542315, 0.5103013, 0.5957757, 0.8233244, 0.8555658, 0.25473273,
                0.8721091, 0.3030269, 0.55013156, 0.36448047, 0.5878724, 0.49309427, 0.9610754,
                0.8105548
            ],
            [
                0.00024235, 0.20580722, 0.42482692, 0.02397736, 0.7226435, 0.2862437, 0.33910662,
                0.8752055, 0.19625323, 0.29169068, 0.55841756, 0.6221619, 0.24158852, 0.78276193,
                0.94054115
            ],
            [
                0.5855126, 0.42005202, 0.6827206, 0.7115263, 0.61693937, 0.6575606, 0.02934249,
                0.8669238, 0.7353419, 0.49630404, 0.21345796, 0.820553, 0.17480347, 0.12723699,
                0.7203788
            ],
            [
                0.5244236, 0.68926454, 0.5063956, 0.8505795, 0.52149975, 0.76833695, 0.67387354,
                0.5844687, 0.3201185, 0.09514732, 0.71366805, 0.4865683, 0.5130441, 0.33208346,
                0.47421247
            ],
            [
                0.65361416, 0.9196911, 0.48471546, 0.3553714, 0.37583, 0.68677646, 0.66436833,
                0.6084176, 0.19649448, 0.05938564, 0.9080266, 0.02659295, 0.79841346, 0.5436528,
                0.24870853
            ]
        ],
        [
            [
                0.19493581, 0.06434184, 0.11837589, 0.7274973, 0.89949924, 0.50550425, 0.24034186,
                0.4342684, 0.44097564, 0.6025867, 0.44379726, 0.2487736, 0.39797536, 0.38203195,
                0.45850393
            ],
            [
                0.7270585, 0.73794276, 0.64137435, 0.4976225, 0.9744765, 0.63540924, 0.8615789,
                0.47632742, 0.99329984, 0.39004716, 0.36967713, 0.7320835, 0.5392427, 0.1913664,
                0.24959058
            ],
            [
                0.24431834, 0.98453826, 0.6451119, 0.6315665, 0.88483644, 0.5141419, 0.7883233,
                0.6694263, 0.6450341, 0.9949823, 0.9109329, 0.81354123, 0.5385581, 0.08466158,
                0.31364414
            ],
            [
                0.58694243, 0.9551381, 0.7533694, 0.8363674, 0.47684282, 0.05256698, 0.5015921,
                0.52415645, 0.92893124, 0.2586318, 0.6862902, 0.34644595, 0.6951301, 0.73902684,
                0.4160744
            ],
            [
                0.5561245, 0.8944672, 0.12573825, 0.1309708, 0.19249535, 0.88732064, 0.94225925,
                0.33589965, 0.20935446, 0.11820386, 0.6146396, 0.9328607, 0.08010992, 0.8130077,
                0.35681823
            ],
            [
                0.33871782, 0.69573396, 0.87327087, 0.19604516, 0.9322211, 0.8988257, 0.5802638,
                0.29316396, 0.43613002, 0.377008, 0.6758455, 0.99191517, 0.87526673, 0.25857434,
                0.5614543
            ],
            [
                0.24716882, 0.5964632, 0.4591073, 0.7026854, 0.05888641, 0.86936975, 0.04178984,
                0.19628692, 0.48324484, 0.34818614, 0.43203035, 0.13312028, 0.59230626, 0.18394487,
                0.44074106
            ],
            [
                0.8341198, 0.5426904, 0.02972909, 0.7810133, 0.9954068, 0.96492666, 0.562458,
                0.3993404, 0.00198996, 0.79839313, 0.7230826, 0.6282394, 0.10601443, 0.27046126,
                0.6991658
            ],
            [
                0.32585683, 0.38133958, 0.5213885, 0.77488744, 0.34216303, 0.36691627, 0.09267096,
                0.7644656, 0.2696341, 0.59979403, 0.8897497, 0.57541674, 0.49034655, 0.63787574,
                0.23486345
            ],
            [
                0.03662743, 0.8793221, 0.5383869, 0.9968118, 0.19825909, 0.24576978, 0.40309098,
                0.90556717, 0.12604196, 0.06919543, 0.5624922, 0.47776845, 0.79470664, 0.7113907,
                0.57747316
            ]
        ]
    ];

    let kernel29: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.61245716, 0.28628784, 0.11163998, 0.7026515, 0.35941374, 0.15993103, 0.40862006,
            0.64616, 0.15498321, 0.9856017, 0.9778505, 0.6152849, 0.298369, 0.39290613, 0.62659276,
            0.27373013, 0.80509216, 0.22292198, 0.7149846, 0.3701531, 0.02864541, 0.18460116,
            0.2495688, 0.20685975, 0.48693478, 0.94574445, 0.37555936, 0.7957075, 0.83116454,
            0.4865611, 0.72048515, 0.09185711, 0.0451069, 0.10193888, 0.25587377, 0.22258297,
            0.77982754, 0.56598395, 0.4127133, 0.57375854, 0.732491, 0.21926212, 0.83723956,
            0.72377336, 0.49891138, 0.38749784, 0.5780929, 0.44534236, 0.03298171, 0.8851657,
            0.969797, 0.04331319, 0.4249914, 0.7658825, 0.36713555, 0.858121, 0.81429756,
            0.5702975, 0.16565025, 0.63168263, 0.25811204, 0.7105842, 0.28650796, 0.8694313,
            0.4511592, 0.9107763, 0.7015808, 0.14372927, 0.32025692, 0.5332531, 0.78058934,
            0.60567653, 0.6413618, 0.28889108, 0.40765005, 0.03752139, 0.76789916, 0.9730741,
            0.46130356, 0.22646557, 0.42355734, 0.70528007, 0.01944306, 0.32756808, 0.13691914,
            0.46431798, 0.9356227, 0.47126326, 0.8382721, 0.00830113, 0.27433896, 0.09783126,
            0.76072216, 0.17257373, 0.44504768, 0.6327045, 0.5575821, 0.98542094, 0.5618886,
            0.61392415, 0.4681282, 0.43971175, 0.13753681, 0.38838807, 0.06850646, 0.48144373,
            0.823536, 0.60988927, 0.37098822, 0.23198135, 0.6278271, 0.72116077, 0.57679987,
            0.66124403, 0.66081995, 0.686285, 0.13207655, 0.61290085, 0.43520793, 0.54966915,
            0.44100302, 0.04024655, 0.26395977, 0.04516815, 0.26826328, 0.12823386, 0.09780997,
            0.959029, 0.2515203, 0.97507524, 0.33813378, 0.07302681, 0.9154141, 0.6440687,
            0.90634483, 0.72843254, 0.4034548, 0.35120928, 0.91799986, 0.7095235, 0.52486306,
            0.17238653, 0.35133615, 0.2293873, 0.02767666, 0.14124234, 0.67101526, 0.29018158,
            0.37819353, 0.27840444,
        ],
    )
    .unwrap();
    let conv_layer29 = ConvolutionLayer::new(kernel29, 1, Padding::Valid);
    let target_output29: Array3<f32> = array![
        [
            [
                19.337793, 19.69595, 17.891268, 17.370378, 17.839603, 18.66135, 19.287865,
                17.923166, 20.93409, 19.486666, 18.280903
            ],
            [
                19.305265, 20.148392, 19.768995, 18.919386, 18.899918, 18.847046, 19.220661,
                19.165163, 20.89883, 20.203182, 19.598532
            ],
            [
                20.097927, 20.370028, 19.60402, 18.16588, 18.711197, 19.742706, 19.637815,
                20.414328, 19.533289, 21.511637, 20.596188
            ],
            [
                18.918892, 19.935738, 18.772114, 19.810928, 18.751892, 18.064009, 16.182417,
                18.95172, 18.980993, 19.496706, 19.987747
            ],
            [
                20.249672, 21.19363, 20.49691, 19.9497, 17.948242, 18.44302, 16.124008, 18.698427,
                18.425877, 19.84528, 20.888292
            ],
            [
                20.145708, 21.189335, 19.71683, 19.949434, 19.492107, 18.213255, 16.327833,
                17.88273, 18.284407, 18.938578, 19.998535
            ]
        ],
        [
            [
                17.572275, 18.694635, 15.671261, 15.120173, 15.516539, 16.573944, 18.036781,
                17.91461, 18.36054, 18.608246, 17.360117
            ],
            [
                19.098703, 18.639019, 16.99134, 17.018105, 16.828243, 17.013893, 16.284702,
                17.941074, 19.035187, 18.924612, 18.111698
            ],
            [
                17.172777, 17.792856, 16.717411, 17.157942, 17.385538, 17.03372, 16.45219,
                18.016634, 19.71131, 19.115454, 18.843643
            ],
            [
                18.102266, 19.102596, 17.436726, 17.782238, 18.191544, 17.441126, 16.245165,
                16.570976, 17.472298, 19.206661, 18.439516
            ],
            [
                17.334389, 18.331299, 18.657946, 19.714586, 17.2684, 15.862146, 15.142587,
                16.99858, 17.882534, 18.633047, 17.72992
            ],
            [
                18.18756, 19.144842, 18.016247, 18.408897, 16.450058, 16.797333, 16.145464,
                15.623994, 15.986479, 18.241245, 18.457787
            ]
        ]
    ];
    let current_output29: Array3<f32> = conv_layer29.convolve(&test_input29);

    assert!(
        arr_allclose(&current_output29, &target_output29),
        "{:?} was not equal to {:?}",
        current_output29,
        target_output29
    );

    let test_input30 = array![
        [
            [
                0.89372283, 0.78445923, 0.58712804, 0.6811402, 0.23000365, 0.06065572, 0.8449633,
                0.17815381, 0.30446777, 0.88644, 0.8826608, 0.68384963, 0.02779119, 0.86535263,
                0.7281471
            ],
            [
                0.6848633, 0.6759397, 0.16086549, 0.6475722, 0.94878227, 0.5799347, 0.58338785,
                0.21564776, 0.0107795, 0.5302894, 0.98573536, 0.03758357, 0.6949514, 0.63164335,
                0.00178706
            ],
            [
                0.28412482, 0.35812908, 0.10555214, 0.74310327, 0.15210663, 0.86376214, 0.8303515,
                0.43450552, 0.45277232, 0.42497006, 0.79865277, 0.8958137, 0.81917155, 0.04101894,
                0.25766373
            ],
            [
                0.2857464, 0.6627151, 0.03159403, 0.9354205, 0.7423276, 0.8054729, 0.32092866,
                0.5199574, 0.44993454, 0.5713909, 0.9357826, 0.21231653, 0.39067075, 0.4187255,
                0.6238521
            ],
            [
                0.65184224, 0.52886575, 0.01740899, 0.19255765, 0.6458292, 0.19123401, 0.8210748,
                0.78315556, 0.3958118, 0.3110578, 0.47715545, 0.29922554, 0.45532396, 0.42382213,
                0.42575222
            ],
            [
                0.56597984, 0.38580757, 0.45498174, 0.68482727, 0.9714122, 0.9165496, 0.89789516,
                0.9988615, 0.749954, 0.2109633, 0.25951192, 0.64143604, 0.6979411, 0.918334,
                0.65583056
            ],
            [
                0.5254386, 0.17987564, 0.04420354, 0.07644754, 0.6770185, 0.02457761, 0.19219191,
                0.8623231, 0.08402257, 0.31468204, 0.40743572, 0.98625356, 0.5906839, 0.6265308,
                0.59731364
            ],
            [
                0.21510182, 0.57183194, 0.901779, 0.9705775, 0.03424489, 0.78139436, 0.55354595,
                0.70381683, 0.47117358, 0.95235467, 0.33689418, 0.47262585, 0.33963647, 0.530577,
                0.0421344
            ],
            [
                0.59682316, 0.93284744, 0.05644235, 0.5569182, 0.6096802, 0.00810335, 0.7324421,
                0.7327517, 0.38904786, 0.841237, 0.9108226, 0.5435749, 0.7924024, 0.03436404,
                0.649227
            ],
            [
                0.5530898, 0.5538213, 0.8170877, 0.9940746, 0.30411443, 0.43357348, 0.907485,
                0.67047435, 0.9518084, 0.327034, 0.09215528, 0.03004104, 0.28787526, 0.16794387,
                0.8576224
            ]
        ],
        [
            [
                0.997754, 0.582613, 0.25544515, 0.50827444, 0.408603, 0.15407899, 0.7626016,
                0.26175067, 0.9487898, 0.420784, 0.6492047, 0.6266061, 0.5851739, 0.20996386,
                0.39318708
            ],
            [
                0.84961617, 0.64456964, 0.7087405, 0.18771772, 0.58967286, 0.9178668, 0.47667617,
                0.89133877, 0.29889566, 0.07816543, 0.30748606, 0.13146874, 0.24558839, 0.81027585,
                0.4582198
            ],
            [
                0.03629474, 0.02914437, 0.27197847, 0.79646134, 0.20802912, 0.9537763, 0.9588753,
                0.6544757, 0.91661334, 0.14067934, 0.64449096, 0.12830848, 0.42274445, 0.09930792,
                0.46413782
            ],
            [
                0.93483084, 0.9741788, 0.08091403, 0.9959894, 0.02799125, 0.99117136, 0.3983662,
                0.4899074, 0.03084684, 0.7360495, 0.8706936, 0.5704002, 0.23692593, 0.4807955,
                0.27060798
            ],
            [
                0.71227604, 0.38637865, 0.7394339, 0.89828086, 0.9000991, 0.29393503, 0.37299708,
                0.7116838, 0.9729085, 0.51860094, 0.8672759, 0.03071198, 0.62365896, 0.6566605,
                0.9792835
            ],
            [
                0.7201858, 0.46124813, 0.01468375, 0.04436485, 0.5436191, 0.8299819, 0.18899626,
                0.02270102, 0.4278886, 0.6254018, 0.02546183, 0.7372767, 0.6756809, 0.03686747,
                0.16345957
            ],
            [
                0.2864706, 0.12798376, 0.97041535, 0.14767134, 0.19173194, 0.7269523, 0.3308745,
                0.48967764, 0.7331613, 0.7701771, 0.9474348, 0.6862598, 0.22131853, 0.98268986,
                0.4896969
            ],
            [
                0.6619162, 0.2885029, 0.08790161, 0.63548344, 0.7871616, 0.56886005, 0.3848688,
                0.5216492, 0.61789876, 0.99155945, 0.1660726, 0.45400557, 0.7927198, 0.519493,
                0.1856097
            ],
            [
                0.94973904, 0.55421734, 0.44071785, 0.20264524, 0.4809522, 0.2299158, 0.72079855,
                0.33685237, 0.7066437, 0.41910258, 0.53551847, 0.68504053, 0.75572896, 0.22152406,
                0.3867441
            ],
            [
                0.5252634, 0.6835575, 0.00781578, 0.7451846, 0.59167516, 0.64922994, 0.53241575,
                0.7195878, 0.787326, 0.41490155, 0.57506335, 0.17358404, 0.6447292, 0.5467595,
                0.77786934
            ]
        ],
        [
            [
                0.46338457, 0.74148726, 0.38590935, 0.666266, 0.913767, 0.6195248, 0.18244016,
                0.04169152, 0.73767346, 0.0778392, 0.38854632, 0.54694176, 0.89240646, 0.13090512,
                0.32672238
            ],
            [
                0.45679867, 0.96701485, 0.8894942, 0.2012408, 0.80090123, 0.16573429, 0.9532117,
                0.17446654, 0.39913234, 0.7402852, 0.993621, 0.86146384, 0.7706656, 0.4823058,
                0.65619093
            ],
            [
                0.45011836, 0.6919308, 0.08190992, 0.6624408, 0.5044609, 0.6020873, 0.73197967,
                0.13750179, 0.7614271, 0.44368562, 0.92738414, 0.04963119, 0.05446685, 0.52868897,
                0.83290285
            ],
            [
                0.7527259, 0.8654456, 0.14496519, 0.7941408, 0.03848875, 0.6498168, 0.14606105,
                0.5360965, 0.408017, 0.6618847, 0.21162367, 0.7295462, 0.02214848, 0.39574632,
                0.93228406
            ],
            [
                0.09648224, 0.5918471, 0.56132907, 0.18568946, 0.14083895, 0.9709682, 0.6932929,
                0.9060589, 0.37787062, 0.82105917, 0.86623365, 0.03382622, 0.149902, 0.45536265,
                0.01637395
            ],
            [
                0.13000993, 0.7345686, 0.3311825, 0.5904201, 0.94970685, 0.68421304, 0.59009004,
                0.8618434, 0.6528449, 0.8017509, 0.02745248, 0.22952433, 0.7017341, 0.21967116,
                0.50405574
            ],
            [
                0.8577092, 0.37675846, 0.407479, 0.6243532, 0.46982294, 0.23975594, 0.396583,
                0.19221619, 0.19351119, 0.68409836, 0.16978115, 0.11779778, 0.04202804, 0.6135814,
                0.5199412
            ],
            [
                0.8715136, 0.50771165, 0.4924265, 0.45100802, 0.08637597, 0.40288508, 0.6487766,
                0.7941249, 0.6924839, 0.7086247, 0.68587416, 0.4621445, 0.7496024, 0.91085595,
                0.162838
            ],
            [
                0.45783094, 0.4387137, 0.14814438, 0.04074387, 0.47096238, 0.21848392, 0.6820497,
                0.93032444, 0.6656503, 0.5914259, 0.4931909, 0.3623532, 0.3925273, 0.7389564,
                0.334363
            ],
            [
                0.77226716, 0.3882179, 0.97707474, 0.52904606, 0.80317616, 0.6601235, 0.6945486,
                0.9020445, 0.96140546, 0.72119236, 0.42119923, 0.00080285, 0.906, 0.75012404,
                0.33486333
            ]
        ]
    ];

    let kernel30: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.88640976, 0.71259856, 0.7445628, 0.03754441, 0.88537115, 0.63763183, 0.39005476,
            0.42324457, 0.9558617, 0.31640235, 0.5954703, 0.7692697, 0.9749447, 0.4838307,
            0.48876184, 0.83975345, 0.40678144, 0.6028544, 0.26352006, 0.10377176, 0.8149961,
            0.80427086, 0.9988898, 0.2223024, 0.65762943, 0.7414227, 0.24283217, 0.71635485,
            0.16035181, 0.24824439, 0.03641145, 0.88133335, 0.7948271, 0.38749498, 0.9271626,
            0.24522811, 0.10074908, 0.6503069, 0.88709897, 0.4668421, 0.1023455, 0.4260665,
            0.39407018, 0.04832328, 0.83194524, 0.7663677, 0.36219996, 0.37628287, 0.9952911,
            0.9246838, 0.542522, 0.47941732, 0.19754058, 0.7832372, 0.51153195, 0.12909189,
            0.59161955, 0.42772555, 0.13567366, 0.90997946, 0.8507247, 0.00591142, 0.62844396,
            0.20012486, 0.13939072, 0.85847044, 0.9232842, 0.83398765, 0.48977068, 0.12412303,
            0.08583226, 0.42277342, 0.23401077, 0.34888557, 0.03209783, 0.47692633, 0.20553346,
            0.21179068, 0.8939974, 0.24929681, 0.29794613, 0.54092985, 0.26319242, 0.08868469,
            0.7000697, 0.85711455, 0.01657799, 0.95646167, 0.8551138, 0.43697715, 0.863551,
            0.6293653, 0.13638273, 0.21221249, 0.03825287, 0.38785052, 0.03818879, 0.45113885,
            0.7580914, 0.80387026, 0.04009474, 0.57682234, 0.83644694, 0.69940186, 0.75166476,
            0.16722608, 0.0324995, 0.72855157, 0.14952931, 0.3866544, 0.974773, 0.5621936,
            0.15980154, 0.36363718, 0.8870456, 0.51589406, 0.48859268, 0.06674533, 0.45603734,
            0.71169674, 0.9410913, 0.17138262, 0.12467484, 0.78135294, 0.2840905, 0.35029164,
            0.926685, 0.82449114, 0.22348203, 0.5740834, 0.1589417, 0.22166131, 0.89472646,
            0.07900955, 0.52299017, 0.67588323, 0.45705855, 0.6528909, 0.18496908, 0.15193757,
            0.86474276, 0.2502391, 0.7112734, 0.9727279, 0.22000751, 0.8406605, 0.94081557,
            0.5302998, 0.42161968, 0.19625777,
        ],
    )
    .unwrap();
    let conv_layer30 = ConvolutionLayer::new(kernel30, 1, Padding::Valid);
    let target_output30: Array3<f32> = array![
        [
            [
                19.304907, 21.628826, 19.711115, 21.26804, 19.474957, 20.255196, 22.865664,
                19.861284, 20.397741, 20.049957, 18.567833
            ],
            [
                19.498943, 20.65374, 20.780529, 22.123356, 20.900915, 21.447182, 21.627583,
                20.184998, 19.608244, 18.702433, 18.672796
            ],
            [
                17.164394, 18.222414, 19.690058, 21.438108, 21.596346, 20.442818, 21.659328,
                21.095173, 19.98558, 17.318209, 18.884748
            ],
            [
                18.795242, 20.544554, 19.031555, 22.49224, 19.987211, 22.251451, 21.849392,
                20.08589, 18.019733, 20.845222, 17.58267
            ],
            [
                18.641052, 16.837572, 17.553364, 19.994602, 21.464577, 20.841475, 21.05434,
                22.037628, 21.278378, 19.141693, 19.736681
            ],
            [
                18.958214, 19.043295, 19.822926, 21.042736, 22.473345, 22.691862, 21.868168,
                21.86671, 20.153872, 20.171793, 18.384432
            ]
        ],
        [
            [
                18.32509, 19.21613, 18.651865, 18.450682, 18.654696, 19.513842, 21.144667,
                19.216139, 19.075481, 17.464045, 18.776243
            ],
            [
                18.478268, 18.534288, 19.840094, 21.264093, 20.090633, 18.706087, 19.731852,
                17.199772, 17.722559, 17.33631, 18.381397
            ],
            [
                16.572672, 18.271603, 18.44327, 21.12967, 19.462847, 20.29613, 19.369184,
                18.995932, 17.835577, 17.87953, 16.538857
            ],
            [
                16.429995, 19.454638, 17.279123, 19.563095, 18.487743, 21.376965, 19.303467,
                20.028864, 17.120924, 18.141565, 16.768763
            ],
            [
                16.727032, 16.431063, 17.3993, 19.054857, 18.873999, 21.570932, 19.635387,
                18.51353, 18.212528, 19.007092, 16.833092
            ],
            [
                17.463034, 18.351875, 18.324755, 19.858017, 21.089012, 20.806892, 19.890093,
                19.650211, 18.98233, 18.033976, 18.089363
            ]
        ]
    ];
    let current_output30: Array3<f32> = conv_layer30.convolve(&test_input30);

    assert!(
        arr_allclose(&current_output30, &target_output30),
        "{:?} was not equal to {:?}",
        current_output30,
        target_output30
    );

    let test_input31 = array![
        [
            [
                0.11980431, 0.05043373, 0.44856635, 0.0995127, 0.66721714, 0.99523526, 0.38974792,
                0.0062347, 0.25642252, 0.7978388
            ],
            [
                0.6872969, 0.29115057, 0.7955641, 0.7705071, 0.6904003, 0.5532616, 0.16051039,
                0.09648368, 0.98106205, 0.82000685
            ],
            [
                0.48767114, 0.9016004, 0.11782064, 0.02350398, 0.85411555, 0.54948294, 0.86921203,
                0.5469399, 0.38010216, 0.8991906
            ],
            [
                0.30023637, 0.1237447, 0.4909772, 0.72805625, 0.9530135, 0.5457807, 0.7374898,
                0.02905989, 0.8896496, 0.809669
            ],
            [
                0.14540058, 0.8414026, 0.26861846, 0.25325528, 0.97593206, 0.7466225, 0.42966273,
                0.01035187, 0.8856615, 0.23396358
            ],
            [
                0.35538375, 0.43052003, 0.2562911, 0.43928608, 0.6909486, 0.15833755, 0.06233076,
                0.36822248, 0.04919559, 0.93492836
            ],
            [
                0.96549, 0.8648635, 0.24502176, 0.9563036, 0.8091006, 0.21886946, 0.0567609,
                0.07057995, 0.16586034, 0.08248742
            ],
            [
                0.28810686, 0.24666145, 0.7280006, 0.21720299, 0.2797197, 0.1429008, 0.12540661,
                0.16514674, 0.79326254, 0.21495369
            ],
            [
                0.20266142, 0.5993377, 0.5696813, 0.6916412, 0.32460627, 0.9414587, 0.0734322,
                0.8068955, 0.07320249, 0.9129043
            ],
            [
                0.860546, 0.14726785, 0.5177399, 0.26826426, 0.36311296, 0.6151039, 0.6325487,
                0.8320421, 0.48682922, 0.21009445
            ],
            [
                0.04975929, 0.80676097, 0.7848971, 0.70026565, 0.9457111, 0.85440516, 0.7180487,
                0.5517275, 0.8578678, 0.23224549
            ],
            [
                0.02310899, 0.2598548, 0.9800414, 0.72586274, 0.22645572, 0.90784466, 0.534928,
                0.75128937, 0.46953654, 0.7742914
            ],
            [
                0.49730703, 0.8848362, 0.38707262, 0.9234643, 0.79674083, 0.86324733, 0.32076064,
                0.3920287, 0.6946018, 0.24372894
            ],
            [
                0.4939616, 0.5965326, 0.11160661, 0.09670109, 0.39188403, 0.5604396, 0.2022228,
                0.5031573, 0.9767708, 0.39591292
            ],
            [
                0.9079947, 0.65592414, 0.5572757, 0.07000257, 0.30442452, 0.77393323, 0.2155859,
                0.8007856, 0.6095338, 0.68177587
            ]
        ],
        [
            [
                0.30807668, 0.12723272, 0.2624294, 0.08031525, 0.17361915, 0.6581009, 0.8524115,
                0.9864116, 0.35544556, 0.9968594
            ],
            [
                0.01807762, 0.09607173, 0.685791, 0.86541873, 0.34976122, 0.95970744, 0.01258456,
                0.16584113, 0.68078685, 0.7718611
            ],
            [
                0.70951277, 0.7881427, 0.05957514, 0.7684956, 0.02124477, 0.02591292, 0.4866433,
                0.37939194, 0.95164126, 0.6288754
            ],
            [
                0.71587545, 0.70287865, 0.00513179, 0.97035193, 0.07550302, 0.43179563, 0.5303815,
                0.84309703, 0.04810897, 0.03910594
            ],
            [
                0.90726244, 0.11982161, 0.60190606, 0.13881885, 0.5218702, 0.8505226, 0.338509,
                0.3031956, 0.05187115, 0.25060338
            ],
            [
                0.73213947, 0.84957284, 0.9386545, 0.6592098, 0.61787504, 0.8886515, 0.41375995,
                0.15206665, 0.6929648, 0.8471453
            ],
            [
                0.10857984, 0.3216597, 0.40264118, 0.99361944, 0.03882129, 0.60990226, 0.6618832,
                0.7937507, 0.53550744, 0.7804362
            ],
            [
                0.5908287, 0.5222477, 0.171798, 0.75876254, 0.32153466, 0.90698326, 0.1332323,
                0.6010551, 0.81028926, 0.6555247
            ],
            [
                0.51127625, 0.7477862, 0.87416846, 0.62494177, 0.70959914, 0.6630958, 0.37875828,
                0.4726575, 0.12168032, 0.84286946
            ],
            [
                0.60123307, 0.7902299, 0.33639956, 0.1295481, 0.33253834, 0.16333707, 0.45462114,
                0.9793079, 0.875736, 0.00543618
            ],
            [
                0.45436794, 0.268819, 0.6777965, 0.8685083, 0.24649319, 0.35102448, 0.8317649,
                0.10098601, 0.12133782, 0.50588506
            ],
            [
                0.45685568, 0.09913059, 0.2510396, 0.09967189, 0.16055934, 0.96178347, 0.6883946,
                0.66844714, 0.46234563, 0.328285
            ],
            [
                0.99242496, 0.11227968, 0.42852715, 0.7350134, 0.95016545, 0.1932244, 0.9673775,
                0.24141203, 0.75072336, 0.49899355
            ],
            [
                0.11416891, 0.12978615, 0.80415183, 0.17522074, 0.9932483, 0.07845373, 0.30105925,
                0.87208086, 0.21871181, 0.73465174
            ],
            [
                0.22369012, 0.6682944, 0.17275229, 0.3533166, 0.5472081, 0.43991742, 0.3237903,
                0.16511486, 0.780079, 0.20005976
            ]
        ],
        [
            [
                0.13390501, 0.9824148, 0.00958934, 0.38621363, 0.21235856, 0.6043816, 0.36282185,
                0.53632265, 0.8767314, 0.93126136
            ],
            [
                0.53289115, 0.9291924, 0.24262014, 0.17621124, 0.21581873, 0.55223054, 0.97428215,
                0.13684596, 0.0038069, 0.00677892
            ],
            [
                0.4362493, 0.20579426, 0.8304564, 0.91710156, 0.11364035, 0.42192397, 0.9635667,
                0.2165768, 0.97265726, 0.94870436
            ],
            [
                0.308687, 0.5642258, 0.96346223, 0.34751764, 0.14497681, 0.24281646, 0.89710975,
                0.25471458, 0.92559075, 0.50459677
            ],
            [
                0.52693003, 0.10823907, 0.6963788, 0.0617022, 0.79595083, 0.9156915, 0.5958763,
                0.8194214, 0.5123032, 0.22599821
            ],
            [
                0.68476427, 0.67671156, 0.7209084, 0.19666669, 0.46187317, 0.6841967, 0.10668167,
                0.46758506, 0.85146296, 0.49949893
            ],
            [
                0.04954484, 0.5967798, 0.7135809, 0.27493003, 0.4241894, 0.74957037, 0.31648433,
                0.35538703, 0.9107666, 0.07774146
            ],
            [
                0.07081332, 0.15884496, 0.16601218, 0.40750048, 0.24065089, 0.4561631, 0.0730514,
                0.20042138, 0.61555564, 0.59598464
            ],
            [
                0.8523459, 0.39690518, 0.9011878, 0.6454708, 0.92651147, 0.21866481, 0.2656954,
                0.6983828, 0.6426804, 0.43912458
            ],
            [
                0.0920186, 0.24951272, 0.39910504, 0.04226355, 0.03372582, 0.35070628, 0.8023284,
                0.34594545, 0.59496605, 0.68560296
            ],
            [
                0.49572426, 0.4114992, 0.17057472, 0.7508676, 0.9665724, 0.07823556, 0.6794208,
                0.03686264, 0.2815227, 0.8644135
            ],
            [
                0.40417364, 0.7969972, 0.11597095, 0.29483116, 0.43114743, 0.6382897, 0.5840903,
                0.66343355, 0.26003668, 0.83035487
            ],
            [
                0.83261126, 0.83485615, 0.3326272, 0.24397685, 0.21724485, 0.5176914, 0.00598922,
                0.8279213, 0.9753633, 0.31899843
            ],
            [
                0.68334943, 0.10638801, 0.28193727, 0.30331546, 0.44458252, 0.09437273, 0.18510874,
                0.6317367, 0.7000181, 0.00274565
            ],
            [
                0.68718666, 0.578825, 0.35462692, 0.616583, 0.2751976, 0.05888736, 0.42484936,
                0.9651604, 0.213527, 0.5214844
            ]
        ]
    ];

    let kernel31: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.5637177, 0.21445233, 0.97274446, 0.96067435, 0.7740049, 0.82454914, 0.04093061,
            0.6204497, 0.6451747, 0.34419012, 0.17637333, 0.12974854, 0.6806969, 0.25830767,
            0.6722372, 0.19486532, 0.20731905, 0.22394986, 0.46725455, 0.5958368, 0.53723675,
            0.972841, 0.3401532, 0.7913009, 0.08197373, 0.63256073, 0.05523287, 0.8187329,
            0.11806071, 0.7486978, 0.29916614, 0.6388251, 0.37664893, 0.4275515, 0.28326756,
            0.35058063, 0.70609355, 0.32952574, 0.7944709, 0.91396964, 0.21258484, 0.50744605,
            0.25447014, 0.8391098, 0.14626299, 0.23119006, 0.17714995, 0.69576323, 0.01715484,
            0.96206266, 0.78958917, 0.6507138, 0.05410179, 0.4686973,
        ],
    )
    .unwrap();
    let conv_layer31 = ConvolutionLayer::new(kernel31, 1, Padding::Valid);
    let target_output31: Array3<f32> = array![
        [
            [
                5.5929155, 5.6010585, 5.2978654, 5.2683864, 7.0817432, 6.891318, 6.3827176,
                7.1729293
            ],
            [6.092562, 6.3027744, 7.2414393, 6.62055, 7.0924525, 6.726885, 6.2479677, 6.5738764],
            [5.918055, 6.39891, 6.1275167, 6.442115, 7.5054708, 6.940134, 6.897505, 6.768322],
            [6.4478536, 6.0736837, 6.870145, 6.9444447, 6.8993783, 6.112701, 4.9264426, 6.682534],
            [6.6959715, 6.914583, 6.26699, 7.0072503, 7.136141, 5.51642, 4.5463934, 5.7296014],
            [6.165549, 6.2804837, 6.5675054, 5.8833275, 5.3665714, 3.6047506, 4.439051, 5.626118],
            [6.2079196, 7.0754614, 6.801006, 7.1314964, 5.5388517, 4.965525, 4.951036, 6.6646833],
            [6.0070653, 5.5512824, 5.840746, 5.071352, 5.4928546, 5.808253, 6.123049, 7.2474637],
            [6.0315886, 7.1320705, 7.384837, 7.451573, 7.4763346, 6.8062124, 7.039696, 5.779864],
            [5.6374383, 6.2909904, 5.877011, 5.786479, 7.1114497, 7.5857005, 7.774559, 7.117802],
            [6.3998494, 7.416973, 7.171996, 8.270834, 7.488978, 7.575977, 6.092203, 7.035157],
            [5.658574, 5.589969, 5.2958236, 5.9233603, 6.0480514, 6.4284606, 7.412243, 7.1542487],
            [7.5025854, 5.05842, 5.5411453, 5.8765855, 5.5900316, 5.4586463, 6.842902, 8.068247]
        ],
        [
            [5.429011, 5.8439894, 5.03366, 5.7805815, 5.7958727, 7.0290785, 6.967341, 7.296251],
            [5.4820514, 6.5968814, 6.744201, 6.368688, 6.4645486, 6.154681, 6.1647663, 6.6227155],
            [6.0615177, 6.7706037, 5.2473164, 5.7475796, 7.212312, 7.2924953, 6.403963, 6.820387],
            [7.0621414, 5.9523635, 6.26504, 7.214949, 7.3808713, 5.662138, 5.9659514, 5.743311],
            [
                6.6591806, 6.6081963, 6.4634953, 7.255613, 6.8920436, 5.4913087, 5.3313994,
                5.384614
            ],
            [6.075968, 6.481947, 6.0326686, 6.3296175, 5.5483413, 4.917848, 4.2198086, 6.618444],
            [5.954656, 7.3033714, 7.1939545, 7.428967, 5.398997, 5.503961, 5.555809, 6.418472],
            [6.1542354, 5.821004, 5.6518054, 5.3338766, 5.083615, 5.325624, 6.4418344, 7.43121],
            [5.8772388, 6.8678837, 7.2321997, 6.747837, 6.530623, 7.546794, 6.3086457, 5.529954],
            [6.373355, 5.237844, 5.31811, 5.989003, 6.27839, 7.4831896, 7.095027, 7.3135085],
            [
                6.4063926, 6.6164775, 6.7777886, 7.226013, 7.616874, 6.9717636, 7.1071362,
                6.0910597
            ],
            [5.1875067, 4.856633, 5.773944, 5.4295454, 6.702106, 5.8469653, 7.0819693, 7.870319],
            [6.388404, 5.454423, 5.869336, 6.173893, 5.1795626, 6.407513, 6.480027, 7.272621]
        ]
    ];
    let current_output31: Array3<f32> = conv_layer31.convolve(&test_input31);

    assert!(
        arr_allclose(&current_output31, &target_output31),
        "{:?} was not equal to {:?}",
        current_output31,
        target_output31
    );

    let test_input32 = array![
        [
            [
                0.7351389, 0.10655332, 0.77344525, 0.553476, 0.16894332, 0.89767647, 0.203828,
                0.75384825, 0.758624, 0.17905368
            ],
            [
                0.2860684, 0.6444675, 0.5231733, 0.02075461, 0.45745206, 0.01996619, 0.39505485,
                0.39265913, 0.1213429, 0.825869
            ],
            [
                0.85618263, 0.7577091, 0.3459607, 0.9557201, 0.9293787, 0.07907034, 0.41537428,
                0.85995775, 0.9160312, 0.26174
            ],
            [
                0.31216502, 0.7373654, 0.2825182, 0.9381195, 0.62593824, 0.29817143, 0.2641736,
                0.6251491, 0.06003402, 0.06863046
            ],
            [
                0.66786885, 0.73104405, 0.23246141, 0.4816245, 0.7781154, 0.41137746, 0.9972559,
                0.49030396, 0.9647698, 0.3909372
            ],
            [
                0.13691516, 0.20412357, 0.22074686, 0.05624962, 0.6889985, 0.6338539, 0.89087915,
                0.76289177, 0.9616415, 0.8376677
            ],
            [
                0.03124781, 0.8672895, 0.45569643, 0.41169244, 0.230716, 0.6527877, 0.9535316,
                0.16538836, 0.31145656, 0.02828005
            ],
            [
                0.14747888, 0.30263218, 0.9998127, 0.9264461, 0.46344218, 0.4029006, 0.36729267,
                0.36346474, 0.36422956, 0.7725577
            ],
            [
                0.89565295, 0.5492495, 0.12382696, 0.7948714, 0.2934778, 0.28533515, 0.4650447,
                0.36790222, 0.66567504, 0.81930286
            ],
            [
                0.37452427, 0.06236777, 0.61082655, 0.94621384, 0.1944808, 0.09286012, 0.7080163,
                0.44260016, 0.2740555, 0.37098762
            ],
            [
                0.21528777, 0.19037104, 0.7929086, 0.48885155, 0.11583171, 0.2444331, 0.31950995,
                0.82152086, 0.92018557, 0.6324256
            ],
            [
                0.8988874, 0.7919196, 0.63617104, 0.642465, 0.5914831, 0.63586736, 0.8462637,
                0.44348246, 0.4584158, 0.87631005
            ],
            [
                0.6688897, 0.89464474, 0.36634243, 0.33335868, 0.16760358, 0.6169529, 0.19301598,
                0.06703918, 0.11021607, 0.46326014
            ],
            [
                0.9099846, 0.19569385, 0.22239834, 0.16384327, 0.9711869, 0.11606233, 0.49665624,
                0.48572266, 0.8352311, 0.8049802
            ],
            [
                0.32960874, 0.79986304, 0.8312853, 0.11399209, 0.37213323, 0.56118464, 0.99523085,
                0.3857257, 0.49142754, 0.63120776
            ]
        ],
        [
            [
                0.07301666, 0.97564507, 0.61317027, 0.21154444, 0.9486215, 0.5222088, 0.13832045,
                0.9633764, 0.01639629, 0.19411111
            ],
            [
                0.04715753, 0.31424382, 0.44769424, 0.10706459, 0.44355088, 0.71309346, 0.5469934,
                0.6052618, 0.38917127, 0.88367033
            ],
            [
                0.4407754, 0.73792094, 0.14433429, 0.85192674, 0.02097251, 0.9563302, 0.45995143,
                0.10583407, 0.5678417, 0.10541193
            ],
            [
                0.87573344, 0.12863557, 0.79587996, 0.53403527, 0.2113896, 0.6925418, 0.43096247,
                0.6965461, 0.6987717, 0.9816463
            ],
            [
                0.6430677, 0.65803695, 0.7858138, 0.7489411, 0.66253483, 0.4890013, 0.8323405,
                0.48294267, 0.7292857, 0.92350286
            ],
            [
                0.34584802, 0.00624331, 0.69736785, 0.29992157, 0.89269227, 0.948173, 0.31388247,
                0.00432913, 0.29734898, 0.406034
            ],
            [
                0.5678819, 0.7089132, 0.9420309, 0.10524429, 0.89597744, 0.3581413, 0.8442464,
                0.6326036, 0.49300048, 0.88413817
            ],
            [
                0.9037477, 0.00271136, 0.98342794, 0.04954946, 0.787193, 0.7686151, 0.19857672,
                0.17108533, 0.58195865, 0.8838584
            ],
            [
                0.16141163, 0.60231775, 0.294304, 0.14176327, 0.37438837, 0.10216843, 0.17332368,
                0.11517226, 0.3817901, 0.32803875
            ],
            [
                0.6643417, 0.7733252, 0.947744, 0.00787854, 0.13019027, 0.58464366, 0.70387626,
                0.697838, 0.99696946, 0.8761452
            ],
            [
                0.5237107, 0.8381286, 0.45777786, 0.15208961, 0.56539786, 0.26558962, 0.00088664,
                0.05462804, 0.43966386, 0.47845423
            ],
            [
                0.34291574, 0.69536626, 0.1036236, 0.68493664, 0.841703, 0.14973171, 0.51744187,
                0.2674213, 0.05020873, 0.8967645
            ],
            [
                0.28862262, 0.738402, 0.99305737, 0.6317803, 0.08334628, 0.5971739, 0.05311463,
                0.3840044, 0.05716072, 0.9456335
            ],
            [
                0.31587508, 0.6932092, 0.91989446, 0.26697785, 0.1736736, 0.20744501, 0.9865482,
                0.94583005, 0.80740196, 0.3352269
            ],
            [
                0.01231102, 0.06471063, 0.7702817, 0.04418208, 0.05123908, 0.31676802, 0.02213015,
                0.9998762, 0.34928933, 0.7523395
            ]
        ],
        [
            [
                0.27983865, 0.05932388, 0.08217912, 0.19400315, 0.92018247, 0.21455717, 0.5881519,
                0.5959824, 0.3016201, 0.82684654
            ],
            [
                0.06193527, 0.10932652, 0.39186087, 0.5791381, 0.519928, 0.68690145, 0.31554794,
                0.9284058, 0.7799773, 0.57404125
            ],
            [
                0.633255, 0.23396462, 0.5666275, 0.6193624, 0.23979846, 0.01872301, 0.64512044,
                0.4484315, 0.57392234, 0.6379088
            ],
            [
                0.15632313, 0.9590727, 0.8191361, 0.79628325, 0.1876398, 0.1792817, 0.76093376,
                0.04901551, 0.12188532, 0.75263584
            ],
            [
                0.56340057, 0.07880943, 0.55886114, 0.64294606, 0.9903388, 0.06506247, 0.18129697,
                0.12433387, 0.73773444, 0.25497472
            ],
            [
                0.5884459, 0.56834316, 0.08598603, 0.25001067, 0.30140767, 0.464108, 0.5700806,
                0.9234758, 0.811496, 0.9758267
            ],
            [
                0.12168682, 0.81502956, 0.03257992, 0.29636487, 0.23406821, 0.6885466, 0.40710646,
                0.68527246, 0.49084947, 0.08669137
            ],
            [
                0.6970686, 0.49293855, 0.9118095, 0.40840417, 0.20486033, 0.24171825, 0.32654667,
                0.3027954, 0.58513415, 0.80932313
            ],
            [
                0.06084506, 0.91577756, 0.36349937, 0.49541315, 0.7306092, 0.55541974, 0.3212567,
                0.08391169, 0.47639692, 0.5654139
            ],
            [
                0.24304809, 0.78207755, 0.08051699, 0.84173137, 0.66277754, 0.6512211, 0.44558695,
                0.32629654, 0.17646311, 0.69403934
            ],
            [
                0.44565287, 0.70450526, 0.96684873, 0.8550647, 0.6370797, 0.7020013, 0.4422912,
                0.8638695, 0.13879521, 0.52424467
            ],
            [
                0.5377849, 0.72673947, 0.5688153, 0.6256276, 0.26191136, 0.17741989, 0.89845973,
                0.5524051, 0.9414409, 0.9048843
            ],
            [
                0.01719667, 0.43135417, 0.5723982, 0.86594313, 0.14621608, 0.95570713, 0.8926391,
                0.12217854, 0.03542557, 0.8012088
            ],
            [
                0.9948361, 0.287212, 0.645167, 0.34233773, 0.49766174, 0.47700465, 0.67733943,
                0.3003492, 0.39818338, 0.8549322
            ],
            [
                0.21975358, 0.77274996, 0.82208914, 0.41363552, 0.16918235, 0.91666114, 0.558943,
                0.5093269, 0.6983236, 0.96101004
            ]
        ]
    ];

    let kernel32: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.9997972, 0.2778266, 0.9220868, 0.10170663, 0.33923522, 0.49100837, 0.5850524,
            0.94955045, 0.08288938, 0.86614877, 0.9029227, 0.38428995, 0.69930184, 0.07096831,
            0.43514693, 0.35515, 0.73666346, 0.60863686, 0.895856, 0.41573936, 0.5904251,
            0.37262207, 0.7722144, 0.58982396, 0.682487, 0.37460858, 0.2545693, 0.42995888,
            0.69825464, 0.9811295, 0.68170774, 0.80277765, 0.11250915, 0.7072854, 0.5328812,
            0.12515384, 0.0841737, 0.6240293, 0.8472775, 0.31476194, 0.8554102, 0.49978712,
            0.20403187, 0.11740076, 0.49698648, 0.11358444, 0.16815847, 0.4929124, 0.11822087,
            0.53853285, 0.32562396, 0.44291237, 0.674916, 0.17941345,
        ],
    )
    .unwrap();
    let conv_layer32 = ConvolutionLayer::new(kernel32, 1, Padding::Valid);
    let target_output32: Array3<f32> = array![
        [
            [6.361695, 5.8524528, 6.9136863, 7.2984705, 7.1001773, 7.072506, 7.0415554, 8.805956],
            [5.8939366, 8.147817, 7.088388, 7.0395174, 5.966232, 7.400275, 7.6084075, 7.466009],
            [8.75667, 8.743708, 8.053937, 7.866372, 6.9228888, 6.921441, 7.1274524, 7.337234],
            [6.614301, 7.766017, 7.8630204, 7.83336, 8.027908, 6.7391624, 8.051899, 8.330151],
            [7.1022706, 6.3767166, 7.82559, 7.1544976, 8.978285, 8.045785, 9.473125, 7.6871595],
            [6.569733, 5.85554, 7.5949435, 6.5359116, 8.843232, 7.3202353, 7.562127, 7.7994337],
            [8.066555, 7.842951, 7.0385146, 6.412171, 6.4291577, 6.335253, 6.610444, 6.580678],
            [
                7.374764, 7.0533504, 7.7850947, 6.9269266, 6.3567085, 5.5052767, 6.2034535,
                7.138542
            ],
            [7.253485, 8.118701, 7.2359076, 6.530627, 6.002763, 5.46953, 6.3041625, 6.973723],
            [8.252267, 9.1145935, 7.741908, 6.887035, 6.57068, 7.0952506, 7.9567175, 7.8574324],
            [8.311391, 9.33905, 7.878315, 6.9718647, 6.730357, 6.896533, 5.4965687, 7.5044594],
            [8.60628, 8.047713, 6.8258214, 7.230291, 7.310425, 6.9307466, 6.9689636, 7.4461484],
            [7.1415124, 8.383518, 7.4732447, 5.751862, 6.111318, 7.867101, 7.3919334, 7.421362]
        ],
        [
            [5.402323, 5.9118342, 5.004154, 6.0466104, 5.595939, 5.76078, 6.2778664, 6.080749],
            [6.411442, 6.4426003, 6.187863, 5.8400517, 5.155381, 5.8344135, 5.790942, 6.7506633],
            [7.019289, 7.554374, 7.35294, 6.219944, 6.3886805, 5.3192015, 6.6084194, 6.2590065],
            [5.67333, 6.0625606, 6.7046647, 6.130994, 6.6678762, 6.1940446, 6.567499, 6.3496523],
            [
                4.6556644, 5.4677415, 5.6822147, 5.7009864, 7.644856, 7.5255265, 8.082092,
                7.0603943
            ],
            [5.440674, 5.2076287, 6.0179887, 6.1870775, 6.9145327, 6.8523526, 6.418602, 5.979162],
            [6.006759, 6.824843, 5.251737, 5.6849074, 5.6984105, 4.764986, 4.3985405, 4.7327313],
            [6.587526, 6.310258, 5.9760804, 5.872399, 4.601728, 4.304912, 5.408622, 6.487341],
            [5.7718477, 6.663929, 6.6508837, 5.093682, 4.469428, 4.6886783, 5.1182632, 6.498322],
            [
                6.5580616, 7.6933093, 6.2492476, 5.640785, 5.2980804, 5.2691574, 5.880987,
                6.2805896
            ],
            [
                7.1971917, 7.5976405, 6.2916484, 5.9264126, 4.9564238, 6.4084787, 5.4639564,
                5.8610663
            ],
            [7.688001, 7.1628256, 6.1004925, 4.8810716, 6.675872, 5.452563, 5.427629, 5.7550406],
            [5.9393396, 6.231234, 5.4362445, 4.244926, 4.842963, 5.5408955, 6.060924, 7.2078567]
        ]
    ];
    let current_output32: Array3<f32> = conv_layer32.convolve(&test_input32);

    assert!(
        arr_allclose(&current_output32, &target_output32),
        "{:?} was not equal to {:?}",
        current_output32,
        target_output32
    );

    let test_input33 = array![
        [
            [
                0.24435802, 0.51685953, 0.6813218, 0.5406228, 0.8402446, 0.57455206, 0.21274436,
                0.21751188, 0.6327846, 0.9325366
            ],
            [
                0.08400947, 0.8396681, 0.7454953, 0.8714838, 0.46964037, 0.5946748, 0.46486276,
                0.46776876, 0.7749035, 0.5702429
            ],
            [
                0.00275485, 0.5455553, 0.7504094, 0.0516187, 0.7427081, 0.5231299, 0.8063814,
                0.27779007, 0.33038312, 0.94963986
            ],
            [
                0.73109215, 0.21866089, 0.0114934, 0.0989068, 0.926821, 0.48527932, 0.16351804,
                0.3116739, 0.5386763, 0.3653472
            ],
            [
                0.8093628, 0.17813227, 0.4354284, 0.86026084, 0.47061768, 0.07629808, 0.7161806,
                0.94789124, 0.73321646, 0.5816211
            ],
            [
                0.897314, 0.85125345, 0.5046985, 0.98244303, 0.06972428, 0.30822515, 0.02439791,
                0.18523273, 0.53135425, 0.4664868
            ],
            [
                0.9941263, 0.19982047, 0.90395254, 0.5478458, 0.96795374, 0.22741623, 0.00554162,
                0.55170393, 0.5601068, 0.75972295
            ],
            [
                0.7179427, 0.5663951, 0.00826331, 0.11534049, 0.42596257, 0.6817369, 0.4604141,
                0.34953818, 0.69908696, 0.7361598
            ],
            [
                0.88632005, 0.68609756, 0.6732832, 0.37878716, 0.32302734, 0.5766481, 0.27476153,
                0.01185389, 0.19381721, 0.9255945
            ],
            [
                0.08145659, 0.2965461, 0.9996797, 0.12471338, 0.61783546, 0.43614203, 0.39178115,
                0.35493043, 0.49653238, 0.5755102
            ],
            [
                0.51010305, 0.91676563, 0.5230349, 0.700519, 0.76227057, 0.06306251, 0.5069124,
                0.9456902, 0.00299157, 0.12880772
            ],
            [
                0.05983794, 0.77259356, 0.5264099, 0.25460967, 0.28755966, 0.16006812, 0.8973991,
                0.2606863, 0.26253387, 0.67275447
            ],
            [
                0.84160686, 0.1393529, 0.49849266, 0.955501, 0.9176197, 0.39986315, 0.89406526,
                0.08086525, 0.37690058, 0.9472316
            ],
            [
                0.90634656, 0.41918305, 0.94620466, 0.9539543, 0.7064477, 0.85239345, 0.10098496,
                0.34863842, 0.02051973, 0.37064746
            ],
            [
                0.34976023, 0.63522565, 0.5822416, 0.31255615, 0.7061453, 0.13239637, 0.51017934,
                0.8859752, 0.9154152, 0.0093977
            ]
        ],
        [
            [
                0.9257646, 0.14790155, 0.86361974, 0.00816071, 0.16182604, 0.71637905, 0.5098158,
                0.23436014, 0.27748674, 0.0989435
            ],
            [
                0.49678063, 0.3482415, 0.40149435, 0.44752908, 0.4844109, 0.58768094, 0.8322659,
                0.2263038, 0.9106096, 0.10668962
            ],
            [
                0.9503608, 0.00645077, 0.01176434, 0.36804476, 0.185258, 0.23739757, 0.09321253,
                0.6142842, 0.9766592, 0.37697607
            ],
            [
                0.6303855, 0.6886716, 0.7045316, 0.9038667, 0.7685541, 0.09102922, 0.3052067,
                0.2785308, 0.85340834, 0.02803171
            ],
            [
                0.38585195, 0.76870936, 0.15628383, 0.93176335, 0.53949803, 0.8465009, 0.02412173,
                0.11517583, 0.07861274, 0.64147437
            ],
            [
                0.09359702, 0.8526771, 0.18144442, 0.1424162, 0.20421812, 0.39205092, 0.42704046,
                0.6523331, 0.2849727, 0.6945481
            ],
            [
                0.01063524, 0.2942452, 0.4888085, 0.52514094, 0.703604, 0.14197119, 0.08584995,
                0.34441712, 0.56593883, 0.4493232
            ],
            [
                0.19173315, 0.07816565, 0.5425498, 0.7132138, 0.4862424, 0.0525712, 0.96248484,
                0.6902671, 0.2879344, 0.8519083
            ],
            [
                0.55267817, 0.07016034, 0.82135326, 0.62920415, 0.90577847, 0.9347623, 0.09443506,
                0.23280993, 0.65946394, 0.8947401
            ],
            [
                0.03987844, 0.38589397, 0.77658385, 0.48183945, 0.94045246, 0.11011575, 0.7308709,
                0.8328545, 0.29012534, 0.4569207
            ],
            [
                0.9529406, 0.5358466, 0.9687458, 0.4472085, 0.18282856, 0.769097, 0.8386977,
                0.21557523, 0.94424677, 0.50224614
            ],
            [
                0.21579173, 0.9772731, 0.47108477, 0.99656236, 0.36141592, 0.7001516, 0.57343286,
                0.61278397, 0.27807143, 0.6407772
            ],
            [
                0.3605408, 0.72915196, 0.5104628, 0.59073764, 0.5717296, 0.29667476, 0.92121494,
                0.9667328, 0.47047687, 0.71601814
            ],
            [
                0.49495855, 0.27396587, 0.04238893, 0.3999544, 0.99121827, 0.70719117, 0.23122132,
                0.10337279, 0.33192208, 0.27677527
            ],
            [
                0.20377244, 0.39588144, 0.3832173, 0.26080993, 0.4803283, 0.35350803, 0.6332842,
                0.41102257, 0.2293425, 0.63983893
            ]
        ],
        [
            [
                0.3601743, 0.31631762, 0.8700462, 0.81253463, 0.9968952, 0.8596117, 0.02886825,
                0.3830526, 0.84223384, 0.6051626
            ],
            [
                0.97340894, 0.10386568, 0.4452185, 0.90387195, 0.88147926, 0.34565842, 0.64309967,
                0.70366824, 0.48822477, 0.92969257
            ],
            [
                0.14900696, 0.21402211, 0.07800543, 0.8195282, 0.2418856, 0.92642605, 0.3954864,
                0.71764106, 0.42897722, 0.8851262
            ],
            [
                0.24837622, 0.69469833, 0.35201788, 0.51265216, 0.4955361, 0.6430718, 0.49957812,
                0.13845451, 0.9765559, 0.6471354
            ],
            [
                0.5898562, 0.8990035, 0.1745854, 0.5679988, 0.05189181, 0.5065825, 0.9533139,
                0.85233843, 0.33750752, 0.7184982
            ],
            [
                0.19160785, 0.4098685, 0.47525635, 0.9882022, 0.5577621, 0.06246058, 0.32884195,
                0.8833122, 0.68437326, 0.27290356
            ],
            [
                0.06917533, 0.41777328, 0.9895415, 0.7139765, 0.11441413, 0.14224136, 0.08854763,
                0.01855595, 0.16720486, 0.38319588
            ],
            [
                0.267287, 0.67903227, 0.89380723, 0.4683366, 0.93492687, 0.28192636, 0.43289438,
                0.5126539, 0.06127732, 0.04873959
            ],
            [
                0.35348675, 0.602, 0.18075775, 0.3706305, 0.54883826, 0.2624883, 0.74253213,
                0.17598268, 0.6743594, 0.9869322
            ],
            [
                0.7629663, 0.86821306, 0.97871965, 0.7989542, 0.71905494, 0.34765512, 0.34274808,
                0.06045034, 0.55789274, 0.2188389
            ],
            [
                0.6924317, 0.6751086, 0.5856843, 0.44401753, 0.360823, 0.11797103, 0.9353965,
                0.28468877, 0.2590096, 0.6319564
            ],
            [
                0.9091785, 0.90224165, 0.0492401, 0.5070151, 0.02703854, 0.30561775, 0.7367476,
                0.9649247, 0.7962459, 0.12578371
            ],
            [
                0.96801484, 0.9006433, 0.89867175, 0.86861897, 0.86013335, 0.9421052, 0.05097519,
                0.5984821, 0.24334699, 0.6616385
            ],
            [
                0.28245237, 0.42253864, 0.61110425, 0.66795814, 0.9024756, 0.7763093, 0.86239356,
                0.44741336, 0.76970786, 0.4141578
            ],
            [
                0.15038556, 0.29719463, 0.7443069, 0.93509567, 0.33021635, 0.38336864, 0.07322941,
                0.2794688, 0.81592786, 0.7104612
            ]
        ]
    ];

    let kernel33: Array4<f32> = Array::from_shape_vec(
        (2, 3, 3, 3),
        vec![
            0.8665582, 0.3410254, 0.47991776, 0.08560265, 0.46590054, 0.98023206, 0.69151706,
            0.6721973, 0.65587145, 0.35742825, 0.5530291, 0.13388659, 0.39207277, 0.69832444,
            0.45037648, 0.85303366, 0.73046064, 0.8831219, 0.42087105, 0.99207646, 0.56391525,
            0.11062973, 0.02463103, 0.3228065, 0.5125019, 0.53152925, 0.81715685, 0.9376581,
            0.1897166, 0.8400259, 0.02744765, 0.01530014, 0.8316277, 0.1787167, 0.6676321,
            0.15356176, 0.6020712, 0.8993465, 0.6923757, 0.21459882, 0.990704, 0.8744264,
            0.8576095, 0.7690768, 0.18077046, 0.6417253, 0.31536198, 0.5064835, 0.87420404,
            0.01077096, 0.77707547, 0.4814232, 0.06813734, 0.01058917,
        ],
    )
    .unwrap();
    let conv_layer33 = ConvolutionLayer::new(kernel33, 1, Padding::Valid);
    let target_output33: Array3<f32> = array![
        [
            [6.8079267, 6.716084, 7.1664557, 8.276464, 7.859022, 7.498216, 7.566057, 7.8776374],
            [5.700365, 6.42788, 6.5802984, 8.042249, 6.8164654, 6.5116987, 7.9805884, 7.8844314],
            [5.350353, 7.1622853, 7.204867, 7.271143, 6.2453504, 6.679437, 8.058649, 7.880716],
            [7.116084, 8.462489, 7.1541004, 6.6987786, 5.755523, 5.959203, 6.863526, 7.0904555],
            [7.1158743, 8.6409235, 7.0496807, 7.148617, 4.7413073, 4.6829824, 5.83131, 7.7869425],
            [6.8500957, 7.547122, 7.5238953, 6.585577, 5.345067, 5.546356, 5.3325915, 6.8121505],
            [7.3622737, 7.0609426, 8.695455, 6.586518, 6.8244963, 4.9452972, 5.699014, 7.727716],
            [7.735385, 8.207351, 8.321881, 6.8982034, 7.73939, 6.005617, 6.3278055, 6.954005],
            [9.319243, 8.57747, 8.889286, 7.515064, 7.520453, 5.938534, 7.2533565, 6.552136],
            [8.970941, 8.628145, 7.9596577, 5.7446766, 7.571698, 7.4810367, 7.8119473, 6.4300594],
            [9.021909, 9.835198, 8.09305, 7.95642, 8.325876, 8.022531, 7.150573, 7.9250817],
            [7.56911, 9.555065, 9.560866, 9.308826, 8.759634, 7.581678, 6.841664, 7.0019145],
            [7.660987, 7.9085617, 8.969744, 9.00956, 8.292075, 7.0175276, 7.277598, 7.121341]
        ],
        [
            [6.066481, 5.49215, 6.8981543, 7.1293664, 7.709257, 6.5034184, 6.7018757, 6.61408],
            [5.950746, 5.203831, 6.5001545, 7.6166825, 6.7528267, 5.6110253, 6.623088, 7.6497593],
            [5.967831, 5.91966, 7.562893, 6.751667, 5.875472, 6.0961514, 7.546632, 6.5920935],
            [7.447606, 7.7138085, 6.875565, 6.736138, 5.9886, 4.917564, 5.348242, 6.0544634],
            [6.170572, 7.432052, 6.0691123, 6.99336, 4.966659, 4.643358, 5.2995963, 6.9033966],
            [5.67293, 6.7788954, 7.0016603, 6.832025, 4.54557, 5.395635, 6.078852, 6.6674433],
            [6.1037083, 6.640222, 8.165289, 6.309631, 6.3830695, 5.1172194, 4.5400534, 5.8570256],
            [6.485267, 8.082499, 8.214627, 7.687232, 7.4374614, 5.743891, 5.7964854, 6.5753703],
            [8.338263, 7.604321, 8.558689, 7.09052, 6.2958484, 6.856407, 7.033897, 6.5300274],
            [
                8.6391115, 8.517263, 8.769453, 5.5115523, 6.7801185, 7.1338024, 7.1226654,
                6.3860784
            ],
            [8.71052, 8.728515, 7.894001, 8.155687, 7.9950495, 6.9583745, 7.757656, 6.7660522],
            [6.944017, 8.115847, 7.497533, 8.023977, 8.245588, 7.63322, 7.401094, 7.109841],
            [7.012079, 7.125224, 8.000843, 8.676899, 7.969039, 5.9801755, 6.087779, 6.484901]
        ]
    ];
    let current_output33: Array3<f32> = conv_layer33.convolve(&test_input33);

    assert!(
        arr_allclose(&current_output33, &target_output33),
        "{:?} was not equal to {:?}",
        current_output33,
        target_output33
    );

    let test_input34 = array![
        [
            [
                0.54235333, 0.14190416, 0.59148335, 0.11199604, 0.22239625, 0.49535275, 0.10202583,
                0.5330766, 0.1925287, 0.14314991
            ],
            [
                0.71126366, 0.7039669, 0.7503396, 0.61614865, 0.5901891, 0.37142363, 0.9428474,
                0.4253642, 0.7146162, 0.9730212
            ],
            [
                0.61613715, 0.50159, 0.23079261, 0.4925117, 0.20337714, 0.46196786, 0.8073715,
                0.5038819, 0.09893908, 0.90349656
            ],
            [
                0.01722594, 0.5784551, 0.11725764, 0.8073887, 0.50780314, 0.00467546, 0.40760243,
                0.13988449, 0.8453326, 0.8307157
            ],
            [
                0.60654116, 0.18171401, 0.31007424, 0.20362668, 0.9031745, 0.5576659, 0.533389,
                0.96843016, 0.83987904, 0.5367513
            ],
            [
                0.26183346, 0.36609647, 0.7678357, 0.10468024, 0.4090506, 0.6464879, 0.05843278,
                0.6970278, 0.09784848, 0.6529659
            ],
            [
                0.9593906, 0.5196752, 0.63378453, 0.6144302, 0.35837704, 0.23309404, 0.34644812,
                0.50217426, 0.00554681, 0.2207341
            ],
            [
                0.9855095, 0.35234872, 0.05972259, 0.1404125, 0.7420292, 0.36001205, 0.39828563,
                0.86437464, 0.34967113, 0.8001929
            ],
            [
                0.9618047, 0.50686455, 0.559009, 0.2582814, 0.21612453, 0.8080103, 0.20993726,
                0.00845493, 0.8139426, 0.03389508
            ],
            [
                0.13004215, 0.27251562, 0.5501398, 0.11797722, 0.3407683, 0.98185354, 0.27791747,
                0.02695821, 0.48075756, 0.9413573
            ],
            [
                0.9598438, 0.47197652, 0.31927556, 0.79388624, 0.9663948, 0.41221553, 0.04869543,
                0.956683, 0.02038087, 0.10196105
            ],
            [
                0.14647067, 0.95831466, 0.5729306, 0.24979122, 0.9183129, 0.45220876, 0.8044326,
                0.42501828, 0.08402323, 0.57557297
            ],
            [
                0.84704405, 0.24117838, 0.9232175, 0.5352726, 0.66831505, 0.84581494, 0.02265424,
                0.47793466, 0.1441583, 0.23037143
            ],
            [
                0.9375789, 0.71464306, 0.8545862, 0.1224625, 0.4731851, 0.33050996, 0.01891187,
                0.53442717, 0.063399, 0.07788111
            ],
            [
                0.8760362, 0.13885641, 0.9537846, 0.09553351, 0.60492355, 0.23765405, 0.79063565,
                0.38434002, 0.711263, 0.6243588
            ]
        ],
        [
            [
                0.9747539, 0.90132594, 0.5194669, 0.32003468, 0.97291625, 0.5424355, 0.25952706,
                0.2682298, 0.09730922, 0.9460035
            ],
            [
                0.9785876, 0.7371736, 0.9941749, 0.35973564, 0.06196258, 0.79140055, 0.43666556,
                0.78015715, 0.33209485, 0.6855751
            ],
            [
                0.67111015, 0.74436355, 0.04572792, 0.6131918, 0.781168, 0.01862379, 0.7148674,
                0.85626405, 0.05245275, 0.31138107
            ],
            [
                0.5932752, 0.26923984, 0.40164033, 0.6793183, 0.9401547, 0.84130347, 0.47107708,
                0.4022033, 0.42742896, 0.04634837
            ],
            [
                0.9779148, 0.93737435, 0.4095396, 0.3899614, 0.95724046, 0.6577067, 0.94846255,
                0.66096354, 0.40466377, 0.5569262
            ],
            [
                0.24014333, 0.66722494, 0.71030915, 0.23255506, 0.59137547, 0.59517515, 0.51399225,
                0.5047524, 0.3510309, 0.4457503
            ],
            [
                0.07333596, 0.25790986, 0.69324833, 0.8679245, 0.59633005, 0.65488356, 0.87685895,
                0.967748, 0.48245648, 0.9374606
            ],
            [
                0.38765016, 0.86497676, 0.400054, 0.32328948, 0.0151671, 0.32235637, 0.7305659,
                0.9027017, 0.75469947, 0.2543982
            ],
            [
                0.34620103, 0.6152326, 0.21047816, 0.15493484, 0.5038661, 0.838882, 0.58702785,
                0.9090709, 0.25651568, 0.30576277
            ],
            [
                0.608248, 0.19374174, 0.49685606, 0.7302286, 0.72125804, 0.15272117, 0.7587074,
                0.39229694, 0.7610872, 0.30246893
            ],
            [
                0.8383011, 0.94492614, 0.39669687, 0.17953911, 0.48956135, 0.17531991, 0.81426054,
                0.51194495, 0.00589341, 0.4856146
            ],
            [
                0.2117447, 0.9185463, 0.1967555, 0.6015046, 0.25964326, 0.09959481, 0.44542107,
                0.6194622, 0.5293358, 0.08988074
            ],
            [
                0.9194768, 0.97676104, 0.5854387, 0.08310746, 0.7869529, 0.11308007, 0.6603618,
                0.58312225, 0.03236333, 0.23011816
            ],
            [
                0.1625122, 0.6463952, 0.9213473, 0.6615045, 0.48125225, 0.32576007, 0.8601632,
                0.5216071, 0.19041517, 0.15599571
            ],
            [
                0.9668574, 0.52926344, 0.6078623, 0.8403314, 0.03379478, 0.31380126, 0.92111635,
                0.7584332, 0.61748165, 0.20176977
            ]
        ],
        [
            [
                0.5249456, 0.29823583, 0.74204314, 0.50086904, 0.86974585, 0.10466193, 0.6287949,
                0.508476, 0.31764308, 0.65402883
            ],
            [
                0.32067546, 0.90192676, 0.78996, 0.96392447, 0.83785075, 0.07532936, 0.02624486,
                0.85766184, 0.80531436, 0.69086134
            ],
            [
                0.12122969, 0.7383121, 0.19533794, 0.44526327, 0.7058163, 0.90610075, 0.5032462,
                0.24466415, 0.11470018, 0.8247195
            ],
            [
                0.7054897, 0.6289111, 0.6951812, 0.7176144, 0.35663, 0.34600323, 0.98480684,
                0.558168, 0.4576909, 0.39555076
            ],
            [
                0.3486375, 0.01817268, 0.5559114, 0.26285827, 0.52430856, 0.7514403, 0.6964576,
                0.17514281, 0.13681252, 0.5836484
            ],
            [
                0.45519072, 0.40931305, 0.8799919, 0.38094538, 0.6625547, 0.5136288, 0.38453335,
                0.06902273, 0.9961713, 0.25736928
            ],
            [
                0.80891675, 0.9833442, 0.7669788, 0.25625056, 0.8309169, 0.26520997, 0.5645692,
                0.969097, 0.05388465, 0.7587759
            ],
            [
                0.7075585, 0.36315936, 0.3090082, 0.77128536, 0.3440802, 0.1375511, 0.7766764,
                0.4454178, 0.3584414, 0.72871476
            ],
            [
                0.9426159, 0.12266664, 0.16580608, 0.20253018, 0.91294247, 0.7180022, 0.5285052,
                0.63151246, 0.02755868, 0.37300143
            ],
            [
                0.16874252, 0.22429508, 0.46965292, 0.38946074, 0.86716634, 0.02051388, 0.23504323,
                0.15247433, 0.22628488, 0.01136111
            ],
            [
                0.9723616, 0.21735138, 0.05186762, 0.6036967, 0.4727555, 0.84556717, 0.8781844,
                0.7431968, 0.4704734, 0.2972315
            ],
            [
                0.8261646, 0.98925644, 0.33214343, 0.26777977, 0.38164377, 0.9193449, 0.30965453,
                0.89371026, 0.816318, 0.9184309
            ],
            [
                0.4946111, 0.9935074, 0.3386878, 0.6829108, 0.42882872, 0.07337865, 0.6904631,
                0.33399308, 0.31139955, 0.81936634
            ],
            [
                0.11950397, 0.5489697, 0.52128464, 0.7931158, 0.4718432, 0.4363914, 0.02397078,
                0.40344155, 0.02668436, 0.4338736
            ],
            [
                0.7971797, 0.32682723, 0.27223235, 0.12087691, 0.13423896, 0.70387655, 0.65776235,
                0.2882407, 0.1864088, 0.02156927
            ]
        ]
    ];

    let kernel34: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.06738149, 0.7791601, 0.883448, 0.60268074, 0.01179794, 0.12387726, 0.46311814,
            0.46811357, 0.8990756, 0.04377225, 0.68663126, 0.37557426, 0.75357485, 0.70261323,
            0.9288911, 0.62274987, 0.35601366, 0.92466223, 0.5055576, 0.17169783, 0.71210676,
            0.8273933, 0.989562, 0.2952592, 0.66260463, 0.2390027, 0.91088, 0.3352366, 0.27851093,
            0.06657688, 0.08151705, 0.26757732, 0.1536621, 0.03297786, 0.6343292, 0.023332,
            0.66929567, 0.6287965, 0.4962149, 0.9943553, 0.7238778, 0.20677379, 0.7569012,
            0.5339488, 0.6767696, 0.5070594, 0.5301375, 0.978318, 0.9769518, 0.56790006,
            0.65994954, 0.9804811, 0.21515913, 0.16005383, 0.97906446, 0.64356047, 0.7140448,
            0.53114694, 0.20520075, 0.11903284, 0.8226498, 0.66615474, 0.590361, 0.5587902,
            0.13425252, 0.88734704, 0.7926027, 0.72369504, 0.304105, 0.32775852, 0.22591083,
            0.15588701, 0.10934412, 0.10509957, 0.76032287, 0.8982146, 0.76115644, 0.28218988,
            0.89117837, 0.86186355, 0.06532437, 0.09919641, 0.2523892, 0.45873183, 0.15706603,
            0.22805685, 0.5246399, 0.07968733, 0.62342596, 0.15461008, 0.63475907, 0.7942114,
            0.23308377, 0.81622064, 0.05023352, 0.6989102, 0.99714524, 0.82807124, 0.71163654,
            0.9435393, 0.07549326, 0.5503317, 0.1015854, 0.29225165, 0.22622024, 0.19784369,
            0.28902137, 0.3143135, 0.4354277, 0.5594078, 0.59032553, 0.7025585, 0.2200977,
            0.4153414, 0.8165832, 0.5970565, 0.15500914, 0.1372336, 0.6388459, 0.66343135,
            0.12374777, 0.63807166, 0.90013695, 0.13750617, 0.22986317, 0.01747457, 0.03202334,
            0.0677837, 0.7666568, 0.01797699, 0.42640674, 0.5040979, 0.79320407, 0.67032087,
            0.8178364, 0.7051767, 0.30578545, 0.8816608, 0.40878415, 0.9562293, 0.07542202,
            0.29064912, 0.01938523, 0.82015866, 0.14548539, 0.26892266, 0.53650105, 0.31143916,
            0.6421733, 0.8746105,
        ],
    )
    .unwrap();
    let conv_layer34 = ConvolutionLayer::new(kernel34, 1, Padding::Valid);
    let target_output34: Array3<f32> = array![
        [
            [21.196714, 20.894592, 21.493927, 20.49774, 18.43067, 19.006092],
            [20.49116, 20.360025, 20.443445, 20.405308, 20.243868, 19.911963],
            [20.040411, 20.355066, 20.87943, 22.1992, 21.322342, 19.293108],
            [20.22205, 18.467194, 19.746998, 19.9058, 20.143095, 20.88347],
            [18.714025, 18.573057, 19.211378, 21.035835, 20.471935, 18.890776],
            [18.55506, 18.451433, 18.56567, 19.587786, 19.116142, 17.8421],
            [19.323605, 17.983704, 17.97943, 19.436354, 18.507656, 17.696466],
            [17.760479, 17.741823, 18.398623, 18.427164, 19.263557, 19.052177],
            [18.532248, 18.502018, 18.41705, 19.812832, 18.737751, 15.586808],
            [20.81963, 18.79888, 18.360516, 19.315863, 17.63399, 15.645235],
            [21.848074, 19.694624, 18.996511, 18.167768, 17.725388, 16.514164]
        ],
        [
            [18.948526, 16.898079, 18.99029, 19.183645, 16.99672, 17.850832],
            [18.388052, 17.578238, 18.408678, 17.918724, 18.152012, 18.219006],
            [18.210287, 17.344194, 18.024956, 18.797058, 17.503649, 17.972992],
            [19.031883, 17.88364, 16.863935, 17.753374, 18.894823, 17.955233],
            [17.17294, 15.676431, 16.696766, 18.205912, 18.04527, 18.480247],
            [16.510439, 16.032698, 16.897964, 16.049501, 15.775485, 16.637424],
            [16.392221, 15.645031, 15.763322, 18.027704, 16.80861, 16.417635],
            [17.328491, 16.344912, 15.578908, 16.737053, 17.717758, 17.393063],
            [17.294832, 16.30349, 17.421783, 16.171331, 16.25714, 17.347721],
            [19.875277, 18.018345, 16.736612, 16.251738, 14.22628, 14.397636],
            [18.706215, 17.027918, 16.193214, 15.702495, 16.576204, 13.589702]
        ]
    ];
    let current_output34: Array3<f32> = conv_layer34.convolve(&test_input34);

    assert!(
        arr_allclose(&current_output34, &target_output34),
        "{:?} was not equal to {:?}",
        current_output34,
        target_output34
    );

    let test_input35 = array![
        [
            [
                0.2665503, 0.29389632, 0.29072547, 0.04191615, 0.5280909, 0.34129518, 0.57593834,
                0.25140822, 0.18509477, 0.13568091
            ],
            [
                0.7269978, 0.53098685, 0.6197924, 0.82326293, 0.34076488, 0.8024984, 0.94153976,
                0.13301279, 0.2980205, 0.20752071
            ],
            [
                0.78595555, 0.87364227, 0.11152316, 0.5634873, 0.89489484, 0.14866899, 0.1768624,
                0.24096294, 0.8495612, 0.92154115
            ],
            [
                0.11643393, 0.71275234, 0.99616134, 0.8189058, 0.15552202, 0.30162072, 0.61146617,
                0.9041999, 0.9121548, 0.41252124
            ],
            [
                0.62377745, 0.62711567, 0.83928454, 0.23060308, 0.61116034, 0.39940432, 0.76753354,
                0.5548302, 0.04038839, 0.41155177
            ],
            [
                0.26794127, 0.17735237, 0.47061965, 0.68002754, 0.17411815, 0.984915, 0.63610965,
                0.5162294, 0.16118859, 0.27965236
            ],
            [
                0.451131, 0.9964236, 0.48360798, 0.65542877, 0.92131656, 0.62419057, 0.28075695,
                0.95138586, 0.03742034, 0.24292202
            ],
            [
                0.5112613, 0.09925622, 0.3738838, 0.3501035, 0.683113, 0.00036895, 0.31636,
                0.5258305, 0.20907213, 0.31935102
            ],
            [
                0.46920267, 0.9548321, 0.22725932, 0.72710156, 0.9838608, 0.7348552, 0.95043266,
                0.1939531, 0.8495752, 0.84936816
            ],
            [
                0.31214204, 0.020407, 0.29198912, 0.5470224, 0.7187741, 0.9696485, 0.8560521,
                0.4610603, 0.36576656, 0.02449073
            ],
            [
                0.59270257, 0.5402461, 0.12048424, 0.54154533, 0.6322593, 0.5571932, 0.08840237,
                0.49039194, 0.6217684, 0.24218307
            ],
            [
                0.6632383, 0.8816509, 0.15960339, 0.6093835, 0.739127, 0.31076494, 0.6617724,
                0.7946265, 0.35911655, 0.69393593
            ],
            [
                0.15214977, 0.18737185, 0.74053663, 0.7191395, 0.43812937, 0.6957145, 0.9952376,
                0.16850758, 0.7345647, 0.4049107
            ],
            [
                0.4767252, 0.6637993, 0.42989764, 0.3272699, 0.7196134, 0.96709275, 0.5945655,
                0.12965602, 0.5255171, 0.92811966
            ],
            [
                0.86373013, 0.7708463, 0.8937434, 0.25468576, 0.34347492, 0.530338, 0.6199976,
                0.01742517, 0.47107297, 0.07118031
            ]
        ],
        [
            [
                0.82373565, 0.3074064, 0.22278658, 0.35444143, 0.6227668, 0.07482269, 0.6352265,
                0.93379414, 0.6084598, 0.81633985
            ],
            [
                0.7938294, 0.97634184, 0.1958822, 0.05417962, 0.22490515, 0.86761755, 0.42271057,
                0.01450239, 0.1089614, 0.44084755
            ],
            [
                0.29699826, 0.1825079, 0.10165259, 0.79023945, 0.32732126, 0.72059697, 0.36138168,
                0.5398071, 0.45151472, 0.32281688
            ],
            [
                0.02498931, 0.38320434, 0.10025226, 0.44458553, 0.5807619, 0.84052527, 0.77579254,
                0.5885413, 0.704337, 0.49857914
            ],
            [
                0.58095855, 0.6132724, 0.8303008, 0.5893513, 0.2488159, 0.11897708, 0.31943667,
                0.409648, 0.7188009, 0.6754611
            ],
            [
                0.53823626, 0.6197911, 0.87098825, 0.23997463, 0.42630666, 0.023685, 0.66366726,
                0.4861491, 0.13860539, 0.00709001
            ],
            [
                0.7894441, 0.85572857, 0.39250162, 0.00926249, 0.2670481, 0.6299236, 0.6380664,
                0.15112722, 0.12904108, 0.9610627
            ],
            [
                0.7121952, 0.4587128, 0.44769827, 0.90325624, 0.37947366, 0.8030902, 0.03485033,
                0.4617171, 0.6479722, 0.53539133
            ],
            [
                0.2788216, 0.2423434, 0.5864343, 0.67460907, 0.46925062, 0.07147343, 0.7644256,
                0.8566437, 0.29966143, 0.05329819
            ],
            [
                0.60962343, 0.9285702, 0.32679623, 0.3903264, 0.64249885, 0.96716243, 0.897583,
                0.24524814, 0.52139103, 0.32803342
            ],
            [
                0.5181942, 0.51220167, 0.18159197, 0.8665665, 0.9785378, 0.7287427, 0.7786622,
                0.29876545, 0.75457317, 0.20196797
            ],
            [
                0.17440334, 0.39972377, 0.9031067, 0.0279216, 0.07560094, 0.4063533, 0.89307874,
                0.26793155, 0.54531777, 0.76704943
            ],
            [
                0.24446122, 0.5655409, 0.855276, 0.46456698, 0.6747385, 0.25479087, 0.7553026,
                0.47348526, 0.4810381, 0.01440958
            ],
            [
                0.89691705, 0.378025, 0.4112019, 0.3518699, 0.38309374, 0.97874445, 0.25838065,
                0.16904165, 0.53067166, 0.42017522
            ],
            [
                0.45530656, 0.4978779, 0.14543204, 0.55258465, 0.947921, 0.23003381, 0.7165106,
                0.79403925, 0.11938072, 0.26642635
            ]
        ],
        [
            [
                0.28121006, 0.40319064, 0.21566778, 0.594935, 0.9995037, 0.9538717, 0.32445627,
                0.82740843, 0.7941346, 0.7832342
            ],
            [
                0.24875638, 0.3654985, 0.91466755, 0.2876998, 0.34424198, 0.2457382, 0.8497308,
                0.12739219, 0.4534563, 0.32884085
            ],
            [
                0.8696194, 0.8653281, 0.30172202, 0.12142149, 0.16754848, 0.48512897, 0.34082386,
                0.52981263, 0.01440341, 0.9658324
            ],
            [
                0.74842566, 0.3124743, 0.60567856, 0.2570787, 0.05135555, 0.06775604, 0.7554349,
                0.43739402, 0.71699256, 0.77542007
            ],
            [
                0.35906684, 0.54546535, 0.1890054, 0.16549692, 0.99599046, 0.15867555, 0.56480473,
                0.16849968, 0.05252765, 0.5676015
            ],
            [
                0.615944, 0.5388062, 0.0603164, 0.3244519, 0.2310866, 0.17943048, 0.30550992,
                0.7804716, 0.24022588, 0.99179137
            ],
            [
                0.71554166, 0.08051511, 0.6405559, 0.49451137, 0.4149794, 0.72737783, 0.72403,
                0.04702903, 0.40806046, 0.152939
            ],
            [
                0.44103095, 0.2244921, 0.68232304, 0.18933062, 0.83893037, 0.15520981, 0.21666723,
                0.45026395, 0.9916083, 0.29856464
            ],
            [
                0.2287987, 0.12699115, 0.4539676, 0.7224578, 0.7267446, 0.03087187, 0.6736655,
                0.8916521, 0.22144382, 0.5158916
            ],
            [
                0.2085157, 0.39927888, 0.95807105, 0.2943695, 0.90529513, 0.7952436, 0.26358747,
                0.4270144, 0.49643677, 0.52485585
            ],
            [
                0.10436007, 0.9574334, 0.12942687, 0.2244735, 0.00970959, 0.6722845, 0.55595505,
                0.9639111, 0.07906571, 0.6608763
            ],
            [
                0.51526874, 0.00945449, 0.92360485, 0.57159376, 0.5449533, 0.61592543, 0.14274225,
                0.01026518, 0.46913606, 0.17376864
            ],
            [
                0.38009068, 0.26423022, 0.57912683, 0.73671806, 0.7878329, 0.9675421, 0.39445186,
                0.3428721, 0.06958814, 0.5659006
            ],
            [
                0.71229553, 0.6954722, 0.9774286, 0.87228006, 0.38645524, 0.05056721, 0.280568,
                0.7337121, 0.79937047, 0.9749549
            ],
            [
                0.49178642, 0.6229996, 0.46538925, 0.7953501, 0.7406703, 0.51276684, 0.31285286,
                0.44514382, 0.53394765, 0.608863
            ]
        ]
    ];

    let kernel35: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.6127199, 0.5272288, 0.8462739, 0.45846483, 0.2400944, 0.81341505, 0.8208894,
            0.19391125, 0.60945815, 0.1530087, 0.32021993, 0.07215097, 0.20116507, 0.10600431,
            0.0768621, 0.9581791, 0.3644227, 0.04018129, 0.96085125, 0.14144829, 0.9801681,
            0.0866156, 0.3864388, 0.6723138, 0.39703202, 0.63766026, 0.5149132, 0.45527726,
            0.81632674, 0.8326292, 0.14867568, 0.5423381, 0.11626041, 0.16734742, 0.6369332,
            0.8087745, 0.43495062, 0.7946413, 0.9593917, 0.02565966, 0.7201289, 0.8381945,
            0.56197965, 0.82884103, 0.56961155, 0.23243731, 0.20690504, 0.418459, 0.5774044,
            0.7413816, 0.9238777, 0.9967142, 0.165468, 0.34192115, 0.56454206, 0.4781139,
            0.7045485, 0.83806276, 0.5927163, 0.8068582, 0.15508978, 0.32704812, 0.96608514,
            0.09722981, 0.8734937, 0.42030758, 0.78284556, 0.51113236, 0.896239, 0.07851031,
            0.95514953, 0.86893994, 0.5827626, 0.7330833, 0.09790236, 0.57685304, 0.1027505,
            0.19355603, 0.35040325, 0.08234657, 0.23035105, 0.39562112, 0.98580116, 0.00720319,
            0.10750511, 0.82838976, 0.7547516, 0.6458135, 0.8042268, 0.5117609, 0.95054454,
            0.3185606, 0.4744012, 0.12880406, 0.6808026, 0.9285927, 0.76108783, 0.7972437,
            0.5635491, 0.3460928, 0.09857575, 0.8630202, 0.07187212, 0.45164114, 0.81366646,
            0.2806283, 0.3541803, 0.9640388, 0.14712231, 0.55479336, 0.3820947, 0.05219934,
            0.5135085, 0.54439926, 0.81959426, 0.2628233, 0.18509601, 0.44840696, 0.89940333,
            0.09299238, 0.01609867, 0.81923145, 0.6831303, 0.8294056, 0.50219774, 0.58972347,
            0.83670455, 0.19925202, 0.01926605, 0.41107583, 0.9134012, 0.17121983, 0.68621,
            0.54784405, 0.87786776, 0.8816074, 0.8069043, 0.2866232, 0.538895, 0.9121203,
            0.08099908, 0.14064422, 0.34871954, 0.00895003, 0.09498502, 0.2603031, 0.08369987,
            0.24505354, 0.7182023, 0.7560407,
        ],
    )
    .unwrap();
    let conv_layer35 = ConvolutionLayer::new(kernel35, 1, Padding::Valid);
    let target_output35: Array3<f32> = array![
        [
            [16.954031, 17.044514, 18.007418, 19.019506, 19.493198, 19.93591],
            [17.88347, 18.22934, 18.553545, 17.690042, 15.007524, 17.177645],
            [19.271267, 17.335304, 18.057396, 17.055122, 16.772324, 19.143871],
            [18.517685, 17.828465, 18.652933, 18.176342, 17.63187, 18.058838],
            [18.79408, 18.550892, 17.297144, 18.880287, 17.31516, 17.010885],
            [20.715729, 19.413095, 20.420982, 20.832867, 19.374771, 18.353987],
            [20.40245, 21.41512, 20.45933, 20.85072, 21.603949, 18.971098],
            [19.363468, 19.453232, 20.049566, 21.966497, 20.551868, 18.073627],
            [19.506193, 20.268053, 21.887291, 22.996065, 22.641941, 20.567444],
            [20.111969, 22.803308, 22.825298, 20.538572, 20.42296, 19.269274],
            [20.098553, 21.251444, 21.027172, 20.874043, 19.127295, 18.785355]
        ],
        [
            [16.55183, 16.1523, 17.727232, 15.917199, 17.215036, 16.363255],
            [18.261873, 15.278777, 17.137554, 15.680181, 15.690999, 17.29769],
            [18.182158, 17.00982, 14.707563, 15.344469, 16.022953, 17.165958],
            [16.551407, 16.625042, 16.86505, 16.131569, 16.343262, 16.017986],
            [18.085417, 16.770979, 18.508717, 17.407755, 15.481429, 15.50154],
            [18.223232, 18.343428, 18.613043, 19.049025, 16.867395, 16.465939],
            [18.468008, 19.01947, 19.685558, 20.1168, 18.961533, 17.804375],
            [17.345835, 18.298216, 19.73517, 18.643118, 18.986671, 15.628542],
            [17.954533, 19.954763, 22.239006, 19.667643, 20.012693, 18.08523],
            [18.520401, 19.928032, 19.429192, 19.865622, 18.626814, 17.543905],
            [17.675022, 18.737492, 20.035133, 17.729628, 17.124647, 18.45407]
        ]
    ];
    let current_output35: Array3<f32> = conv_layer35.convolve(&test_input35);

    assert!(
        arr_allclose(&current_output35, &target_output35),
        "{:?} was not equal to {:?}",
        current_output35,
        target_output35
    );

    let test_input36 = array![
        [
            [
                0.5504823, 0.7626221, 0.02017781, 0.20396212, 0.2315043, 0.28059694, 0.0384257,
                0.92572653, 0.85304475, 0.9227076
            ],
            [
                0.61218125, 0.01549418, 0.5846968, 0.95146346, 0.28302717, 0.21812607, 0.21556447,
                0.97975385, 0.96327585, 0.27143422
            ],
            [
                0.66015846, 0.32269347, 0.19323848, 0.047074, 0.06797581, 0.90267074, 0.7464236,
                0.43391776, 0.46971908, 0.36561352
            ],
            [
                0.76844287, 0.7132774, 0.682621, 0.3831229, 0.18582676, 0.9492341, 0.6190288,
                0.49807012, 0.7099942, 0.46828213
            ],
            [
                0.44120148, 0.879468, 0.24645625, 0.07697041, 0.53293884, 0.8055037, 0.34428266,
                0.17744416, 0.11456152, 0.35435796
            ],
            [
                0.61676294, 0.2724277, 0.28065884, 0.5519918, 0.7061356, 0.06217905, 0.18036312,
                0.65311456, 0.6758199, 0.03111337
            ],
            [
                0.11921299, 0.76781565, 0.8918218, 0.7473441, 0.5532268, 0.6964844, 0.10984504,
                0.59089476, 0.6066833, 0.27276048
            ],
            [
                0.1006932, 0.0453749, 0.47227803, 0.5079503, 0.9648078, 0.8570686, 0.72912633,
                0.53507906, 0.00238096, 0.11027454
            ],
            [
                0.1789127, 0.59824157, 0.17319581, 0.37650406, 0.59797186, 0.40831715, 0.54864365,
                0.02069527, 0.6553853, 0.80163413
            ],
            [
                0.8177609, 0.7971179, 0.08406905, 0.508026, 0.11442149, 0.04620427, 0.3497844,
                0.45462498, 0.07369657, 0.52332807
            ],
            [
                0.74098635, 0.46049482, 0.33960003, 0.93051934, 0.71563727, 0.7999726, 0.00534251,
                0.8396754, 0.9142885, 0.625111
            ],
            [
                0.6029102, 0.6333335, 0.7700269, 0.23793669, 0.8206902, 0.3374138, 0.26670292,
                0.08686233, 0.1029643, 0.4008225
            ],
            [
                0.95465165, 0.8181969, 0.66963005, 0.7306344, 0.0549346, 0.8426447, 0.96914834,
                0.6678507, 0.57052803, 0.34104946
            ],
            [
                0.2814671, 0.61166996, 0.41391012, 0.12344587, 0.6252355, 0.94266546, 0.5703369,
                0.21797805, 0.8809775, 0.29241282
            ],
            [
                0.02982224, 0.44230437, 0.11709308, 0.10283989, 0.4274258, 0.66300994, 0.11320372,
                0.08474967, 0.849806, 0.8935719
            ]
        ],
        [
            [
                0.0988896, 0.36921418, 0.69639486, 0.37377915, 0.9150178, 0.77607256, 0.41136658,
                0.19929981, 0.435523, 0.24557048
            ],
            [
                0.02676343, 0.47552216, 0.5351139, 0.3654481, 0.684635, 0.02301173, 0.9240008,
                0.80055225, 0.7670258, 0.04667937
            ],
            [
                0.30812186, 0.906517, 0.894492, 0.15186748, 0.7101957, 0.18382856, 0.54372054,
                0.21931884, 0.41600463, 0.897173
            ],
            [
                0.93577814, 0.16475675, 0.05393951, 0.25017264, 0.5847652, 0.40716594, 0.27133584,
                0.13783294, 0.4189943, 0.5418886
            ],
            [
                0.5618839, 0.02054715, 0.14384301, 0.8383886, 0.32704464, 0.3063715, 0.46858206,
                0.601813, 0.59114003, 0.77906114
            ],
            [
                0.9468379, 0.01428977, 0.00778698, 0.08802161, 0.7931947, 0.47630212, 0.6808438,
                0.64131045, 0.88006234, 0.33597425
            ],
            [
                0.25126496, 0.11956753, 0.5422157, 0.1025933, 0.29599845, 0.34388152, 0.6096152,
                0.74966764, 0.03922287, 0.22169068
            ],
            [
                0.54000634, 0.7720287, 0.08456346, 0.09107142, 0.49166626, 0.6969486, 0.30650783,
                0.33481097, 0.6885192, 0.92016417
            ],
            [
                0.78164, 0.56275487, 0.5161816, 0.85731035, 0.47906098, 0.7001218, 0.8242743,
                0.43211794, 0.8650503, 0.69807684
            ],
            [
                0.70200926, 0.6481248, 0.7281945, 0.01313858, 0.7139359, 0.00338423, 0.3701509,
                0.6825711, 0.29473898, 0.34203872
            ],
            [
                0.6492484, 0.78417206, 0.35578284, 0.92984384, 0.5067316, 0.14365989, 0.80710125,
                0.30427325, 0.8632821, 0.4412164
            ],
            [
                0.9898425, 0.13985266, 0.50355774, 0.71038556, 0.75199634, 0.20438518, 0.302565,
                0.32253316, 0.24522461, 0.38874564
            ],
            [
                0.01596426, 0.03268935, 0.5199071, 0.9730751, 0.25791696, 0.72531515, 0.8901288,
                0.3369298, 0.7706615, 0.58939576
            ],
            [
                0.24533354, 0.45030525, 0.09461671, 0.6565849, 0.66725403, 0.36014387, 0.16459827,
                0.7206875, 0.66180915, 0.1968727
            ],
            [
                0.2568436, 0.69032484, 0.47962424, 0.3329353, 0.31321532, 0.61263674, 0.15715665,
                0.04113929, 0.31686947, 0.54813904
            ]
        ],
        [
            [
                0.3634248, 0.69651574, 0.1327469, 0.8627079, 0.05492407, 0.6814465, 0.07444459,
                0.60906744, 0.34991544, 0.7524436
            ],
            [
                0.68666, 0.6233486, 0.7165851, 0.58597034, 0.33453104, 0.1716157, 0.87333375,
                0.38515112, 0.89840883, 0.8971626
            ],
            [
                0.9944557, 0.42958102, 0.41707778, 0.42941824, 0.21114524, 0.3805317, 0.98692304,
                0.6479137, 0.03177308, 0.02432681
            ],
            [
                0.47288647, 0.4621884, 0.04056123, 0.5441924, 0.44094405, 0.70403796, 0.49946982,
                0.75838685, 0.948784, 0.28150013
            ],
            [
                0.16930467, 0.36957732, 0.44379708, 0.2855142, 0.48172623, 0.26814866, 0.08870029,
                0.5264963, 0.5420228, 0.23198476
            ],
            [
                0.8001697, 0.39779025, 0.09425906, 0.92948604, 0.5900978, 0.30325878, 0.8025547,
                0.73011106, 0.6694761, 0.11015231
            ],
            [
                0.69373703, 0.23382041, 0.69890016, 0.24523091, 0.33235383, 0.44655514, 0.6824109,
                0.4055674, 0.5139047, 0.16944607
            ],
            [
                0.38137078, 0.3950377, 0.99505395, 0.49050683, 0.12798251, 0.550415, 0.0107817,
                0.9804115, 0.01554713, 0.5638509
            ],
            [
                0.73606557, 0.02244601, 0.71388936, 0.8822338, 0.41637895, 0.5204471, 0.31435138,
                0.7621477, 0.5980359, 0.9225537
            ],
            [
                0.43390045, 0.18671374, 0.14004932, 0.37515613, 0.11509855, 0.58042264, 0.11006287,
                0.05430869, 0.7133292, 0.24697433
            ],
            [
                0.58181113, 0.8818306, 0.24270806, 0.16793567, 0.7600932, 0.5092142, 0.2787269,
                0.936621, 0.55376446, 0.3195551
            ],
            [
                0.9381164, 0.8077021, 0.10565319, 0.67167306, 0.76066047, 0.09583076, 0.96722347,
                0.6016514, 0.7150578, 0.6595543
            ],
            [
                0.76611406, 0.7153868, 0.2819424, 0.6738613, 0.5304246, 0.13520858, 0.7469712,
                0.81467754, 0.3061074, 0.35754028
            ],
            [
                0.47058627, 0.36717632, 0.23220702, 0.26958194, 0.28030816, 0.18757097, 0.30671576,
                0.6050165, 0.75661963, 0.4542289
            ],
            [
                0.9907141, 0.03288648, 0.00421954, 0.63708895, 0.22448166, 0.2107704, 0.80958194,
                0.32154062, 0.7765318, 0.01871248
            ]
        ]
    ];

    let kernel36: Array4<f32> = Array::from_shape_vec(
        (2, 3, 5, 5),
        vec![
            0.21038549, 0.6958903, 0.09593545, 0.66940916, 0.43917, 0.33296862, 0.05693591,
            0.8565683, 0.8048158, 0.08220442, 0.23451181, 0.00728971, 0.06604452, 0.2923272,
            0.9424468, 0.1988695, 0.04567454, 0.6237617, 0.87467635, 0.81214136, 0.9546512,
            0.11050353, 0.13355136, 0.5403959, 0.74180704, 0.82956314, 0.6899308, 0.6752682,
            0.23764269, 0.51197404, 0.01912449, 0.694196, 0.02211638, 0.2806987, 0.34628263,
            0.6916267, 0.94890165, 0.2357167, 0.92047054, 0.25998822, 0.4514327, 0.40940228,
            0.23183365, 0.840219, 0.84424555, 0.5546642, 0.07813971, 0.30506894, 0.24986073,
            0.49582243, 0.7496332, 0.99110264, 0.41972712, 0.18811014, 0.6379747, 0.70726824,
            0.30395797, 0.9416627, 0.7669063, 0.01694399, 0.10002703, 0.1212473, 0.5644317,
            0.7982995, 0.18014309, 0.21136971, 0.5887852, 0.58043236, 0.12894545, 0.07064668,
            0.51929957, 0.10532968, 0.45790267, 0.521647, 0.15657824, 0.5478772, 0.40889722,
            0.5708666, 0.30341497, 0.15041436, 0.8914651, 0.5522474, 0.0050115, 0.9402614,
            0.24152991, 0.7185725, 0.00863769, 0.2743094, 0.634105, 0.08953476, 0.57364607,
            0.1666415, 0.6896496, 0.41619235, 0.27443436, 0.6512276, 0.6696046, 0.593486,
            0.52092886, 0.9068687, 0.55810463, 0.5024765, 0.43946478, 0.255508, 0.96864545,
            0.12571159, 0.0815046, 0.18553229, 0.21831155, 0.9865399, 0.9052224, 0.6072152,
            0.5574499, 0.9146937, 0.2556481, 0.55767894, 0.29845986, 0.04779868, 0.76187396,
            0.9677495, 0.12630945, 0.38485697, 0.44111732, 0.89598167, 0.1071836, 0.09080196,
            0.9034433, 0.7528657, 0.63789237, 0.3724083, 0.46620196, 0.5063144, 0.964609,
            0.8436678, 0.63907087, 0.20822853, 0.61905736, 0.94941133, 0.04169853, 0.8692504,
            0.11364792, 0.7602986, 0.6772494, 0.43775168, 0.99396145, 0.7541355, 0.61089563,
            0.6058327, 0.81967235, 0.18524589,
        ],
    )
    .unwrap();
    let conv_layer36 = ConvolutionLayer::new(kernel36, 1, Padding::Valid);
    let target_output36: Array3<f32> = array![
        [
            [13.882036, 14.174775, 15.984635, 15.742299, 16.37989, 16.713985],
            [16.42058, 14.583157, 14.518294, 14.997807, 17.683794, 15.803636],
            [14.469865, 13.951618, 15.337909, 15.070173, 15.702812, 15.155152],
            [14.932607, 15.717444, 15.767513, 15.439515, 17.231613, 15.988516],
            [15.158597, 14.904679, 15.147182, 17.194324, 16.49494, 15.895423],
            [14.865975, 14.827724, 14.288594, 15.770711, 16.16362, 15.739336],
            [16.06887, 15.0502205, 14.68955, 15.037759, 15.411008, 15.848788],
            [18.438885, 16.288982, 16.01192, 15.417553, 15.740344, 14.525776],
            [18.6534, 16.774757, 17.297523, 17.030771, 16.706263, 16.16443],
            [17.840532, 16.21705, 16.065672, 16.28273, 17.031826, 16.476648],
            [16.811974, 16.620348, 14.8672495, 16.154142, 17.114162, 16.47186]
        ],
        [
            [17.076378, 15.797775, 17.600868, 17.264606, 18.9441, 18.652271],
            [17.15765, 16.026814, 16.849518, 18.466496, 21.187735, 19.948055],
            [15.332772, 16.118017, 17.27559, 17.531796, 19.069912, 17.726973],
            [18.537931, 17.814678, 17.049429, 17.507317, 19.694168, 17.308521],
            [18.506447, 17.878237, 18.514446, 19.870317, 19.725073, 19.140892],
            [17.28367, 16.971474, 18.24531, 17.93325, 18.036999, 17.16563],
            [18.950813, 18.474724, 17.681662, 17.821455, 18.28245, 18.948399],
            [19.81225, 18.65711, 17.496794, 19.74403, 18.910694, 17.811531],
            [20.592548, 18.17869, 18.68157, 19.307234, 18.493021, 19.49951],
            [20.187994, 18.55829, 17.515345, 17.516462, 20.598, 18.032017],
            [20.010117, 19.233768, 17.185322, 19.87866, 20.366703, 18.921202]
        ]
    ];
    let current_output36: Array3<f32> = conv_layer36.convolve(&test_input36);

    assert!(
        arr_allclose(&current_output36, &target_output36),
        "{:?} was not equal to {:?}",
        current_output36,
        target_output36
    );
}
