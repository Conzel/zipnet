// This file has been automatically generated by Jinja2 via the
// script generate_tests.py.
// Please do not change this file by hand.
use ml::convolutions::*;
use ml::transposed_convolutions::*;
use ndarray::{array, Array, Array3, Array4, Dimension};

fn arr_allclose<D: Dimension>(arr1: &Array<f32, D>, arr2: &Array<f32, D>) -> bool {
    (arr1 - arr2).map(|x| (*x as f32).abs()).sum() < 1e-3
}

#[test]
fn test_py_implementation_random_arrays_conv2d() {
    let test_input1 = array![
        [
            [0.17014849, 0.06520256, 0.9837982, 0.23677547, 0.60484785, 0.16487044],
            [0.6922357, 0.41083884, 0.6177326, 0.9098013, 0.7944849, 0.12854727],
            [0.37189406, 0.44166553, 0.7567664, 0.5566679, 0.23985276, 0.13313323],
            [0.38484824, 0.4364637, 0.64410555, 0.43464628, 0.12285258, 0.5066572],
            [0.7964828, 0.00756764, 0.8576183, 0.45711017, 0.70536447, 0.65220493],
            [0.32536873, 0.7567798, 0.00744711, 0.6283005, 0.6487234, 0.34163022]
        ],
        [
            [0.4305688, 0.12669589, 0.55574155, 0.51154923, 0.72306335, 0.46672952],
            [0.27845532, 0.4583148, 0.9269775, 0.2697065, 0.75231165, 0.9148518],
            [0.55898565, 0.9034325, 0.85028297, 0.84558666, 0.07658575, 0.69580543],
            [0.775336, 0.14352316, 0.04471071, 0.16569944, 0.2781115, 0.97435564],
            [0.988919, 0.53660643, 0.81628793, 0.89837223, 0.9289133, 0.72789615],
            [0.09833383, 0.23972042, 0.8715701, 0.8241853, 0.14438818, 0.03235205]
        ],
        [
            [0.5715329, 0.7501565, 0.04181346, 0.02844254, 0.22177844, 0.54035133],
            [0.66966337, 0.70402896, 0.56033564, 0.24242379, 0.9692583, 0.3356524],
            [0.5888119, 0.2795916, 0.96145767, 0.0474241, 0.7197864, 0.12692],
            [0.52113837, 0.8997107, 0.767672, 0.18875164, 0.5390728, 0.39133722],
            [0.35985747, 0.8659267, 0.9480399, 0.8462714, 0.0067116, 0.00785976],
            [0.1022715, 0.38848338, 0.07988323, 0.16570753, 0.6286194, 0.25922647]
        ]
    ];

    let kernel1: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.59344524, 0.5417864, 0.60627973, 0.91818297, 0.6114103, 0.7547703, 0.775954,
            0.50755495, 0.89887625, 0.9308157, 0.7768226, 0.27978492, 0.97700953, 0.9716041,
            0.0509604, 0.14120784, 0.6659802, 0.6572328, 0.22162326, 0.34603763, 0.28792506,
            0.18019113, 0.5157695, 0.10449678, 0.3426181, 0.629322, 0.695583,
        ],
    )
    .unwrap();
    let conv_layer1 = ConvolutionLayer::new(kernel1, 1, Padding::Valid);
    let target_output1: Array3<f32> = array![[
        [7.8374896, 7.6310654, 8.394735, 7.205546],
        [8.432811, 8.688838, 8.414765, 6.901252],
        [8.901625, 8.155658, 7.753001, 6.425657],
        [7.923536, 7.5985074, 7.4249687, 6.727424]
    ]];
    let current_output1: Array3<f32> = conv_layer1.convolve(&test_input1);

    assert!(
        arr_allclose(&current_output1, &target_output1),
        "{:?} was not equal to {:?}",
        current_output1,
        target_output1
    );

    let test_input2 = array![
        [
            [0.3626411, 0.39898983, 0.36253917, 0.69587743, 0.9862549, 0.5617529],
            [0.92333794, 0.9373231, 0.921993, 0.7556754, 0.7376267, 0.84374106],
            [0.82509995, 0.77620417, 0.76771307, 0.21897991, 0.69994044, 0.623545],
            [0.21943341, 0.8612485, 0.5087405, 0.179494, 0.21606164, 0.2313126],
            [0.30113342, 0.8179498, 0.19149332, 0.46443272, 0.9019851, 0.5977058],
            [0.90738845, 0.6726924, 0.39839587, 0.7335981, 0.78965247, 0.73126566]
        ],
        [
            [0.37613922, 0.6908677, 0.36786652, 0.4870034, 0.22876498, 0.5566727],
            [0.85647196, 0.01684272, 0.36392415, 0.31284246, 0.7926341, 0.03665259],
            [0.97324103, 0.8427075, 0.54514444, 0.975659, 0.86701024, 0.14890751],
            [0.1644093, 0.02602104, 0.16869895, 0.33126613, 0.87119263, 0.2576527],
            [0.8142977, 0.92175007, 0.4240341, 0.00207204, 0.21363449, 0.81350476],
            [0.7828945, 0.46724817, 0.78055173, 0.52934057, 0.46750203, 0.34934825]
        ],
        [
            [0.9241278, 0.5511301, 0.88718724, 0.7135373, 0.75677496, 0.7035832],
            [0.36252776, 0.34317794, 0.7462054, 0.4031665, 0.36348057, 0.23846498],
            [0.96826524, 0.42989048, 0.7878393, 0.73295325, 0.76087946, 0.8610666],
            [0.6089244, 0.30423534, 0.3329467, 0.11996287, 0.33579683, 0.3748985],
            [0.423247, 0.21606776, 0.14780204, 0.359202, 0.6390296, 0.3685356],
            [0.9812083, 0.17302093, 0.8576361, 0.9529279, 0.08403921, 0.3459232]
        ]
    ];

    let kernel2: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.54770446, 0.64743847, 0.51856595, 0.53392637, 0.5372604, 0.86233217, 0.44388366,
            0.34716287, 0.3879487, 0.68714255, 0.36691284, 0.15765554, 0.8850151, 0.47547424,
            0.81734437, 0.9043074, 0.21774843, 0.28848994, 0.29283327, 0.5396585, 0.9350713,
            0.6909357, 0.44373918, 0.6566154, 0.9949724, 0.9437953, 0.5814131,
        ],
    )
    .unwrap();
    let conv_layer2 = ConvolutionLayer::new(kernel2, 1, Padding::Valid);
    let target_output2: Array3<f32> = array![[
        [10.224697, 9.309543, 9.695193, 9.461558],
        [9.097197, 7.7854347, 8.153687, 7.5795026],
        [8.711246, 7.5257335, 7.5496454, 8.041867],
        [7.2736983, 6.7037215, 7.226434, 7.3444123]
    ]];
    let current_output2: Array3<f32> = conv_layer2.convolve(&test_input2);

    assert!(
        arr_allclose(&current_output2, &target_output2),
        "{:?} was not equal to {:?}",
        current_output2,
        target_output2
    );

    let test_input3 = array![
        [
            [0.06870039, 0.12733267, 0.74741316, 0.57969916, 0.13247305, 0.40767],
            [0.224454, 0.99582964, 0.7703749, 0.42877796, 0.05700503, 0.5512328],
            [0.2031063, 0.701937, 0.00186597, 0.35000807, 0.5067197, 0.21294773],
            [0.75313085, 0.25977603, 0.25689796, 0.6658951, 0.67241764, 0.6432024],
            [0.96080875, 0.7035094, 0.7478619, 0.00020906, 0.6398819, 0.8246988],
            [0.846729, 0.54676574, 0.05539654, 0.9791666, 0.30872977, 0.5287215]
        ],
        [
            [0.78543746, 0.6111727, 0.45714313, 0.5208711, 0.7087714, 0.6906785],
            [0.28950995, 0.8120864, 0.683158, 0.7300311, 0.19623296, 0.15101007],
            [0.5537751, 0.27669305, 0.3316532, 0.42372492, 0.38907993, 0.8646356],
            [0.7910046, 0.40315583, 0.13678746, 0.564682, 0.15790685, 0.60438925],
            [0.40131757, 0.6473561, 0.24740443, 0.23741227, 0.7132858, 0.1319153],
            [0.18134636, 0.33139232, 0.5554673, 0.9000323, 0.30553624, 0.3358437]
        ],
        [
            [0.47194287, 0.25675833, 0.9649919, 0.93666834, 0.17877895, 0.9675369],
            [0.75431514, 0.9536324, 0.16371861, 0.9456737, 0.44457257, 0.25140873],
            [0.3641559, 0.85076064, 0.15485734, 0.03995521, 0.37287286, 0.10154326],
            [0.15368015, 0.635939, 0.43744904, 0.70429957, 0.25059524, 0.45131883],
            [0.60942906, 0.05433872, 0.35665986, 0.57013196, 0.90739846, 0.6876462],
            [0.9026019, 0.83673465, 0.9149804, 0.6329186, 0.04431259, 0.72178566]
        ]
    ];

    let kernel3: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.72704846, 0.01821492, 0.7356045, 0.867838, 0.5287654, 0.27803296, 0.18325551,
            0.517026, 0.78711736, 0.85191244, 0.5917236, 0.97902703, 0.5849202, 0.7151285,
            0.32063982, 0.40498126, 0.5150141, 0.28247103, 0.07464863, 0.91982275, 0.6362754,
            0.14913943, 0.38420153, 0.83432084, 0.75359416, 0.26934662, 0.7812688,
        ],
    )
    .unwrap();
    let conv_layer3 = ConvolutionLayer::new(kernel3, 1, Padding::Valid);
    let target_output3: Array3<f32> = array![[
        [7.580159, 7.893433, 5.82082, 6.421933],
        [7.0054064, 8.037723, 6.2490797, 6.119551],
        [6.2832246, 5.632236, 6.3806257, 7.1139717],
        [7.7490683, 6.99602, 6.164378, 8.275181]
    ]];
    let current_output3: Array3<f32> = conv_layer3.convolve(&test_input3);

    assert!(
        arr_allclose(&current_output3, &target_output3),
        "{:?} was not equal to {:?}",
        current_output3,
        target_output3
    );

    let test_input4 = array![
        [
            [
                0.5270146, 0.23715672, 0.66611385, 0.16608049, 0.313714, 0.9064671, 0.12515199,
                0.48754972, 0.8935865, 0.10556214, 0.53714937, 0.79292244, 0.4744624, 0.6592577,
                0.87574345
            ],
            [
                0.78416556, 0.9316805, 0.52122, 0.87644994, 0.20423086, 0.2764571, 0.34320405,
                0.06360459, 0.8634254, 0.22873744, 0.9162307, 0.2792192, 0.7919586, 0.80092114,
                0.9146247
            ],
            [
                0.0936791, 0.0330946, 0.02919354, 0.49590722, 0.40795937, 0.7090415, 0.39483562,
                0.84902793, 0.24274233, 0.7620597, 0.8942853, 0.48939565, 0.9573795, 0.63514715,
                0.46075395
            ],
            [
                0.8855644, 0.6197168, 0.30692965, 0.45529485, 0.7403127, 0.80679554, 0.80891573,
                0.4359102, 0.52047473, 0.21130918, 0.9783562, 0.16172563, 0.48491392, 0.65126085,
                0.26983073
            ],
            [
                0.471613, 0.21457537, 0.05351101, 0.8520324, 0.7388761, 0.9965808, 0.94308543,
                0.750324, 0.039194, 0.24788351, 0.50688076, 0.00051633, 0.53845215, 0.432881,
                0.07226853
            ],
            [
                0.8543963, 0.24929269, 0.9079535, 0.60374194, 0.473204, 0.8566667, 0.5860555,
                0.19664533, 0.49128443, 0.4687038, 0.17250927, 0.14018923, 0.43290496, 0.2383507,
                0.7066018
            ],
            [
                0.79673207, 0.23906927, 0.1438574, 0.12837073, 0.10225686, 0.21388301, 0.8245107,
                0.28745723, 0.92149794, 0.55642486, 0.8410765, 0.6012723, 0.43380973, 0.61445725,
                0.14233574
            ],
            [
                0.45914945, 0.8803759, 0.7358748, 0.3247378, 0.59195757, 0.32748002, 0.14428215,
                0.6638725, 0.55669755, 0.05946975, 0.24214035, 0.21880285, 0.5070326, 0.560904,
                0.6557088
            ],
            [
                0.45500925, 0.32440838, 0.74477625, 0.36968935, 0.11819325, 0.5940242, 0.46956548,
                0.73709416, 0.27057356, 0.5337139, 0.75616854, 0.26672947, 0.8008563, 0.7847773,
                0.12968542
            ],
            [
                0.08627631, 0.6863155, 0.68172634, 0.6856524, 0.9063645, 0.10040135, 0.25769317,
                0.23345616, 0.73589575, 0.7439484, 0.13899311, 0.96651816, 0.9371178, 0.6203675,
                0.07654371
            ]
        ],
        [
            [
                0.4719829, 0.4404677, 0.02649495, 0.5121102, 0.47244504, 0.29454133, 0.17643407,
                0.53866875, 0.82249755, 0.28283548, 0.06378802, 0.5300166, 0.73655206, 0.3237799,
                0.70010746
            ],
            [
                0.61210716, 0.05175687, 0.68573385, 0.73337436, 0.5554448, 0.9192946, 0.4283556,
                0.729173, 0.6576018, 0.47843248, 0.02157675, 0.685827, 0.22560763, 0.00003577,
                0.13869576
            ],
            [
                0.2647747, 0.17754778, 0.82382417, 0.69720376, 0.15397236, 0.75877124, 0.86222315,
                0.26427644, 0.69865257, 0.29289714, 0.7757528, 0.56055367, 0.8899508, 0.810474,
                0.02808736
            ],
            [
                0.61877847, 0.3379795, 0.33537498, 0.6626128, 0.06039312, 0.1354166, 0.97702754,
                0.8733311, 0.88564533, 0.83071965, 0.42070097, 0.7634967, 0.4980414, 0.3691911,
                0.8690525
            ],
            [
                0.72900707, 0.938401, 0.43856344, 0.4151233, 0.3592986, 0.3117034, 0.8192489,
                0.36604244, 0.23696694, 0.5622223, 0.37682602, 0.53422695, 0.2130759, 0.6255918,
                0.09869356
            ],
            [
                0.85603166, 0.36793318, 0.865758, 0.7658025, 0.6594781, 0.48541847, 0.158874,
                0.39609066, 0.75033015, 0.6159849, 0.07203952, 0.12091745, 0.6356798, 0.95481586,
                0.10666513
            ],
            [
                0.29373887, 0.18915932, 0.5419741, 0.55637455, 0.8755492, 0.30016333, 0.4528765,
                0.5031258, 0.7165893, 0.34654748, 0.7668131, 0.9256995, 0.62281454, 0.524579,
                0.13930365
            ],
            [
                0.30819193, 0.6927248, 0.58652496, 0.6760192, 0.37883574, 0.44507304, 0.8785777,
                0.30651525, 0.08302987, 0.9099885, 0.42138377, 0.9182205, 0.5272234, 0.22129431,
                0.00633
            ],
            [
                0.6523986, 0.2805719, 0.9118973, 0.5693756, 0.95361024, 0.7282295, 0.5087874,
                0.3358689, 0.26166973, 0.19571388, 0.97167397, 0.07128377, 0.9504947, 0.92326206,
                0.5954836
            ],
            [
                0.7485715, 0.7264353, 0.4284322, 0.04009921, 0.42620143, 0.50107217, 0.8816114,
                0.62762326, 0.2752067, 0.6581306, 0.26460668, 0.89336777, 0.7124811, 0.32684848,
                0.95680344
            ]
        ],
        [
            [
                0.47535485, 0.90286416, 0.3193976, 0.17436478, 0.9906781, 0.99321055, 0.16320723,
                0.6358971, 0.92702305, 0.14977625, 0.4497216, 0.687625, 0.42605233, 0.42867732,
                0.01496939
            ],
            [
                0.98323476, 0.70876056, 0.415587, 0.5451011, 0.48578474, 0.8920509, 0.3897719,
                0.19460331, 0.9657459, 0.22157177, 0.44649428, 0.75294507, 0.88778716, 0.9737877,
                0.7059647
            ],
            [
                0.52025, 0.41998118, 0.4156855, 0.7155315, 0.02265206, 0.67035425, 0.9993058,
                0.86764544, 0.5739991, 0.88402116, 0.16431308, 0.46453193, 0.16098963, 0.29953358,
                0.59781086
            ],
            [
                0.9537467, 0.13108306, 0.01351478, 0.9497022, 0.08292098, 0.2560622, 0.4124968,
                0.1396195, 0.29781443, 0.3337948, 0.55396014, 0.36205766, 0.6001484, 0.11615072,
                0.7446416
            ],
            [
                0.842964, 0.41665936, 0.7253113, 0.35101932, 0.6741479, 0.8605703, 0.31478795,
                0.78454614, 0.2418382, 0.15428482, 0.44385925, 0.5675659, 0.86445093, 0.3942565,
                0.32627374
            ],
            [
                0.25422713, 0.39957172, 0.82237726, 0.0215734, 0.86392707, 0.54855824, 0.10558709,
                0.27843866, 0.35650545, 0.2547001, 0.8724657, 0.4770398, 0.7619444, 0.49641547,
                0.06810815
            ],
            [
                0.55241185, 0.02753429, 0.71984386, 0.14355855, 0.62895286, 0.49605927, 0.6836941,
                0.26911622, 0.04745785, 0.83168656, 0.84094906, 0.66010624, 0.45852852, 0.06486581,
                0.5838787
            ],
            [
                0.70949817, 0.50569826, 0.85065925, 0.4483504, 0.7796499, 0.7488422, 0.15468395,
                0.9492515, 0.45890567, 0.30235246, 0.38782486, 0.85290706, 0.71761, 0.2624427,
                0.6603214
            ],
            [
                0.14666249, 0.42671442, 0.5335283, 0.36426732, 0.13343851, 0.9320007, 0.7952918,
                0.03185032, 0.5843129, 0.1192536, 0.71154076, 0.3383284, 0.5971434, 0.24163638,
                0.6734995
            ],
            [
                0.8782484, 0.08944888, 0.48237634, 0.0687674, 0.61030614, 0.763057, 0.7770131,
                0.15315741, 0.85641515, 0.4056261, 0.9179794, 0.18948041, 0.9657549, 0.11439406,
                0.9728639
            ]
        ]
    ];

    let kernel4: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.6055871, 0.12328367, 0.3114892, 0.3167563, 0.41700745, 0.55435276, 0.7955047,
            0.12726787, 0.37165096, 0.00439729, 0.6890043, 0.1309899, 0.13499211, 0.30266365,
            0.34375766, 0.21689218, 0.35587692, 0.6202945, 0.8525613, 0.5906649, 0.24026695,
            0.68338645, 0.5716598, 0.4225387, 0.2826704, 0.16889893, 0.6069533,
        ],
    )
    .unwrap();
    let conv_layer4 = ConvolutionLayer::new(kernel4, 1, Padding::Valid);
    let target_output4: Array3<f32> = array![[
        [
            5.6129737, 4.997429, 4.830427, 5.9841127, 6.4644465, 6.6717877, 5.738004, 6.1544466,
            5.8888583, 5.2899294, 5.721736, 6.6123843, 5.767404
        ],
        [
            5.3906083, 5.7430534, 4.9836793, 5.271409, 5.4593267, 6.0579605, 6.4390616, 5.167793,
            6.5313454, 5.300622, 6.2593894, 5.988404, 6.779997
        ],
        [
            4.632195, 4.1734376, 4.738527, 5.947288, 5.5738983, 6.9868617, 6.131815, 5.720382,
            5.3878093, 5.822025, 5.411452, 5.4155097, 4.7654214
        ],
        [
            6.206251, 5.301657, 5.7717347, 6.0150013, 5.8389316, 5.3526564, 5.212491, 4.181367,
            4.5070744, 4.125897, 5.104077, 5.439558, 4.616511
        ],
        [
            5.136306, 5.0682545, 5.7803755, 5.881555, 6.7075815, 5.900021, 4.5543804, 5.0404315,
            5.08176, 5.144224, 5.550898, 5.2215514, 4.8480353
        ],
        [
            5.861808, 5.429988, 5.91947, 5.4650307, 5.865622, 5.0485, 4.638427, 4.7173023,
            4.7344575, 5.6384006, 6.296451, 5.4459114, 4.9802427
        ],
        [
            5.3955364, 5.1597223, 5.052227, 5.0279813, 5.987716, 5.092125, 5.692676, 4.4957223,
            5.5705123, 6.242747, 6.484111, 6.433589, 4.970724
        ],
        [
            5.936928, 5.461623, 6.173313, 5.434898, 6.32531, 5.743797, 5.002083, 5.0559177,
            4.995693, 4.714089, 6.6239176, 6.0071883, 6.545356
        ]
    ]];
    let current_output4: Array3<f32> = conv_layer4.convolve(&test_input4);

    assert!(
        arr_allclose(&current_output4, &target_output4),
        "{:?} was not equal to {:?}",
        current_output4,
        target_output4
    );

    let test_input5 = array![
        [
            [
                0.05756181, 0.79796964, 0.04944435, 0.679002, 0.7156292, 0.8941644, 0.6412177,
                0.56803024, 0.56024176, 0.36936092, 0.24336162, 0.83992416, 0.70054483, 0.84670645,
                0.93408287
            ],
            [
                0.32817394, 0.43911496, 0.62813336, 0.47931832, 0.28184402, 0.44086096, 0.26381832,
                0.09156765, 0.14705709, 0.06864621, 0.3644169, 0.23609333, 0.01742986, 0.90869635,
                0.7827788
            ],
            [
                0.00732174, 0.7670253, 0.7365313, 0.9544987, 0.25394833, 0.4357872, 0.80581653,
                0.5252596, 0.18619475, 0.25884646, 0.7046317, 0.23158234, 0.7440483, 0.6246821,
                0.4038572
            ],
            [
                0.6822517, 0.5288406, 0.9090181, 0.7166643, 0.08598401, 0.5971982, 0.7859081,
                0.79062706, 0.31929043, 0.52815664, 0.9783313, 0.07738555, 0.60058224, 0.04155485,
                0.9949608
            ],
            [
                0.7615821, 0.6123928, 0.21521498, 0.10784956, 0.7184675, 0.71349823, 0.35231608,
                0.18067755, 0.5045173, 0.48649722, 0.3746991, 0.79505837, 0.12076204, 0.24437675,
                0.4922565
            ],
            [
                0.9779564, 0.81067127, 0.78796804, 0.45704818, 0.04247752, 0.04525762, 0.5575717,
                0.34563604, 0.14932355, 0.30096474, 0.88738924, 0.681929, 0.61556435, 0.3210932,
                0.6275637
            ],
            [
                0.8736778, 0.7003475, 0.6314963, 0.13988015, 0.60896695, 0.23316076, 0.29808274,
                0.27148733, 0.4540411, 0.98017716, 0.18621969, 0.81336415, 0.32718146, 0.6142979,
                0.25507236
            ],
            [
                0.96792, 0.8424581, 0.17691322, 0.33442205, 0.70754576, 0.7166968, 0.3279577,
                0.8143903, 0.9923988, 0.06662867, 0.662181, 0.12318801, 0.19103892, 0.9381113,
                0.9595595
            ],
            [
                0.9755575, 0.00008138, 0.01249961, 0.40144867, 0.8840439, 0.66408885, 0.7979905,
                0.90735817, 0.9045769, 0.69308424, 0.41451567, 0.33826837, 0.02230139, 0.86064774,
                0.3468706
            ],
            [
                0.3198661, 0.69407916, 0.19382912, 0.10532705, 0.97926295, 0.03633394, 0.7382309,
                0.85578996, 0.05517358, 0.47373444, 0.53850234, 0.3979838, 0.01646563, 0.94121945,
                0.4301739
            ]
        ],
        [
            [
                0.0153275, 0.4071996, 0.59729165, 0.6126854, 0.09058711, 0.30899736, 0.26750943,
                0.8756273, 0.5868575, 0.37185487, 0.01027582, 0.49819484, 0.8701863, 0.8069649,
                0.8206956
            ],
            [
                0.744203, 0.92919487, 0.8131431, 0.42483747, 0.09741595, 0.9638409, 0.29839757,
                0.58584654, 0.81179595, 0.6308731, 0.68174505, 0.21866773, 0.49270406, 0.8191268,
                0.9694966
            ],
            [
                0.8372113, 0.50964797, 0.71123123, 0.16811895, 0.5585159, 0.29419306, 0.7190028,
                0.33191478, 0.6839338, 0.7980101, 0.9284394, 0.32747796, 0.03255624, 0.1907446,
                0.5747709
            ],
            [
                0.9840877, 0.92906404, 0.82569945, 0.17061436, 0.70100874, 0.92796123, 0.8564488,
                0.9644883, 0.80048305, 0.45786336, 0.25753945, 0.9294206, 0.6196278, 0.82207745,
                0.3109271
            ],
            [
                0.35893062, 0.62511915, 0.89468116, 0.8354833, 0.06132602, 0.00944792, 0.8533961,
                0.51991457, 0.7456122, 0.39297876, 0.8194284, 0.41293454, 0.20799449, 0.7731474,
                0.5211581
            ],
            [
                0.1754263, 0.7095975, 0.03310984, 0.9133983, 0.55938286, 0.7176199, 0.5744108,
                0.3324931, 0.1134909, 0.4096875, 0.6242374, 0.24701218, 0.63869125, 0.96946657,
                0.34162354
            ],
            [
                0.9513908, 0.87750345, 0.21785556, 0.03287261, 0.13331373, 0.9600204, 0.8765127,
                0.11101003, 0.19701396, 0.9800813, 0.5836321, 0.94554824, 0.46701643, 0.19277428,
                0.9800453
            ],
            [
                0.33258557, 0.8130291, 0.9389267, 0.7614585, 0.1499497, 0.40278858, 0.07722609,
                0.87905455, 0.6196494, 0.83588266, 0.99850965, 0.91713256, 0.5929614, 0.3421722,
                0.02717085
            ],
            [
                0.27588442, 0.9552037, 0.05413999, 0.8698811, 0.34315115, 0.98115784, 0.9444794,
                0.91156703, 0.17170428, 0.42869946, 0.6224708, 0.47926104, 0.35960108, 0.28908366,
                0.2242362
            ],
            [
                0.5576108, 0.88076496, 0.9307082, 0.88550454, 0.3472928, 0.7482733, 0.60003114,
                0.14142898, 0.6050927, 0.76571184, 0.05837096, 0.2393961, 0.27730468, 0.66457146,
                0.68211764
            ]
        ],
        [
            [
                0.8497578, 0.19325097, 0.39304134, 0.67232877, 0.33372015, 0.3348802, 0.03709449,
                0.5771133, 0.75167763, 0.35425207, 0.2671537, 0.7831867, 0.49413827, 0.093459,
                0.70209366
            ],
            [
                0.39091238, 0.29325068, 0.19520658, 0.47526902, 0.45691565, 0.33859608, 0.68755937,
                0.04617033, 0.16751295, 0.38993102, 0.272409, 0.80119157, 0.37920174, 0.7636344,
                0.79533535
            ],
            [
                0.9449071, 0.7843069, 0.89694643, 0.97018677, 0.51973414, 0.5180376, 0.52249014,
                0.3388958, 0.72234726, 0.36219832, 0.468965, 0.9097073, 0.30697423, 0.9843364,
                0.65160054
            ],
            [
                0.18341686, 0.87780553, 0.20383635, 0.91526777, 0.40537685, 0.15859716, 0.35816404,
                0.13154314, 0.07180241, 0.91537887, 0.42799363, 0.07022415, 0.9008346, 0.41282526,
                0.47614527
            ],
            [
                0.07713356, 0.88098776, 0.1842307, 0.2630701, 0.06056971, 0.07349233, 0.17608605,
                0.19053963, 0.27621788, 0.54849166, 0.34880427, 0.890512, 0.88948244, 0.65954226,
                0.97382414
            ],
            [
                0.4551989, 0.5087082, 0.20805901, 0.5689028, 0.9835293, 0.82096803, 0.9780689,
                0.8797563, 0.5645703, 0.5703153, 0.77620894, 0.74485576, 0.05875124, 0.09463912,
                0.74390864
            ],
            [
                0.24045336, 0.16564246, 0.7654987, 0.82226163, 0.62307173, 0.55291533, 0.98263544,
                0.2754741, 0.08459944, 0.62585706, 0.17965508, 0.28304926, 0.91682273, 0.28408903,
                0.36125833
            ],
            [
                0.9508625, 0.7774976, 0.22419459, 0.37563834, 0.9873837, 0.22288306, 0.598755,
                0.83061284, 0.536406, 0.28182983, 0.60448396, 0.8540598, 0.9118344, 0.8149188,
                0.8916309
            ],
            [
                0.59208006, 0.12578069, 0.5153533, 0.6468678, 0.52290094, 0.85046166, 0.6930413,
                0.45996496, 0.43418503, 0.9244341, 0.00536506, 0.0032256, 0.48593593, 0.4153976,
                0.93169004
            ],
            [
                0.17364207, 0.11111139, 0.9188555, 0.20754221, 0.71126235, 0.28782296, 0.3259743,
                0.39191914, 0.968827, 0.50472075, 0.56728834, 0.36507484, 0.62646276, 0.8425775,
                0.6059688
            ]
        ]
    ];

    let kernel5: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.7629583, 0.176356, 0.4957459, 0.437191, 0.36509594, 0.9702412, 0.21913478,
            0.30053073, 0.7430913, 0.56038123, 0.88925517, 0.69923055, 0.43973154, 0.5616029,
            0.5679234, 0.6611514, 0.36820948, 0.19231908, 0.48163053, 0.14793599, 0.3227648,
            0.29997745, 0.6617385, 0.13432135, 0.209788, 0.62227124, 0.26170298,
        ],
    )
    .unwrap();
    let conv_layer5 = ConvolutionLayer::new(kernel5, 1, Padding::Valid);
    let target_output5: Array3<f32> = array![[
        [
            6.75105, 7.6099606, 6.34812, 5.8524466, 5.6746173, 6.6181536, 5.6593475, 5.7001457,
            5.987406, 6.0569057, 6.168674, 6.9890633, 7.7078295
        ],
        [
            8.40446, 8.470482, 6.688993, 5.6837363, 6.3585043, 6.959808, 6.6803284, 5.9738145,
            6.5607533, 6.4380817, 6.1732235, 5.8212028, 6.876729
        ],
        [
            7.667846, 7.5801253, 7.100522, 5.941496, 5.9090824, 6.1294966, 6.612042, 6.581558,
            6.959039, 6.4362016, 6.4409833, 6.113481, 6.21931
        ],
        [
            7.6411834, 7.169004, 6.2204337, 5.656073, 5.290457, 6.2908196, 6.521346, 5.6956406,
            6.013068, 7.39396, 7.539475, 6.384267, 6.882105
        ],
        [
            7.196534, 6.7156515, 5.163203, 5.571211, 6.3182864, 6.484697, 5.7836623, 5.154123,
            6.370037, 7.3375797, 6.719159, 6.395296, 6.126208
        ],
        [
            7.5346575, 7.3249874, 6.166347, 6.395534, 6.58402, 6.7667494, 6.3963456, 6.136738,
            6.193033, 7.00921, 7.506175, 7.361962, 6.7310834
        ],
        [
            6.506143, 5.7292557, 6.267607, 7.1683874, 7.038227, 7.808967, 7.6638308, 7.4318304,
            6.6155214, 7.8011923, 6.503447, 6.7154927, 6.813184
        ],
        [
            6.8740788, 6.912091, 6.388354, 7.1234612, 7.0248065, 7.9617352, 7.414247, 7.5100346,
            6.900461, 5.804551, 5.4496818, 5.669251, 6.468679
        ]
    ]];
    let current_output5: Array3<f32> = conv_layer5.convolve(&test_input5);

    assert!(
        arr_allclose(&current_output5, &target_output5),
        "{:?} was not equal to {:?}",
        current_output5,
        target_output5
    );

    let test_input6 = array![
        [
            [
                0.10480803, 0.20851518, 0.1163867, 0.40303, 0.74670875, 0.9654975, 0.05109123,
                0.9891213, 0.47125, 0.92367506, 0.67128026, 0.27641538, 0.26890948, 0.51146317,
                0.80564773
            ],
            [
                0.47078377, 0.02126783, 0.9487504, 0.00943314, 0.84370506, 0.5316646, 0.69432026,
                0.2836983, 0.20262088, 0.22266188, 0.12425002, 0.84872884, 0.6669188, 0.29424527,
                0.7882464
            ],
            [
                0.29690132, 0.04421633, 0.26998708, 0.41856614, 0.4742414, 0.5493846, 0.17029643,
                0.05664136, 0.01680515, 0.6496963, 0.36792266, 0.5680892, 0.7869872, 0.25711668,
                0.9562488
            ],
            [
                0.8930679, 0.38366762, 0.7790032, 0.26240814, 0.6817857, 0.85106283, 0.5805011,
                0.48236644, 0.25242767, 0.53677225, 0.79416144, 0.6529702, 0.7838985, 0.61172485,
                0.13177402
            ],
            [
                0.03087392, 0.6059544, 0.9409913, 0.1627552, 0.48094535, 0.65446067, 0.21450381,
                0.84573215, 0.57119006, 0.21737069, 0.8441482, 0.8522896, 0.773223, 0.8982615,
                0.49277794
            ],
            [
                0.1585067, 0.9429821, 0.37306353, 0.06833509, 0.96346164, 0.28288215, 0.514175,
                0.00774159, 0.94680935, 0.8096563, 0.38656324, 0.67476803, 0.4460729, 0.5397614,
                0.7357459
            ],
            [
                0.03911254, 0.80732703, 0.7802926, 0.1369102, 0.9589836, 0.22322156, 0.5711523,
                0.5386646, 0.8407316, 0.63207716, 0.8670982, 0.10441232, 0.7679019, 0.8551502,
                0.08035298
            ],
            [
                0.27582648, 0.7745094, 0.98297566, 0.01153891, 0.55476546, 0.14234911, 0.9118427,
                0.7842302, 0.48483032, 0.5814206, 0.44947338, 0.7513198, 0.41213843, 0.4328227,
                0.57869387
            ],
            [
                0.53123087, 0.22217223, 0.7681623, 0.68530315, 0.18006648, 0.9498266, 0.3840358,
                0.04691354, 0.19270384, 0.26402712, 0.9567203, 0.75538653, 0.82362133, 0.39762703,
                0.27424002
            ],
            [
                0.5536027, 0.28394443, 0.60607, 0.3349493, 0.0394791, 0.9388161, 0.25654384,
                0.9906275, 0.6094893, 0.3957746, 0.46793708, 0.8208274, 0.79387194, 0.29514915,
                0.03520088
            ]
        ],
        [
            [
                0.00958306, 0.17973869, 0.2735905, 0.75797635, 0.82946825, 0.18782942, 0.3069365,
                0.62504834, 0.84314245, 0.6953895, 0.43450755, 0.8369712, 0.65425915, 0.48995435,
                0.670521
            ],
            [
                0.5100531, 0.9583153, 0.9609589, 0.7521432, 0.16933449, 0.6400151, 0.8581641,
                0.33953485, 0.81930757, 0.63842744, 0.7582065, 0.17490041, 0.8970669, 0.56277037,
                0.24159203
            ],
            [
                0.3142075, 0.9636684, 0.13811645, 0.13321315, 0.79873264, 0.6481355, 0.955536,
                0.9231865, 0.54690886, 0.8382851, 0.01756373, 0.19350345, 0.12335967, 0.05608724,
                0.44598028
            ],
            [
                0.24216229, 0.64894366, 0.3529938, 0.554433, 0.95833224, 0.70093375, 0.9803199,
                0.66855663, 0.6717967, 0.18097793, 0.7215235, 0.00384528, 0.980683, 0.5263662,
                0.9175598
            ],
            [
                0.03482862, 0.29194582, 0.60953087, 0.8939359, 0.06551108, 0.9592776, 0.6442533,
                0.34651902, 0.27269888, 0.04463017, 0.77705365, 0.16809769, 0.9678148, 0.271913,
                0.14560463
            ],
            [
                0.18610527, 0.40789625, 0.9367061, 0.48335183, 0.00378525, 0.75004077, 0.35879079,
                0.15532039, 0.052598, 0.7097644, 0.13763146, 0.06055127, 0.33209085, 0.05766413,
                0.09256811
            ],
            [
                0.782554, 0.8010379, 0.9490529, 0.4513485, 0.24819064, 0.39812055, 0.97817534,
                0.6699801, 0.64728755, 0.00916763, 0.1932068, 0.46486124, 0.23872072, 0.19610135,
                0.05671094
            ],
            [
                0.33816597, 0.14011143, 0.5085966, 0.669607, 0.528783, 0.5152856, 0.8193508,
                0.59264964, 0.22649786, 0.8653732, 0.5519129, 0.9315116, 0.45310238, 0.23842481,
                0.9324833
            ],
            [
                0.5324186, 0.0080786, 0.8421627, 0.9955617, 0.5975193, 0.9690994, 0.8757204,
                0.40678895, 0.23519029, 0.55168146, 0.57141143, 0.96776, 0.29203537, 0.26186082,
                0.50570756
            ],
            [
                0.59788686, 0.6402348, 0.6834324, 0.4295082, 0.50698835, 0.84357476, 0.71037215,
                0.9552909, 0.7271988, 0.6157527, 0.8514491, 0.2372746, 0.9463199, 0.8795419,
                0.83411527
            ]
        ],
        [
            [
                0.20726651, 0.23704103, 0.8537909, 0.34342998, 0.91931367, 0.10021565, 0.10895161,
                0.507994, 0.6054993, 0.37023902, 0.28869846, 0.6856483, 0.84581685, 0.52071315,
                0.3835857
            ],
            [
                0.82525116, 0.23316967, 0.95734006, 0.46106157, 0.71423984, 0.9638914, 0.70813745,
                0.8950543, 0.09556881, 0.8304186, 0.09737789, 0.37569723, 0.22398192, 0.41113177,
                0.5460915
            ],
            [
                0.7648111, 0.98529965, 0.9724998, 0.0937838, 0.1621314, 0.05176858, 0.089831,
                0.98567015, 0.8593988, 0.2400014, 0.6596718, 0.4854058, 0.14544043, 0.18204254,
                0.3229758
            ],
            [
                0.21437034, 0.8650639, 0.37360683, 0.90017563, 0.28551313, 0.4791875, 0.97033703,
                0.35855147, 0.26290378, 0.07985484, 0.42313012, 0.08442257, 0.36212954, 0.8496614,
                0.04323238
            ],
            [
                0.36226457, 0.34645593, 0.8610255, 0.66327935, 0.86129206, 0.8000413, 0.46971878,
                0.18830031, 0.7915957, 0.393406, 0.6315176, 0.22305161, 0.2237789, 0.34780893,
                0.33638617
            ],
            [
                0.6963084, 0.20056698, 0.7103306, 0.45182207, 0.33689302, 0.1607512, 0.36688787,
                0.01133456, 0.73530346, 0.37942106, 0.99930644, 0.8463604, 0.94373864, 0.64256257,
                0.8832945
            ],
            [
                0.4004812, 0.28867772, 0.5395702, 0.1162144, 0.3149064, 0.45308354, 0.06805564,
                0.1879456, 0.53731096, 0.46754488, 0.43971533, 0.22910197, 0.03931138, 0.8555064,
                0.9091975
            ],
            [
                0.42012835, 0.47505257, 0.22395916, 0.12918296, 0.5067741, 0.6446142, 0.989135,
                0.35247177, 0.04158387, 0.4524277, 0.79122764, 0.03313805, 0.01799934, 0.20688592,
                0.43915927
            ],
            [
                0.4149537, 0.65063345, 0.27179125, 0.77906156, 0.6555531, 0.5122471, 0.7260429,
                0.35535267, 0.6665529, 0.08576613, 0.20602623, 0.44755465, 0.30861592, 0.9658112,
                0.8114843
            ],
            [
                0.05054026, 0.02258505, 0.8004999, 0.37033585, 0.29841292, 0.29760668, 0.14646496,
                0.7966291, 0.09518696, 0.31079137, 0.86081386, 0.6977758, 0.99063903, 0.741553,
                0.47134155
            ]
        ]
    ];

    let kernel6: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.26704508, 0.22973806, 0.78120434, 0.583651, 0.6523751, 0.21792394, 0.72244126,
            0.53774405, 0.39724785, 0.2872401, 0.18128674, 0.15868789, 0.94414073, 0.27093726,
            0.6620494, 0.7707775, 0.08921466, 0.59319293, 0.04289522, 0.05054512, 0.81183356,
            0.5729697, 0.32479268, 0.6886836, 0.02079507, 0.18494032, 0.02472531,
        ],
    )
    .unwrap();
    let conv_layer6 = ConvolutionLayer::new(kernel6, 1, Padding::Valid);
    let target_output6: Array3<f32> = array![[
        [
            4.5862336, 5.4085326, 5.825521, 6.2135606, 5.075972, 5.3559203, 5.6985784, 6.691763,
            5.40033, 5.0912495, 5.552468, 5.0037503, 5.437249
        ],
        [
            6.462797, 6.1361513, 5.995697, 6.0328174, 6.687547, 6.6202025, 5.978777, 4.7428555,
            4.938018, 4.7821198, 5.6551356, 5.4985547, 5.943998
        ],
        [
            5.155095, 5.5287123, 5.785604, 6.1852894, 6.904317, 6.5086684, 5.0642686, 5.304705,
            5.279445, 5.0551825, 5.5885973, 5.0664005, 4.8000503
        ],
        [
            5.884164, 6.001772, 6.1688724, 5.8316646, 6.5919547, 5.6612897, 4.970812, 4.5007744,
            5.59513, 5.862826, 6.0872116, 6.739192, 6.2626348
        ],
        [
            5.612076, 6.378115, 5.5355067, 4.706619, 6.12423, 5.1906147, 4.8110776, 4.9771996,
            5.525512, 5.71593, 5.909637, 5.1259623, 4.9667645
        ],
        [
            5.6915956, 5.863215, 5.196047, 4.2931404, 5.6002116, 5.2732363, 5.448147, 5.823457,
            5.5200353, 5.806505, 5.0031133, 4.612411, 4.5378714
        ],
        [
            6.560202, 6.2341247, 5.7084374, 5.84225, 6.3708143, 6.9791994, 5.8770213, 4.8782816,
            5.150908, 5.0540648, 5.5654907, 4.7165413, 4.932362
        ],
        [
            5.024252, 5.3557854, 5.7021403, 5.4502563, 6.070396, 7.1033797, 5.558847, 5.509542,
            5.5412173, 6.909447, 6.974248, 6.537551, 6.4799705
        ]
    ]];
    let current_output6: Array3<f32> = conv_layer6.convolve(&test_input6);

    assert!(
        arr_allclose(&current_output6, &target_output6),
        "{:?} was not equal to {:?}",
        current_output6,
        target_output6
    );

    let test_input7 = array![
        [
            [
                0.21891202, 0.53426075, 0.7835011, 0.7320774, 0.04187773, 0.97746944, 0.04763152,
                0.6238241, 0.59153587, 0.8120847
            ],
            [
                0.19057496, 0.17967562, 0.09082693, 0.8904992, 0.62424076, 0.150883, 0.1765902,
                0.1959308, 0.38556734, 0.7036003
            ],
            [
                0.28418577, 0.7740251, 0.80441076, 0.30094627, 0.62549657, 0.3677915, 0.39276573,
                0.9064707, 0.11438051, 0.36442748
            ],
            [
                0.27816203, 0.27386904, 0.4750283, 0.7072159, 0.8200852, 0.86201537, 0.89921826,
                0.05440097, 0.9064988, 0.8670149
            ],
            [
                0.77540857, 0.2344423, 0.87634915, 0.53053117, 0.76156837, 0.549209, 0.9782156,
                0.00302504, 0.50054824, 0.7763043
            ],
            [
                0.7348974, 0.37013116, 0.39673004, 0.9373305, 0.8604789, 0.06647868, 0.8982795,
                0.28379655, 0.68760884, 0.45302406
            ],
            [
                0.39986408, 0.12796782, 0.6908975, 0.17578217, 0.3247584, 0.08430128, 0.24024557,
                0.9770886, 0.7253688, 0.5181486
            ],
            [
                0.5745777, 0.7069771, 0.58577555, 0.11343616, 0.8858372, 0.9673369, 0.22112074,
                0.65248054, 0.32796225, 0.5726663
            ],
            [
                0.29288608, 0.91578674, 0.8990461, 0.43518323, 0.10086012, 0.01069371, 0.04778918,
                0.46361542, 0.3127784, 0.5766132
            ],
            [
                0.52757853, 0.13378453, 0.5428326, 0.24383228, 0.01949351, 0.8489, 0.00185038,
                0.8082305, 0.65069795, 0.5413155
            ],
            [
                0.8548128, 0.33444464, 0.12669064, 0.91064155, 0.6067355, 0.1328066, 0.6295161,
                0.51702976, 0.6327302, 0.33968034
            ],
            [
                0.7094508, 0.7905302, 0.85952836, 0.37933362, 0.27719194, 0.30563155, 0.09087573,
                0.9398569, 0.05337733, 0.32119673
            ],
            [
                0.6260977, 0.10247751, 0.22236562, 0.866447, 0.61566937, 0.96525836, 0.705448,
                0.05098573, 0.9101412, 0.9708137
            ],
            [
                0.19467542, 0.20617688, 0.09430943, 0.07089514, 0.23516753, 0.53420085, 0.2669936,
                0.17850904, 0.26960826, 0.7345929
            ],
            [
                0.24392553, 0.9581323, 0.17250775, 0.7273789, 0.04974006, 0.20740515, 0.02647329,
                0.47016057, 0.49847803, 0.02373338
            ]
        ],
        [
            [
                0.5342134, 0.20461221, 0.47930118, 0.55179524, 0.23883641, 0.6415133, 0.75958186,
                0.4102024, 0.66274744, 0.22876394
            ],
            [
                0.4622738, 0.27354005, 0.6217685, 0.5337058, 0.95776683, 0.28713444, 0.9674033,
                0.3119046, 0.18145509, 0.3402552
            ],
            [
                0.5504918, 0.37459207, 0.17314304, 0.06480476, 0.6065069, 0.69532603, 0.18570696,
                0.01547038, 0.03861368, 0.08230381
            ],
            [
                0.3741886, 0.4171807, 0.6358263, 0.34310365, 0.46510443, 0.04691705, 0.47400048,
                0.28273952, 0.7027802, 0.08634489
            ],
            [
                0.00211577, 0.9849179, 0.48734385, 0.01152504, 0.4680538, 0.8383253, 0.7419056,
                0.80174476, 0.16478458, 0.73042727
            ],
            [
                0.71259016, 0.14954911, 0.03940821, 0.84819096, 0.92845494, 0.12827316, 0.1193029,
                0.0638791, 0.2630593, 0.10402057
            ],
            [
                0.53770447, 0.80071914, 0.5850918, 0.55867785, 0.9196999, 0.83232373, 0.60874844,
                0.99522823, 0.26021662, 0.5871326
            ],
            [
                0.81429285, 0.33134556, 0.40479863, 0.8795398, 0.3898591, 0.64465624, 0.1391855,
                0.291874, 0.22921298, 0.72872376
            ],
            [
                0.92347336, 0.800785, 0.8424308, 0.48451254, 0.5242353, 0.01020448, 0.8456499,
                0.7532553, 0.9686197, 0.6463905
            ],
            [
                0.55145216, 0.2262157, 0.9094368, 0.7446406, 0.13375893, 0.6848837, 0.44556108,
                0.33159012, 0.9300001, 0.5714561
            ],
            [
                0.02262598, 0.98826236, 0.50246465, 0.7792924, 0.3940292, 0.72018456, 0.03357495,
                0.9283114, 0.37459058, 0.59511477
            ],
            [
                0.29612544, 0.4748418, 0.70326394, 0.22292, 0.8619771, 0.5844432, 0.23811613,
                0.04807154, 0.19222781, 0.3872288
            ],
            [
                0.0084233, 0.60939455, 0.31823838, 0.8205645, 0.59327537, 0.47292593, 0.28257245,
                0.8293213, 0.07020015, 0.3117258
            ],
            [
                0.09732427, 0.8857049, 0.28105715, 0.7148581, 0.04615124, 0.75324225, 0.29911962,
                0.65695775, 0.12972821, 0.6485681
            ],
            [
                0.26706976, 0.31259444, 0.715259, 0.23862323, 0.8688277, 0.19872624, 0.90772045,
                0.06899374, 0.02369655, 0.21085607
            ]
        ],
        [
            [
                0.4041879, 0.29362342, 0.2895624, 0.37774232, 0.63051957, 0.4162999, 0.13098118,
                0.5710282, 0.6454271, 0.6206928
            ],
            [
                0.9772445, 0.48198408, 0.0965838, 0.17222154, 0.998361, 0.35105017, 0.65025777,
                0.55247456, 0.94255227, 0.16401337
            ],
            [
                0.6148071, 0.25677747, 0.5946227, 0.5798754, 0.9259787, 0.8356569, 0.61698794,
                0.2551995, 0.6524532, 0.79969245
            ],
            [
                0.44356522, 0.14990133, 0.77572674, 0.36999545, 0.9230857, 0.12260284, 0.7492544,
                0.9184355, 0.19125043, 0.722654
            ],
            [
                0.6443405, 0.9893316, 0.8760625, 0.6788874, 0.07214947, 0.00365476, 0.40790308,
                0.7689671, 0.89107823, 0.41667554
            ],
            [
                0.93557405, 0.33766475, 0.2414454, 0.9272432, 0.8023847, 0.02774826, 0.37523487,
                0.08446726, 0.01052708, 0.5539082
            ],
            [
                0.24856173, 0.38390577, 0.71101063, 0.71616316, 0.46712968, 0.49657014, 0.47418702,
                0.7749884, 0.8869578, 0.76900613
            ],
            [
                0.78002185, 0.7407027, 0.7506117, 0.83064, 0.9350765, 0.0283905, 0.34128338,
                0.70765275, 0.59572685, 0.8248998
            ],
            [
                0.25887516, 0.7670362, 0.7045559, 0.31151697, 0.19001916, 0.12606935, 0.57045126,
                0.62787765, 0.96754897, 0.6347338
            ],
            [
                0.08155768, 0.73179847, 0.2528448, 0.5544842, 0.04438103, 0.9220802, 0.00844186,
                0.5138473, 0.58097035, 0.21683556
            ],
            [
                0.62476623, 0.03221937, 0.42635268, 0.07601635, 0.30074376, 0.34319454, 0.03066352,
                0.36689135, 0.93406814, 0.4350908
            ],
            [
                0.80898666, 0.6989706, 0.38940284, 0.3949557, 0.9255003, 0.36121982, 0.17829578,
                0.7588201, 0.98696715, 0.74463385
            ],
            [
                0.31085488, 0.00353958, 0.9627444, 0.7792785, 0.33567885, 0.2669342, 0.02662205,
                0.9416077, 0.8425068, 0.11623824
            ],
            [
                0.43287596, 0.9601851, 0.6942895, 0.00085336, 0.59699446, 0.38793716, 0.7380972,
                0.8119258, 0.6597052, 0.22981846
            ],
            [
                0.32711208, 0.91530424, 0.5014661, 0.4093651, 0.46409306, 0.27135858, 0.97377276,
                0.47393376, 0.10663922, 0.56809616
            ]
        ]
    ];

    let kernel7: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.70259374, 0.3228139, 0.58678144, 0.25862443, 0.49184018, 0.67917913, 0.593886,
            0.25792846, 0.9191908, 0.4123619, 0.11140465, 0.03434712, 0.4823392, 0.8395536,
            0.02545591, 0.8265343, 0.54400545, 0.02958322, 0.01858313, 0.59627575, 0.8123595,
            0.47215322, 0.13370071, 0.2468276, 0.06712108, 0.8792363, 0.20474248,
        ],
    )
    .unwrap();
    let conv_layer7 = ConvolutionLayer::new(kernel7, 1, Padding::Valid);
    let target_output7: Array3<f32> = array![[
        [5.312794, 5.34928, 6.3697066, 6.3577585, 6.0792747, 6.35765, 5.588798, 4.9952917],
        [4.7809677, 4.849527, 6.807024, 7.2357197, 7.4442496, 4.715311, 5.3883834, 5.499192],
        [6.0586767, 5.762316, 7.1131406, 5.690275, 6.376732, 5.2056675, 4.621612, 5.9451084],
        [6.5006957, 6.2672977, 6.1023607, 6.2409906, 6.544622, 5.366057, 6.6718245, 4.733353],
        [5.560825, 5.350019, 6.8811283, 5.5046773, 5.26791, 4.9412003, 5.589259, 6.0458035],
        [6.058896, 6.069745, 7.3684034, 7.201582, 6.1047516, 4.981713, 5.881467, 5.700812],
        [6.78815, 6.983311, 6.887865, 4.719513, 4.7479863, 4.9485474, 5.4404926, 7.0186973],
        [6.315576, 6.4286146, 5.201749, 5.0762353, 3.7434714, 6.021936, 5.5914526, 6.900149],
        [5.8339353, 6.499894, 5.08076, 4.258484, 3.930184, 5.1559, 5.853037, 6.718202],
        [7.2060165, 5.3828163, 5.3443565, 4.896562, 4.1501827, 5.1598554, 5.7771072, 6.360735],
        [5.408149, 6.1269965, 6.403713, 6.871279, 5.328275, 4.8290243, 5.456457, 6.866667],
        [5.6507936, 5.1694975, 5.9449935, 5.369369, 4.600895, 5.1126, 4.674372, 5.516897],
        [4.908872, 6.0900183, 5.1939907, 4.9635477, 5.1056075, 5.2361836, 5.9097676, 4.766476]
    ]];
    let current_output7: Array3<f32> = conv_layer7.convolve(&test_input7);

    assert!(
        arr_allclose(&current_output7, &target_output7),
        "{:?} was not equal to {:?}",
        current_output7,
        target_output7
    );

    let test_input8 = array![
        [
            [
                0.76555794, 0.17773865, 0.9466453, 0.5338591, 0.23633894, 0.3347224, 0.18004768,
                0.05106571, 0.7948706, 0.5068071
            ],
            [
                0.13518302, 0.7176047, 0.7382226, 0.7183669, 0.19437055, 0.98047, 0.9480506,
                0.2355401, 0.60260093, 0.4168223
            ],
            [
                0.59076214, 0.24348243, 0.9748906, 0.13005458, 0.9216249, 0.666532, 0.976145,
                0.5690737, 0.6692434, 0.8154824
            ],
            [
                0.00950876, 0.6243543, 0.24558064, 0.52372193, 0.6370576, 0.39436254, 0.7309763,
                0.4431474, 0.43634078, 0.57885796
            ],
            [
                0.7995473, 0.82163817, 0.06249312, 0.670139, 0.7154457, 0.7457981, 0.93545914,
                0.63580817, 0.6235891, 0.23342584
            ],
            [
                0.96423954, 0.50718915, 0.48106775, 0.2891619, 0.7661429, 0.1846646, 0.723256,
                0.13196982, 0.09975351, 0.5690517
            ],
            [
                0.7327984, 0.88714564, 0.280569, 0.16297498, 0.33016786, 0.8538999, 0.11430372,
                0.7053654, 0.91106904, 0.38816592
            ],
            [
                0.93466866, 0.7199313, 0.5897581, 0.3697457, 0.47229373, 0.6383385, 0.96132326,
                0.5111371, 0.30164844, 0.5127781
            ],
            [
                0.6647127, 0.22396304, 0.03016802, 0.15363416, 0.6468661, 0.7568015, 0.20788053,
                0.45675126, 0.42006218, 0.09741933
            ],
            [
                0.9338919, 0.47637334, 0.29542014, 0.6808416, 0.2891591, 0.9734199, 0.0414281,
                0.34610718, 0.23232727, 0.85453415
            ],
            [
                0.653471, 0.5419032, 0.8802664, 0.07512625, 0.33277866, 0.84465176, 0.23459853,
                0.4075119, 0.19455469, 0.38075933
            ],
            [
                0.45671245, 0.6821529, 0.40237483, 0.65666056, 0.61528814, 0.10633651, 0.49642795,
                0.14359485, 0.53526694, 0.1696324
            ],
            [
                0.33204898, 0.95525235, 0.25685027, 0.25693816, 0.30001205, 0.83179814, 0.4820838,
                0.6531026, 0.00604056, 0.16296797
            ],
            [
                0.04446485, 0.1919063, 0.00911832, 0.815183, 0.94401777, 0.52856827, 0.28076503,
                0.980501, 0.886572, 0.8819829
            ],
            [
                0.7819647, 0.72222507, 0.11044633, 0.2546282, 0.78940445, 0.90517753, 0.75040495,
                0.72387767, 0.16955712, 0.2814817
            ]
        ],
        [
            [
                0.82307637, 0.17740512, 0.13741271, 0.7898385, 0.8572216, 0.50485814, 0.24514198,
                0.30884218, 0.5052517, 0.15044466
            ],
            [
                0.7257979, 0.09527912, 0.41232714, 0.07962471, 0.79608136, 0.56819236, 0.10080674,
                0.94827145, 0.76637876, 0.25562465
            ],
            [
                0.22263806, 0.94946456, 0.7407666, 0.69001645, 0.03732051, 0.9382296, 0.6098745,
                0.6428197, 0.86947584, 0.3646563
            ],
            [
                0.02384425, 0.061506, 0.15653013, 0.62839466, 0.74306166, 0.45260343, 0.40489906,
                0.6631732, 0.4686375, 0.26523942
            ],
            [
                0.951001, 0.21192186, 0.3968833, 0.89535373, 0.8203782, 0.7147152, 0.8986874,
                0.15263815, 0.62486136, 0.9827126
            ],
            [
                0.02081718, 0.9034243, 0.27722874, 0.9937529, 0.23943478, 0.05945846, 0.5690188,
                0.2549996, 0.6575368, 0.8633032
            ],
            [
                0.38392547, 0.48625886, 0.3272779, 0.8690239, 0.2406453, 0.30761606, 0.45364544,
                0.4003387, 0.5180514, 0.16589011
            ],
            [
                0.9079338, 0.5790186, 0.00632351, 0.13892107, 0.56468743, 0.03793695, 0.6061949,
                0.03746503, 0.68653256, 0.25915265
            ],
            [
                0.42920145, 0.553291, 0.13123624, 0.26550946, 0.22700246, 0.49555436, 0.91674453,
                0.48490578, 0.8251126, 0.50827706
            ],
            [
                0.41674572, 0.72644436, 0.46568522, 0.3779981, 0.6993045, 0.9644196, 0.27610767,
                0.3848816, 0.32100558, 0.76819396
            ],
            [
                0.6439924, 0.42076096, 0.30416232, 0.21167818, 0.5804159, 0.33960778, 0.86872333,
                0.13763186, 0.2231027, 0.36192992
            ],
            [
                0.02821646, 0.13092387, 0.96532, 0.07955468, 0.8301079, 0.95870477, 0.02807361,
                0.96717685, 0.789418, 0.22258878
            ],
            [
                0.6242531, 0.17685722, 0.9619644, 0.06693318, 0.24983038, 0.9035203, 0.2207663,
                0.941437, 0.6749602, 0.7694261
            ],
            [
                0.8114944, 0.18254054, 0.20514874, 0.26495343, 0.54503894, 0.51207054, 0.07791043,
                0.54355013, 0.36146563, 0.48148784
            ],
            [
                0.49357224, 0.366483, 0.88196933, 0.8222847, 0.46583235, 0.7002328, 0.53337294,
                0.9831707, 0.76152086, 0.15761587
            ]
        ],
        [
            [
                0.24628638, 0.4937253, 0.728613, 0.47936276, 0.06004518, 0.09635731, 0.228041,
                0.38737774, 0.23866583, 0.09537497
            ],
            [
                0.86458087, 0.72005635, 0.5491061, 0.04476061, 0.6295519, 0.10505454, 0.9538371,
                0.46488547, 0.3219317, 0.8997145
            ],
            [
                0.6840723, 0.34627816, 0.9677088, 0.14445187, 0.44508553, 0.80578685, 0.04455515,
                0.21377262, 0.12576632, 0.32867205
            ],
            [
                0.68798536, 0.4878141, 0.40195072, 0.67610437, 0.8282889, 0.6606655, 0.9551375,
                0.18731794, 0.7620647, 0.13030814
            ],
            [
                0.58605653, 0.12197074, 0.23130116, 0.9697048, 0.21395262, 0.05275504, 0.8690856,
                0.7466949, 0.7352324, 0.93357897
            ],
            [
                0.47192466, 0.678573, 0.0061415, 0.02278532, 0.7568481, 0.7522374, 0.80126184,
                0.9684265, 0.01221572, 0.5916843
            ],
            [
                0.45234743, 0.4974664, 0.7308698, 0.5834708, 0.599151, 0.3641591, 0.6984523,
                0.38632825, 0.1837249, 0.91154295
            ],
            [
                0.6218017, 0.5812801, 0.51240736, 0.9900367, 0.59834725, 0.9450343, 0.63035446,
                0.558335, 0.99669343, 0.34361982
            ],
            [
                0.22015804, 0.21043801, 0.4177692, 0.9799374, 0.28266105, 0.7577122, 0.56273526,
                0.82385767, 0.35886785, 0.09494945
            ],
            [
                0.12654002, 0.22123201, 0.6850643, 0.805789, 0.33186397, 0.09362596, 0.43870836,
                0.24301769, 0.22719596, 0.8545096
            ],
            [
                0.61992764, 0.7094996, 0.00992903, 0.9575676, 0.14874539, 0.03217437, 0.05481404,
                0.38947833, 0.710135, 0.5788371
            ],
            [
                0.65663046, 0.04243296, 0.08922233, 0.30693734, 0.9080613, 0.24841434, 0.67816275,
                0.970054, 0.44380167, 0.54548246
            ],
            [
                0.39491078, 0.4390062, 0.7054154, 0.71142703, 0.04385825, 0.99454165, 0.6613494,
                0.02962555, 0.09254023, 0.49170363
            ],
            [
                0.29030007, 0.13724734, 0.59104544, 0.62743604, 0.6431647, 0.03335644, 0.86478263,
                0.03467919, 0.13580918, 0.09721047
            ],
            [
                0.6708243, 0.37231642, 0.7812372, 0.328725, 0.3009351, 0.750793, 0.51972127,
                0.20632543, 0.05444199, 0.95890856
            ]
        ]
    ];

    let kernel8: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.90069485, 0.2162454, 0.05310873, 0.78206104, 0.6565798, 0.5917116, 0.8816592,
            0.28489798, 0.9041115, 0.01261302, 0.06208929, 0.13790856, 0.92161584, 0.5351854,
            0.38009274, 0.9976662, 0.20003575, 0.99974847, 0.21181779, 0.50320554, 0.78958035,
            0.74544144, 0.10227188, 0.2742251, 0.2966056, 0.1822242, 0.9090851,
        ],
    )
    .unwrap();
    let conv_layer8 = ConvolutionLayer::new(kernel8, 1, Padding::Valid);
    let target_output8: Array3<f32> = array![[
        [7.8123083, 7.0714016, 7.474668, 6.8231783, 6.247423, 5.7228193, 6.286627, 5.9879446],
        [6.3339376, 6.973789, 7.3296366, 7.758118, 8.073368, 8.346216, 8.221962, 5.998009],
        [6.8060613, 7.1885567, 7.319968, 7.8778505, 9.608267, 7.6007085, 8.629486, 7.7476163],
        [4.860621, 6.022322, 7.1733084, 7.2352657, 8.064549, 7.7601137, 6.6978326, 7.411577],
        [6.3720512, 6.9291253, 7.2551894, 7.178405, 7.6554184, 7.578588, 7.507305, 7.7300453],
        [7.4650946, 6.1765985, 6.583195, 6.2207584, 7.7322407, 6.564018, 7.1212726, 6.355715],
        [5.947313, 6.1326942, 5.5233884, 7.2312174, 6.643811, 7.884287, 7.0133724, 6.233747],
        [6.231162, 5.548848, 6.4521384, 7.513802, 6.972557, 6.2742667, 6.024755, 7.3500996],
        [5.489087, 5.0256248, 5.0456786, 6.7030153, 7.0916324, 5.6246243, 5.533279, 5.666169],
        [6.8902955, 6.022226, 6.602005, 7.622109, 6.1276193, 6.1459637, 5.2364244, 6.204217],
        [7.431807, 5.4859047, 5.523531, 7.210685, 6.397503, 6.501132, 5.222248, 5.634677],
        [5.3657603, 6.0170417, 6.973767, 7.593855, 6.3791842, 6.097245, 8.040236, 5.457395],
        [6.618291, 6.1197324, 6.011822, 7.8692803, 7.8235693, 7.792012, 6.8188024, 5.8027353]
    ]];
    let current_output8: Array3<f32> = conv_layer8.convolve(&test_input8);

    assert!(
        arr_allclose(&current_output8, &target_output8),
        "{:?} was not equal to {:?}",
        current_output8,
        target_output8
    );

    let test_input9 = array![
        [
            [
                0.4171188, 0.15740211, 0.42292982, 0.54084134, 0.6246967, 0.16602974, 0.75747913,
                0.51063865, 0.25472447, 0.66492975
            ],
            [
                0.13672462, 0.8798877, 0.584571, 0.32541806, 0.8543414, 0.04858193, 0.62667716,
                0.5988572, 0.8094736, 0.29621908
            ],
            [
                0.7817938, 0.35345063, 0.4491099, 0.7036799, 0.66168624, 0.41794768, 0.8909816,
                0.6967979, 0.75464064, 0.15431848
            ],
            [
                0.87579244, 0.53754663, 0.6797737, 0.08134871, 0.93320847, 0.03809474, 0.7867202,
                0.7863488, 0.39982173, 0.8987073
            ],
            [
                0.742261, 0.4782574, 0.49556065, 0.34966558, 0.6777289, 0.0573609, 0.15022676,
                0.7120909, 0.18296848, 0.5212063
            ],
            [
                0.45965454, 0.63527644, 0.39238515, 0.16471672, 0.04206449, 0.2356948, 0.08041501,
                0.5044555, 0.2873256, 0.7233747
            ],
            [
                0.514743, 0.6292863, 0.09462127, 0.06431016, 0.58759433, 0.21980144, 0.8472264,
                0.3531883, 0.7503538, 0.4653744
            ],
            [
                0.9875905, 0.37862286, 0.9620671, 0.75507283, 0.10567724, 0.8472397, 0.9672113,
                0.3842727, 0.3282922, 0.3052412
            ],
            [
                0.04119791, 0.13365868, 0.93408334, 0.40976977, 0.28116077, 0.14792818, 0.09807894,
                0.12152596, 0.95614773, 0.7602087
            ],
            [
                0.97631705, 0.48662946, 0.77797663, 0.34835714, 0.5305259, 0.29444507, 0.9532204,
                0.6382999, 0.937352, 0.8417525
            ],
            [
                0.6993321, 0.9671642, 0.29777643, 0.49220118, 0.82510734, 0.20135997, 0.5874371,
                0.95850575, 0.7735656, 0.31319898
            ],
            [
                0.34135282, 0.57593447, 0.76145005, 0.67546684, 0.412044, 0.8994237, 0.69459295,
                0.95296425, 0.8826578, 0.6112075
            ],
            [
                0.88056743, 0.4120727, 0.42224765, 0.40275672, 0.31289253, 0.85605, 0.50402254,
                0.594723, 0.28942943, 0.1757779
            ],
            [
                0.7137983, 0.9091735, 0.3410004, 0.7846004, 0.9584728, 0.59341496, 0.85196227,
                0.11542477, 0.070237, 0.8144841
            ],
            [
                0.5670808, 0.84016347, 0.10123584, 0.005051, 0.55897933, 0.5162179, 0.76241785,
                0.01278013, 0.5541978, 0.27330735
            ]
        ],
        [
            [
                0.48332873, 0.04401799, 0.4798304, 0.4826352, 0.70394504, 0.4649844, 0.91581804,
                0.6296097, 0.48130554, 0.01730853
            ],
            [
                0.73892075, 0.6356067, 0.96449506, 0.10196066, 0.9710584, 0.16233306, 0.04012987,
                0.7548613, 0.41193417, 0.8657136
            ],
            [
                0.5514695, 0.04673942, 0.16020048, 0.09309967, 0.75922126, 0.85175455, 0.77955645,
                0.44887283, 0.81323266, 0.56885445
            ],
            [
                0.9531821, 0.23263316, 0.74194604, 0.6701397, 0.6966494, 0.09368633, 0.5103296,
                0.5674216, 0.32429224, 0.1602559
            ],
            [
                0.14132027, 0.5697997, 0.47647962, 0.47131556, 0.90295655, 0.8237337, 0.66375136,
                0.48833874, 0.10698621, 0.922373
            ],
            [
                0.3666493, 0.17045999, 0.8330784, 0.39931872, 0.4967664, 0.4160782, 0.65951824,
                0.5347742, 0.93752426, 0.5849598
            ],
            [
                0.9262702, 0.3348592, 0.39446756, 0.30438656, 0.62632954, 0.00100083, 0.3598078,
                0.25727805, 0.4171089, 0.71255463
            ],
            [
                0.22617352, 0.5094745, 0.49016726, 0.45673513, 0.2728893, 0.55496895, 0.64802116,
                0.94689554, 0.2643334, 0.5038705
            ],
            [
                0.7131295, 0.36297327, 0.21441843, 0.9953925, 0.97598535, 0.83921397, 0.3419448,
                0.29696485, 0.47523478, 0.78506595
            ],
            [
                0.26839125, 0.70590997, 0.2436962, 0.8761795, 0.6565131, 0.775589, 0.8754091,
                0.5125449, 0.6224484, 0.9414587
            ],
            [
                0.36183158, 0.20102102, 0.05473179, 0.959262, 0.77621484, 0.40562743, 0.69954115,
                0.9031762, 0.5868046, 0.23300357
            ],
            [
                0.24274388, 0.8085596, 0.58241343, 0.32411024, 0.8408538, 0.8364367, 0.8441607,
                0.72987187, 0.44925806, 0.96117723
            ],
            [
                0.9483631, 0.27696642, 0.96611446, 0.19091433, 0.2396215, 0.27247688, 0.5852498,
                0.38096267, 0.4529504, 0.88774997
            ],
            [
                0.82603574, 0.80568945, 0.32917508, 0.7272445, 0.7469263, 0.42636782, 0.43363968,
                0.13354255, 0.35689688, 0.99201185
            ],
            [
                0.68718493, 0.55920875, 0.2636, 0.5576874, 0.35369453, 0.5906877, 0.07249359,
                0.4782056, 0.04795831, 0.8815459
            ]
        ],
        [
            [
                0.169661, 0.33348852, 0.90991354, 0.5674032, 0.12639284, 0.36747122, 0.02039539,
                0.55201155, 0.324559, 0.77949584
            ],
            [
                0.02376527, 0.22369854, 0.7977554, 0.8232674, 0.505133, 0.651015, 0.8986551,
                0.9230523, 0.11411006, 0.3099813
            ],
            [
                0.9309671, 0.2836077, 0.0033604, 0.8027366, 0.98626304, 0.6952307, 0.25186005,
                0.443149, 0.85127234, 0.29611066
            ],
            [
                0.5536974, 0.527793, 0.01885639, 0.42471457, 0.5644708, 0.5213245, 0.05583452,
                0.06023929, 0.11995548, 0.33672985
            ],
            [
                0.06929818, 0.11632108, 0.7417032, 0.9838283, 0.67075133, 0.36602104, 0.17951131,
                0.85454535, 0.61914563, 0.6521379
            ],
            [
                0.99957263, 0.32906872, 0.24240606, 0.18019378, 0.8137173, 0.9648439, 0.8111227,
                0.6593625, 0.7753997, 0.73156756
            ],
            [
                0.2988856, 0.68505603, 0.7353366, 0.65234166, 0.4344534, 0.6921164, 0.8860002,
                0.25435162, 0.7314984, 0.95627284
            ],
            [
                0.7417731, 0.18060002, 0.45882288, 0.9690947, 0.70271283, 0.91851914, 0.21997769,
                0.74909705, 0.3491095, 0.37622157
            ],
            [
                0.14328648, 0.68727154, 0.91439056, 0.3781238, 0.36442432, 0.625257, 0.9480976,
                0.41873357, 0.25687808, 0.43647116
            ],
            [
                0.08090039, 0.99664134, 0.6407154, 0.19121103, 0.5287279, 0.24550702, 0.341333,
                0.5005919, 0.14624618, 0.44898897
            ],
            [
                0.24969168, 0.799053, 0.82243276, 0.60974807, 0.31383017, 0.25492424, 0.11803117,
                0.8240507, 0.50450677, 0.8095447
            ],
            [
                0.6729072, 0.7018395, 0.3309161, 0.3949699, 0.76511306, 0.38108206, 0.40802577,
                0.07076582, 0.8213124, 0.3876701
            ],
            [
                0.8974017, 0.69025475, 0.04551166, 0.4437527, 0.6389319, 0.19161025, 0.97299683,
                0.29591832, 0.19683413, 0.5229589
            ],
            [
                0.8461087, 0.79286724, 0.17503856, 0.48829708, 0.66009414, 0.9874962, 0.02657376,
                0.5618466, 0.27853093, 0.6685596
            ],
            [
                0.73198694, 0.27009216, 0.9657689, 0.9025137, 0.9429427, 0.05157892, 0.45541912,
                0.76319754, 0.5815242, 0.29006037
            ]
        ]
    ];

    let kernel9: Array4<f32> = Array::from_shape_vec(
        (1, 3, 3, 3),
        vec![
            0.23429064, 0.24505253, 0.38600448, 0.4523076, 0.5665328, 0.18260308, 0.06818328,
            0.1555473, 0.14173116, 0.18781203, 0.8169458, 0.19166702, 0.29750833, 0.8011893,
            0.82895696, 0.6987018, 0.18986696, 0.8877225, 0.94584274, 0.03939039, 0.46490034,
            0.17197818, 0.75747067, 0.03558233, 0.6090657, 0.13435428, 0.12655611,
        ],
    )
    .unwrap();
    let conv_layer9 = ConvolutionLayer::new(kernel9, 1, Padding::Valid);
    let target_output9: Array3<f32> = array![[
        [4.765367, 4.9793973, 5.716891, 6.1450114, 5.7945566, 5.520855, 5.5799065, 5.500949],
        [5.0958104, 4.474265, 5.959083, 5.7598023, 5.679087, 6.10343, 5.815667, 6.026574],
        [5.186125, 4.1987424, 5.9297357, 7.240273, 6.175729, 5.042979, 4.9871297, 5.3210783],
        [5.0773745, 5.622767, 5.0889277, 5.1952868, 5.147296, 5.13545, 5.419324, 4.808727],
        [4.328046, 4.63972, 5.4420896, 5.3991137, 4.9387727, 4.81543, 5.203238, 6.4069157],
        [6.3967147, 4.457149, 4.5408196, 4.8955307, 5.678359, 6.4588504, 5.7939544, 5.752138],
        [4.336519, 5.7061477, 6.8031416, 5.6641817, 5.581082, 5.156429, 6.056588, 5.562186],
        [5.3942766, 6.034166, 6.222049, 6.658738, 6.6548605, 6.806502, 4.756171, 5.879004],
        [4.669356, 6.3603854, 6.5911713, 6.243346, 5.577167, 6.0501227, 6.2134085, 5.9954467],
        [5.4873495, 5.855699, 5.9464564, 6.286898, 6.2058163, 6.026144, 6.765242, 6.932111],
        [5.9413, 6.2807426, 5.158894, 5.329492, 5.6686444, 6.1943493, 6.043779, 6.86108],
        [6.355531, 5.6329055, 5.866098, 5.4491763, 5.877315, 5.6096354, 4.843722, 5.192154],
        [6.823613, 4.9846916, 4.899082, 5.552375, 6.312782, 4.0658994, 4.4563255, 4.313222]
    ]];
    let current_output9: Array3<f32> = conv_layer9.convolve(&test_input9);

    assert!(
        arr_allclose(&current_output9, &target_output9),
        "{:?} was not equal to {:?}",
        current_output9,
        target_output9
    );
}
